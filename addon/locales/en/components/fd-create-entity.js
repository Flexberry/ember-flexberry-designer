export default {
  caption: 'Create class',
  'enum-caption': 'Enumeration',
  'enum-it-is': ' – data type consisting of a set of named values',
  'entity-caption': 'Entity',
  'entity-it-is': ' – a class representing a real-world object which instances should be stored in the application database',
  'editor-caption': 'Editor',
  'editor-it-is': 'Editor is...',
  'list-caption': 'List',
  'list-it-is': 'List is...',
  'bs-caption': 'Business Server',
  'bs-it-is': ' – a class which code is called when instances of related entities are changing',
  'type-caption': 'Type',
  'type-it-is': ' – complex data type or a real-world object which instances should not be stored in the application database',
  'typedef-caption': 'Typedef',
  'typedef-it-is': ' – data type that can be mapped manually to data types generated in a database or application',
  'interface-caption': 'Interface',
  'interface-it-is': ' – contract as a list of public properties and methods to be implemented in related entities or types',
  'external-caption': 'External entity',
  'external-it-is': ' – a class that is not explicitly declared in the model but will be available in source code, including an entity from another project',
  'extinterface-caption': 'External Interface',
  'extinterface-it-is': ' – an interface that is not explicitly declared in the model but will be available in source code, including an interface from another project',
  'application-caption': 'Application',
  'application-it-is': ' – a class that stores general information about the generated application',
  'userform-caption': 'Userform',
  'userform-it-is': ' – a class that represents an «empty»  application form that can also be added to the menu structure',
  'userstereotype-caption': 'Entity with a user stereotype',
  'userstereotype-it-is': ' – a class with arbitrary semantics which source code should not be generated in the application',
};
