"use strict";

/* jshint ignore:start */



/* jshint ignore:end */

define('dummy/adapters/application-offline', ['exports', 'ember-flexberry-data', 'dummy/config/environment'], function (exports, _emberFlexberryData, _dummyConfigEnvironment) {
  exports['default'] = _emberFlexberryData.Adapter.Offline.extend({
    dbName: _dummyConfigEnvironment['default'].APP.offline.dbName
  });
});
define('dummy/adapters/application', ['exports', 'ember-flexberry-data', 'dummy/config/environment'], function (exports, _emberFlexberryData, _dummyConfigEnvironment) {
  exports['default'] = _emberFlexberryData.Adapter.Odata.extend(_emberFlexberryData.Projection.AdapterMixin, {
    host: _dummyConfigEnvironment['default'].APP.backendUrls.api
  });
});
define('dummy/adapters/new-platform-flexberry-services-lock', ['exports', 'ember-flexberry/adapters/new-platform-flexberry-services-lock', 'dummy/config/environment'], function (exports, _emberFlexberryAdaptersNewPlatformFlexberryServicesLock, _dummyConfigEnvironment) {
  exports['default'] = _emberFlexberryAdaptersNewPlatformFlexberryServicesLock['default'].extend({
    /**
      @property host
      @type String
    */
    host: _dummyConfigEnvironment['default'].APP.backendUrls.api
  });
});
define('dummy/adapters/odata', ['exports', 'ember-flexberry-data/adapters/odata'], function (exports, _emberFlexberryDataAdaptersOdata) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataAdaptersOdata['default'];
    }
  });
});
define('dummy/adapters/offline', ['exports', 'ember-flexberry-data/adapters/offline'], function (exports, _emberFlexberryDataAdaptersOffline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataAdaptersOffline['default'];
    }
  });
});
define('dummy/app', ['exports', 'ember', 'dummy/resolver', 'ember-load-initializers', 'dummy/config/environment', 'dummy/models/custom-inflector-rules', 'dummy/utils/fd-preload-stage-metadata'], function (exports, _ember, _dummyResolver, _emberLoadInitializers, _dummyConfigEnvironment, _dummyModelsCustomInflectorRules, _dummyUtilsFdPreloadStageMetadata) {

  var App = undefined;

  _ember['default'].MODEL_FACTORY_INJECTIONS = true;

  App = _ember['default'].Application.extend({
    modulePrefix: _dummyConfigEnvironment['default'].modulePrefix,
    podModulePrefix: _dummyConfigEnvironment['default'].podModulePrefix,
    Resolver: _dummyResolver['default'],

    ready: function ready() {
      var currentContext = this.__container__.lookup('service:fd-current-project-context');
      var stagePk = currentContext.get('singleStageMode') ? currentContext.get('context.stage') : undefined;

      if (stagePk) {
        var store = this.__container__.lookup('service:store');
        (0, _dummyUtilsFdPreloadStageMetadata['default'])(store, stagePk);
      }
    }
  });

  (0, _emberLoadInitializers['default'])(App, _dummyConfigEnvironment['default'].modulePrefix);

  exports['default'] = App;
});
define('dummy/browserify', ['exports', 'npm:dexie', 'npm:node-uuid'], function (exports, _npmDexie, _npmNodeUuid) {});
// Requirement of ember-browserify.
// In order to use NPM pacakges inside the addon, we have to import
// them from somewhere in /app directory.
// See: https://github.com/ef4/ember-browserify#using-ember-browserify-in-addons
define('dummy/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'dummy/config/environment'], function (exports, _emberCliAppVersionComponentsAppVersion, _dummyConfigEnvironment) {

  var name = _dummyConfigEnvironment['default'].APP.name;
  var version = _dummyConfigEnvironment['default'].APP.version;

  exports['default'] = _emberCliAppVersionComponentsAppVersion['default'].extend({
    version: version,
    name: name
  });
});
define('dummy/components/block-slot', ['exports', 'ember-block-slots/components/block-slot'], function (exports, _emberBlockSlotsComponentsBlockSlot) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberBlockSlotsComponentsBlockSlot['default'];
    }
  });
});
define('dummy/components/colsconfig-dialog-content', ['exports', 'ember-flexberry/components/colsconfig-dialog-content'], function (exports, _emberFlexberryComponentsColsconfigDialogContent) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsColsconfigDialogContent['default'];
    }
  });
});
define('dummy/components/ember-jstree', ['exports', 'ember-cli-jstree/components/ember-jstree'], function (exports, _emberCliJstreeComponentsEmberJstree) {
  exports['default'] = _emberCliJstreeComponentsEmberJstree['default'];
});
define('dummy/components/fd-config-panel', ['exports', 'ember-flexberry-designer/components/fd-config-panel'], function (exports, _emberFlexberryDesignerComponentsFdConfigPanel) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdConfigPanel['default'];
    }
  });
});
define('dummy/components/fd-editform-control', ['exports', 'ember-flexberry-designer/components/fd-editform-control'], function (exports, _emberFlexberryDesignerComponentsFdEditformControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdEditformControl['default'];
    }
  });
});
define('dummy/components/fd-editform-row', ['exports', 'ember-flexberry-designer/components/fd-editform-row'], function (exports, _emberFlexberryDesignerComponentsFdEditformRow) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdEditformRow['default'];
    }
  });
});
define('dummy/components/fd-file', ['exports', 'ember-flexberry-designer/components/fd-file'], function (exports, _emberFlexberryDesignerComponentsFdFile) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdFile['default'];
    }
  });
});
define('dummy/components/fd-groupedit', ['exports', 'ember-flexberry-designer/components/fd-groupedit'], function (exports, _emberFlexberryDesignerComponentsFdGroupedit) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdGroupedit['default'];
    }
  });
});
define('dummy/components/fd-lookup', ['exports', 'ember-flexberry-designer/components/fd-lookup'], function (exports, _emberFlexberryDesignerComponentsFdLookup) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdLookup['default'];
    }
  });
});
define('dummy/components/fd-object-list-view', ['exports', 'ember-flexberry-designer/components/fd-object-list-view'], function (exports, _emberFlexberryDesignerComponentsFdObjectListView) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdObjectListView['default'];
    }
  });
});
define('dummy/components/fd-objectlistview', ['exports', 'ember-flexberry-designer/components/fd-objectlistview'], function (exports, _emberFlexberryDesignerComponentsFdObjectlistview) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdObjectlistview['default'];
    }
  });
});
define('dummy/components/fd-tabs', ['exports', 'ember-flexberry-designer/components/fd-tabs'], function (exports, _emberFlexberryDesignerComponentsFdTabs) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdTabs['default'];
    }
  });
});
define('dummy/components/fd-uml-diagram', ['exports', 'ember-flexberry-designer/components/fd-uml-diagram'], function (exports, _emberFlexberryDesignerComponentsFdUmlDiagram) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdUmlDiagram['default'];
    }
  });
});
define('dummy/components/fd-visual-edit-control-tree', ['exports', 'ember-flexberry-designer/components/fd-visual-edit-control-tree'], function (exports, _emberFlexberryDesignerComponentsFdVisualEditControlTree) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdVisualEditControlTree['default'];
    }
  });
});
define('dummy/components/fd-visual-edit-control', ['exports', 'ember-flexberry-designer/components/fd-visual-edit-control'], function (exports, _emberFlexberryDesignerComponentsFdVisualEditControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdVisualEditControl['default'];
    }
  });
});
define('dummy/components/fd-visual-edit-form', ['exports', 'ember-flexberry-designer/components/fd-visual-edit-form'], function (exports, _emberFlexberryDesignerComponentsFdVisualEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdVisualEditForm['default'];
    }
  });
});
define('dummy/components/fd-visual-listform-form', ['exports', 'ember-flexberry-designer/components/fd-visual-listform-form'], function (exports, _emberFlexberryDesignerComponentsFdVisualListformForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsFdVisualListformForm['default'];
    }
  });
});
define('dummy/components/flexberry-button', ['exports', 'ember-flexberry/components/flexberry-button'], function (exports, _emberFlexberryComponentsFlexberryButton) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryButton['default'];
    }
  });
});
define('dummy/components/flexberry-checkbox', ['exports', 'ember-flexberry/components/flexberry-checkbox'], function (exports, _emberFlexberryComponentsFlexberryCheckbox) {
  exports['default'] = _emberFlexberryComponentsFlexberryCheckbox['default'];
});
define('dummy/components/flexberry-colorpicker', ['exports', 'ember-flexberry/components/flexberry-colorpicker'], function (exports, _emberFlexberryComponentsFlexberryColorpicker) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryColorpicker['default'];
    }
  });
});
define('dummy/components/flexberry-datepicker', ['exports', 'ember-flexberry/components/flexberry-datepicker'], function (exports, _emberFlexberryComponentsFlexberryDatepicker) {
  exports['default'] = _emberFlexberryComponentsFlexberryDatepicker['default'];
});
define('dummy/components/flexberry-ddau-checkbox', ['exports', 'ember-flexberry/components/flexberry-ddau-checkbox'], function (exports, _emberFlexberryComponentsFlexberryDdauCheckbox) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryDdauCheckbox['default'];
    }
  });
});
define('dummy/components/flexberry-ddau-slider', ['exports', 'ember-flexberry/components/flexberry-ddau-slider'], function (exports, _emberFlexberryComponentsFlexberryDdauSlider) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryDdauSlider['default'];
    }
  });
});
define('dummy/components/flexberry-dialog', ['exports', 'ember-flexberry/components/flexberry-dialog'], function (exports, _emberFlexberryComponentsFlexberryDialog) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryDialog['default'];
    }
  });
});
define('dummy/components/flexberry-dropdown', ['exports', 'ember-flexberry/components/flexberry-dropdown'], function (exports, _emberFlexberryComponentsFlexberryDropdown) {
  exports['default'] = _emberFlexberryComponentsFlexberryDropdown['default'];
});
define('dummy/components/flexberry-error', ['exports', 'ember-flexberry/components/flexberry-error'], function (exports, _emberFlexberryComponentsFlexberryError) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryError['default'];
    }
  });
});
define('dummy/components/flexberry-field', ['exports', 'ember-flexberry/components/flexberry-field'], function (exports, _emberFlexberryComponentsFlexberryField) {
  exports['default'] = _emberFlexberryComponentsFlexberryField['default'];
});
define('dummy/components/flexberry-file', ['exports', 'ember-flexberry/components/flexberry-file'], function (exports, _emberFlexberryComponentsFlexberryFile) {
  exports['default'] = _emberFlexberryComponentsFlexberryFile['default'];
});
define('dummy/components/flexberry-groupedit', ['exports', 'ember-flexberry/components/flexberry-groupedit'], function (exports, _emberFlexberryComponentsFlexberryGroupedit) {
  exports['default'] = _emberFlexberryComponentsFlexberryGroupedit['default'];
});
define('dummy/components/flexberry-icon', ['exports', 'ember-flexberry/components/flexberry-icon'], function (exports, _emberFlexberryComponentsFlexberryIcon) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryIcon['default'];
    }
  });
});
define('dummy/components/flexberry-jsonarea', ['exports', 'ember-flexberry/components/flexberry-jsonarea'], function (exports, _emberFlexberryComponentsFlexberryJsonarea) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryJsonarea['default'];
    }
  });
});
define('dummy/components/flexberry-lookup', ['exports', 'ember-flexberry/components/flexberry-lookup'], function (exports, _emberFlexberryComponentsFlexberryLookup) {
  exports['default'] = _emberFlexberryComponentsFlexberryLookup['default'];
});
define('dummy/components/flexberry-menu', ['exports', 'ember-flexberry/components/flexberry-menu'], function (exports, _emberFlexberryComponentsFlexberryMenu) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryMenu['default'];
    }
  });
});
define('dummy/components/flexberry-menuitem', ['exports', 'ember-flexberry/components/flexberry-menuitem'], function (exports, _emberFlexberryComponentsFlexberryMenuitem) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryMenuitem['default'];
    }
  });
});
define('dummy/components/flexberry-objectlistview', ['exports', 'ember-flexberry/components/flexberry-objectlistview'], function (exports, _emberFlexberryComponentsFlexberryObjectlistview) {
  exports['default'] = _emberFlexberryComponentsFlexberryObjectlistview['default'];
});
define('dummy/components/flexberry-simpledatetime', ['exports', 'ember-flexberry/components/flexberry-simpledatetime'], function (exports, _emberFlexberryComponentsFlexberrySimpledatetime) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberrySimpledatetime['default'];
    }
  });
});
define('dummy/components/flexberry-simpleolv', ['exports', 'ember-flexberry/components/flexberry-simpleolv'], function (exports, _emberFlexberryComponentsFlexberrySimpleolv) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberrySimpleolv['default'];
    }
  });
});
define('dummy/components/flexberry-tab-bar', ['exports', 'ember-flexberry/components/flexberry-tab-bar'], function (exports, _emberFlexberryComponentsFlexberryTabBar) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryTabBar['default'];
    }
  });
});
define('dummy/components/flexberry-textarea', ['exports', 'ember-flexberry/components/flexberry-textarea'], function (exports, _emberFlexberryComponentsFlexberryTextarea) {
  exports['default'] = _emberFlexberryComponentsFlexberryTextarea['default'];
});
define('dummy/components/flexberry-textbox', ['exports', 'ember-flexberry/components/flexberry-textbox'], function (exports, _emberFlexberryComponentsFlexberryTextbox) {
  exports['default'] = _emberFlexberryComponentsFlexberryTextbox['default'];
});
define('dummy/components/flexberry-toggler', ['exports', 'ember-flexberry/components/flexberry-toggler'], function (exports, _emberFlexberryComponentsFlexberryToggler) {
  exports['default'] = _emberFlexberryComponentsFlexberryToggler['default'];
});
define('dummy/components/flexberry-tree', ['exports', 'ember-flexberry/components/flexberry-tree'], function (exports, _emberFlexberryComponentsFlexberryTree) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryTree['default'];
    }
  });
});
define('dummy/components/flexberry-treenode', ['exports', 'ember-flexberry/components/flexberry-treenode'], function (exports, _emberFlexberryComponentsFlexberryTreenode) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryTreenode['default'];
    }
  });
});
define('dummy/components/flexberry-validationmessage', ['exports', 'ember-flexberry/components/flexberry-validationmessage'], function (exports, _emberFlexberryComponentsFlexberryValidationmessage) {
  exports['default'] = _emberFlexberryComponentsFlexberryValidationmessage['default'];
});
define('dummy/components/flexberry-validationsummary', ['exports', 'ember-flexberry/components/flexberry-validationsummary'], function (exports, _emberFlexberryComponentsFlexberryValidationsummary) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFlexberryValidationsummary['default'];
    }
  });
});
define('dummy/components/form-load-time-tracker', ['exports', 'ember-flexberry/components/form-load-time-tracker'], function (exports, _emberFlexberryComponentsFormLoadTimeTracker) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsFormLoadTimeTracker['default'];
    }
  });
});
define('dummy/components/groupedit-toolbar', ['exports', 'ember-flexberry/components/groupedit-toolbar'], function (exports, _emberFlexberryComponentsGroupeditToolbar) {
  exports['default'] = _emberFlexberryComponentsGroupeditToolbar['default'];
});
define('dummy/components/mobile/flexberry-file', ['exports', 'ember-flexberry/components/mobile/flexberry-file'], function (exports, _emberFlexberryComponentsMobileFlexberryFile) {
  exports['default'] = _emberFlexberryComponentsMobileFlexberryFile['default'];
});
define('dummy/components/mobile/flexberry-groupedit', ['exports', 'ember-flexberry/components/mobile/flexberry-groupedit'], function (exports, _emberFlexberryComponentsMobileFlexberryGroupedit) {
  exports['default'] = _emberFlexberryComponentsMobileFlexberryGroupedit['default'];
});
define('dummy/components/mobile/flexberry-objectlistview', ['exports', 'ember-flexberry/components/mobile/flexberry-objectlistview'], function (exports, _emberFlexberryComponentsMobileFlexberryObjectlistview) {
  exports['default'] = _emberFlexberryComponentsMobileFlexberryObjectlistview['default'];
});
define('dummy/components/mobile/object-list-view-row', ['exports', 'ember-flexberry/components/mobile/object-list-view-row'], function (exports, _emberFlexberryComponentsMobileObjectListViewRow) {
  exports['default'] = _emberFlexberryComponentsMobileObjectListViewRow['default'];
});
define('dummy/components/modal-dialog', ['exports', 'ember-flexberry/components/modal-dialog'], function (exports, _emberFlexberryComponentsModalDialog) {
  exports['default'] = _emberFlexberryComponentsModalDialog['default'];
});
define('dummy/components/object-list-view-cell', ['exports', 'ember-flexberry/components/object-list-view-cell'], function (exports, _emberFlexberryComponentsObjectListViewCell) {
  exports['default'] = _emberFlexberryComponentsObjectListViewCell['default'];
});
define('dummy/components/object-list-view-row', ['exports', 'ember-flexberry/components/object-list-view-row'], function (exports, _emberFlexberryComponentsObjectListViewRow) {
  exports['default'] = _emberFlexberryComponentsObjectListViewRow['default'];
});
define('dummy/components/object-list-view-single-column-cell', ['exports', 'ember-flexberry/components/object-list-view-single-column-cell'], function (exports, _emberFlexberryComponentsObjectListViewSingleColumnCell) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsObjectListViewSingleColumnCell['default'];
    }
  });
});
define('dummy/components/object-list-view', ['exports', 'ember-flexberry/components/object-list-view'], function (exports, _emberFlexberryComponentsObjectListView) {
  exports['default'] = _emberFlexberryComponentsObjectListView['default'];
});
define('dummy/components/olv-setconfigdialogbutton', ['exports', 'ember-flexberry/components/olv-setconfigdialogbutton'], function (exports, _emberFlexberryComponentsOlvSetconfigdialogbutton) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryComponentsOlvSetconfigdialogbutton['default'];
    }
  });
});
define('dummy/components/olv-toolbar', ['exports', 'ember-flexberry/components/olv-toolbar'], function (exports, _emberFlexberryComponentsOlvToolbar) {
  exports['default'] = _emberFlexberryComponentsOlvToolbar['default'];
});
define('dummy/components/ui-accordion', ['exports', 'semantic-ui-ember/components/ui-accordion'], function (exports, _semanticUiEmberComponentsUiAccordion) {
  exports['default'] = _semanticUiEmberComponentsUiAccordion['default'];
});
define('dummy/components/ui-checkbox', ['exports', 'semantic-ui-ember/components/ui-checkbox'], function (exports, _semanticUiEmberComponentsUiCheckbox) {
  exports['default'] = _semanticUiEmberComponentsUiCheckbox['default'];
});
define('dummy/components/ui-dropdown-item', ['exports', 'semantic-ui-ember/components/ui-dropdown-item'], function (exports, _semanticUiEmberComponentsUiDropdownItem) {
  exports['default'] = _semanticUiEmberComponentsUiDropdownItem['default'];
});
define('dummy/components/ui-dropdown', ['exports', 'semantic-ui-ember/components/ui-dropdown'], function (exports, _semanticUiEmberComponentsUiDropdown) {
  exports['default'] = _semanticUiEmberComponentsUiDropdown['default'];
});
define('dummy/components/ui-embed', ['exports', 'semantic-ui-ember/components/ui-embed'], function (exports, _semanticUiEmberComponentsUiEmbed) {
  exports['default'] = _semanticUiEmberComponentsUiEmbed['default'];
});
define('dummy/components/ui-message', ['exports', 'ember-flexberry/components/ui-message'], function (exports, _emberFlexberryComponentsUiMessage) {
  exports['default'] = _emberFlexberryComponentsUiMessage['default'];
});
define('dummy/components/ui-modal', ['exports', 'semantic-ui-ember/components/ui-modal'], function (exports, _semanticUiEmberComponentsUiModal) {
  exports['default'] = _semanticUiEmberComponentsUiModal['default'];
});
define('dummy/components/ui-nag', ['exports', 'semantic-ui-ember/components/ui-nag'], function (exports, _semanticUiEmberComponentsUiNag) {
  exports['default'] = _semanticUiEmberComponentsUiNag['default'];
});
define('dummy/components/ui-popup', ['exports', 'semantic-ui-ember/components/ui-popup'], function (exports, _semanticUiEmberComponentsUiPopup) {
  exports['default'] = _semanticUiEmberComponentsUiPopup['default'];
});
define('dummy/components/ui-progress', ['exports', 'semantic-ui-ember/components/ui-progress'], function (exports, _semanticUiEmberComponentsUiProgress) {
  exports['default'] = _semanticUiEmberComponentsUiProgress['default'];
});
define('dummy/components/ui-radio', ['exports', 'semantic-ui-ember/components/ui-radio'], function (exports, _semanticUiEmberComponentsUiRadio) {
  exports['default'] = _semanticUiEmberComponentsUiRadio['default'];
});
define('dummy/components/ui-rating', ['exports', 'semantic-ui-ember/components/ui-rating'], function (exports, _semanticUiEmberComponentsUiRating) {
  exports['default'] = _semanticUiEmberComponentsUiRating['default'];
});
define('dummy/components/ui-search', ['exports', 'semantic-ui-ember/components/ui-search'], function (exports, _semanticUiEmberComponentsUiSearch) {
  exports['default'] = _semanticUiEmberComponentsUiSearch['default'];
});
define('dummy/components/ui-shape', ['exports', 'semantic-ui-ember/components/ui-shape'], function (exports, _semanticUiEmberComponentsUiShape) {
  exports['default'] = _semanticUiEmberComponentsUiShape['default'];
});
define('dummy/components/ui-sidebar', ['exports', 'semantic-ui-ember/components/ui-sidebar'], function (exports, _semanticUiEmberComponentsUiSidebar) {
  exports['default'] = _semanticUiEmberComponentsUiSidebar['default'];
});
define('dummy/components/ui-sticky', ['exports', 'semantic-ui-ember/components/ui-sticky'], function (exports, _semanticUiEmberComponentsUiSticky) {
  exports['default'] = _semanticUiEmberComponentsUiSticky['default'];
});
define('dummy/components/ui-tab-menu', ['exports', 'ember-flexberry-designer/components/ui-tab-menu'], function (exports, _emberFlexberryDesignerComponentsUiTabMenu) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsUiTabMenu['default'];
    }
  });
});
define('dummy/components/ui-tab-segment', ['exports', 'ember-flexberry-designer/components/ui-tab-segment'], function (exports, _emberFlexberryDesignerComponentsUiTabSegment) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerComponentsUiTabSegment['default'];
    }
  });
});
define('dummy/components/yield-slot', ['exports', 'ember-block-slots/components/yield-slot'], function (exports, _emberBlockSlotsComponentsYieldSlot) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberBlockSlotsComponentsYieldSlot['default'];
    }
  });
});
define('dummy/controllers/activity-diagram-primitives-demo', ['exports', 'ember', 'npm:jointjs'], function (exports, _ember, _npmJointjs) {
  exports['default'] = _ember['default'].Controller.extend({
    actions: {
      printDiagram: function printDiagram() {
        var _this = this;
        _this.graph = new _npmJointjs['default'].dia.Graph();

        var paper = document.getElementById('paper');
        var minX = 16384;
        var minY = 16384;
        var maxX = 0;
        var maxY = 0;
        var sidebar = _ember['default'].$('.ui.sidebar.main.menu');
        var sidebarWidth = sidebar.hasClass('visible') ? sidebar.width() : 0;

        if (minX > maxX) {
          maxX = paper && 'offsetWidth' in paper ? paper.offsetWidth : 1024;
          maxX += sidebarWidth;
          maxY = 840;
        } else {
          maxX = minX + maxX + sidebarWidth;
          maxY = minY + maxY;
        }

        _this.paper = new _npmJointjs['default'].dia.Paper({
          el: paper,
          width: maxX,
          height: maxY,
          gridSize: 1,
          model: _this.graph
        });

        var linkNoteConnector = new _npmJointjs['default'].shapes.flexberryUml.NoteConnector({
          source: { x: 100, y: 100 },
          target: { x: 300, y: 100 },
          attrs: { path: { title: 'Коннектор комментария (Note Connector)' } }
        });

        var linkObjectFlow = new _npmJointjs['default'].shapes.flexberryUml.ObjectFlow({
          source: { x: 100, y: 150 },
          target: { x: 300, y: 150 },
          labels: [{
            attrs: { text: { text: 'Label' } }
          }],
          attrs: {
            path: { title: 'Изменение объекта (Object Flow)' }
          }
        });

        var linkTransition = new _npmJointjs['default'].shapes.flexberryUml.Transition({
          source: { x: 100, y: 250 },
          target: { x: 300, y: 250 },
          labels: [{
            attrs: { text: { text: 'Label' } }
          }],
          attrs: { path: { title: 'Переход (Transition)' } }
        });

        var сomplexTransitionHorizon = new _npmJointjs['default'].shapes.flexberryUml.ComplexTransitionHorizon({
          size: { width: 100 },
          position: { x: 100, y: 300 },
          attrs: {
            text: { text: 'Some text' },
            '.rotatable': { title: 'Синхронизатор/разветвитель (Complex Transition)' } }
        });

        var сomplexTransitionVertical = new _npmJointjs['default'].shapes.flexberryUml.ComplexTransitionVertical({
          size: { height: 100 },
          position: { x: 100, y: 350 },
          attrs: {
            text: { text: 'Some text' },
            '.rotatable': { title: 'Синхронизатор/разветвитель (Complex Transition)' } }
        });

        _this.graph.addCell([linkNoteConnector, linkObjectFlow, linkTransition, сomplexTransitionHorizon, сomplexTransitionVertical]);

        var note = new _npmJointjs['default'].shapes.flexberryUml.Note({
          position: { x: 450, y: 100 },
          size: { width: 100, height: 50 },
          name: 'note',
          attrs: { '.rotatable': { title: 'Комментарий (Note)' } }
        });

        var SignalReceiptRight = new _npmJointjs['default'].shapes.flexberryUml.SignalReceiptRight({
          position: { x: 450, y: 200 },
          name: ['Receipt1', 'text'],
          attrs: {
            '.rotatable': { title: 'Получение сигнала (Signal Receipt)' }
          }
        });

        var SignalReceiptLeft = new _npmJointjs['default'].shapes.flexberryUml.SignalReceiptLeft({
          position: { x: 450, y: 300 },
          name: 'Receipt2',
          attrs: {
            '.rotatable': { title: 'Получение сигнала (Signal Receipt)' }
          }
        });

        var SignalSendingRight = new _npmJointjs['default'].shapes.flexberryUml.SignalSendingRight({
          position: { x: 450, y: 400 },
          name: ['Sending1', 'text', 'moreText'],
          attrs: {
            '.rotatable': { title: 'Отправка сигнала (Signal Sending)' }
          }
        });

        var SignalSendingLeft = new _npmJointjs['default'].shapes.flexberryUml.SignalSendingLeft({
          position: { x: 450, y: 500 },
          name: 'Sending2',
          attrs: {
            '.rotatable': { title: 'Отправка сигнала (Signal Sending)' }
          }
        });

        var startState = new _npmJointjs['default'].shapes.flexberryUml.StartState({
          position: { x: 100, y: 204 },
          attrs: {
            text: { text: 'Start State' }
          }
        });

        var endState = new _npmJointjs['default'].shapes.flexberryUml.EndState({
          position: { x: 150, y: 200 },
          attrs: {
            text: { text: 'End State' }
          }
        });

        var decision = new _npmJointjs['default'].shapes.flexberryUml.Decision({
          position: { x: 600, y: 100 },
          size: { width: 100, height: 50 },
          attrs: {
            text: { text: 'no display text' }
          }
        });

        var objectInState = new _npmJointjs['default'].shapes.flexberryUml.ObjectInState({
          position: { x: 600, y: 200 },
          size: { width: 100, height: 50 },
          name: 'name',
          state: 'state'
        });

        var activeState = new _npmJointjs['default'].shapes.flexberryUml.ActiveState({
          position: { x: 600, y: 300 },
          size: { width: 100, height: 50 },
          name: 'name',
          state: 'state'
        });

        var partition = new _npmJointjs['default'].shapes.flexberryUml.Partition({
          position: { x: 600, y: 350 },
          name: 'partition'
        });

        _this.graph.addCell([note, SignalReceiptRight, SignalReceiptLeft, SignalSendingRight, SignalSendingLeft, startState, endState, decision, objectInState, activeState, partition]);
      }
    }
  });
});
define('dummy/controllers/application', ['exports', 'ember', 'ember-flexberry-designer/mixins/fd-work-panel-toggler'], function (exports, _ember, _emberFlexberryDesignerMixinsFdWorkPanelToggler) {
  exports['default'] = _ember['default'].Controller.extend(_emberFlexberryDesignerMixinsFdWorkPanelToggler['default'], {
    /**
      Link to {{#crossLink "FdCurrentProjectContextService"}}FdCurrentProjectContextService{{/crossLink}}.
       @property currentContext
      @type FdCurrentProjectContextService
    */
    currentContext: _ember['default'].inject.service('fd-current-project-context'),

    sitemap: _ember['default'].computed('i18n.locale', 'currentContext.context.configuration', 'currentContext.context.stage', function () {
      var i18n = this.get('i18n');
      var context = this.get('currentContext.context');
      var singleStageMode = this.get('currentContext.singleStageMode');

      var sitemap = {
        nodes: []
      };

      if (!singleStageMode) {
        sitemap.nodes.push({
          link: 'index',
          caption: i18n.t('forms.application.sitemap.index.caption'),
          title: i18n.t('forms.application.sitemap.index.title')
        });
        sitemap.nodes.push({
          link: 'fd-configuration-list-form',
          caption: i18n.t('forms.application.sitemap.root.fd-configuration-list-form.caption'),
          title: i18n.t('forms.application.sitemap.root.fd-configuration-list-form.title')
        });
        sitemap.nodes.push({
          link: null,
          caption: i18n.t('forms.application.sitemap.root.fd-uml-primitives.caption'),
          title: i18n.t('forms.application.sitemap.root.fd-uml-primitives.title'),
          children: [{
            link: 'class-diagram-primitives-demo',
            caption: i18n.t('forms.application.sitemap.root.class-diagram-primitives-demo.caption'),
            title: i18n.t('forms.application.sitemap.root.class-diagram-primitives-demo.title')
          }, {
            link: 'activity-diagram-primitives-demo',
            caption: i18n.t('forms.application.sitemap.root.activity-diagram-primitives-demo.caption'),
            title: i18n.t('forms.application.sitemap.root.activity-diagram-primitives-demo.title')
          }, {
            link: 'deployment-diagram-primitives-demo',
            caption: i18n.t('forms.application.sitemap.root.deployment-diagram-primitives-demo.caption'),
            title: i18n.t('forms.application.sitemap.root.deployment-diagram-primitives-demo.title')
          }, {
            link: 'statechart-diagram-primitives-demo',
            caption: i18n.t('forms.application.sitemap.root.statechart-diagram-primitives-demo.caption'),
            title: i18n.t('forms.application.sitemap.root.statechart-diagram-primitives-demo.title')
          }, {
            link: 'usecase-diagram-primitives-demo',
            caption: i18n.t('forms.application.sitemap.root.usecase-diagram-primitives-demo.caption'),
            title: i18n.t('forms.application.sitemap.root.usecase-diagram-primitives-demo.title')
          }, {
            link: 'fd-sequence-diagram-primitives-demo',
            caption: i18n.t('forms.application.sitemap.root.sequence-diagram-primitives-demo.caption'),
            title: i18n.t('forms.application.sitemap.root.sequence-diagram-primitives-demo.title')
          }, {
            link: 'collaboration-diagram-primitives-demo',
            caption: i18n.t('forms.application.sitemap.root.collaboration-diagram-primitives-demo.caption'),
            title: i18n.t('forms.application.sitemap.root.collaboration-diagram-primitives-demo.title')
          }]
        });
      }

      if (context.configuration && !singleStageMode) {
        sitemap.nodes.push({
          link: 'fd-stage-list-form',
          caption: i18n.t('forms.application.sitemap.root.fd-stage-list-form.caption'),
          title: i18n.t('forms.application.sitemap.root.fd-stage-list-form.title')
        });
      }

      if (context.stage) {
        sitemap.nodes.push({
          link: 'fd-appstruct-form',
          caption: i18n.t('forms.application.sitemap.root.fd-appstruct-form.caption'),
          title: i18n.t('forms.application.sitemap.root.fd-appstruct-form.title')
        });
        sitemap.nodes.push({
          link: 'fd-generation-process-form.new',
          caption: i18n.t('forms.application.sitemap.root.fd-generation-process-form.caption'),
          title: i18n.t('forms.application.sitemap.root.fd-generation-process-form.title')
        });
        sitemap.nodes.push({
          link: null,
          caption: i18n.t('forms.application.sitemap.root.additional.caption'),
          title: i18n.t('forms.application.sitemap.root.additional.title'),
          children: [{
            link: 'fd-generation-list-form',
            caption: i18n.t('forms.application.sitemap.root.fd-generation-list-form.caption'),
            title: i18n.t('forms.application.sitemap.root.fd-generation-list-form.title')
          }, {
            link: 'fd-system-list-form',
            caption: i18n.t('forms.application.sitemap.root.fd-system-list-form.caption'),
            title: i18n.t('forms.application.sitemap.root.fd-system-list-form.title')
          }, {
            link: 'fd-diagram-list-form',
            caption: i18n.t('forms.application.sitemap.root.fd-diagram-list-form.caption'),
            title: i18n.t('forms.application.sitemap.root.fd-diagram-list-form.title')
          }, {
            link: 'fd-class-list-form',
            caption: i18n.t('forms.application.sitemap.root.fd-class-list-form.caption'),
            title: i18n.t('forms.application.sitemap.root.fd-class-list-form.title')
          }, {
            link: 'fd-association-list-form',
            caption: i18n.t('forms.application.sitemap.root.fd-association-list-form.caption'),
            title: i18n.t('forms.application.sitemap.root.fd-association-list-form.title')
          }, {
            link: 'fd-aggregation-list-form',
            caption: i18n.t('forms.application.sitemap.root.fd-aggregation-list-form.caption'),
            title: i18n.t('forms.application.sitemap.root.fd-aggregation-list-form.title')
          }, {
            link: 'fd-inheritance-list-form',
            caption: i18n.t('forms.application.sitemap.root.fd-inheritance-list-form.caption'),
            title: i18n.t('forms.application.sitemap.root.fd-inheritance-list-form.title')
          }, {
            link: 'fd-view-list-form',
            caption: i18n.t('forms.application.sitemap.root.fd-view-list-form.caption'),
            title: i18n.t('forms.application.sitemap.root.fd-view-list-form.title')
          }]
        });
      }

      return sitemap;
    }),

    /**
      Locales supported by application.
       @property locales
      @type String[]
      @default ['ru', 'en']
    */
    locales: ['ru', 'en'],

    /**
      Handles changes in userSettingsService.isUserSettingsServiceEnabled.
       @method _userSettingsServiceChanged
      @private
    */
    _userSettingsServiceChanged: _ember['default'].observer('userSettingsService.isUserSettingsServiceEnabled', function () {
      this.get('target.router').refresh();
    }),

    /**
      Initializes controller.
    */
    init: function init() {
      this._super.apply(this, arguments);

      var i18n = this.get('i18n');
      if (_ember['default'].isNone(i18n)) {
        return;
      }

      // If i18n.locale is long value like 'ru-RU', 'en-GB', ... this code will return short variant 'ru', 'en', etc.
      var shortCurrentLocale = this.get('i18n.locale').split('-')[0];
      var availableLocales = _ember['default'].A(this.get('locales'));

      // Force current locale to be one of available,
      // if browser's current language is not supported by dummy application,
      // or if browser's current locale is long value like 'ru-RU', 'en-GB', etc.
      if (!availableLocales.contains(shortCurrentLocale)) {
        i18n.set('locale', 'en');
      } else {
        i18n.set('locale', shortCurrentLocale);
      }
    },

    /**
      Service that triggers objectlistview events.
       @property objectlistviewEventsService
      @type Service
    */
    objectlistviewEventsService: _ember['default'].inject.service('objectlistview-events'),

    actions: {
      toggleSidebar: function toggleSidebar() {
        var sidebar = _ember['default'].$('.ui.sidebar.main.menu');

        var objectlistviewEventsService = this.get('objectlistviewEventsService');
        sidebar.sidebar({
          closable: false,
          dimPage: false,
          onHide: function onHide() {
            _ember['default'].$('.sidebar.icon.text-menu-show').removeClass('hidden');
            _ember['default'].$('.sidebar.icon.text-menu-hide').addClass('hidden');
          },
          onHidden: function onHidden() {
            objectlistviewEventsService.updateWidthTrigger();
          },
          onShow: function onShow() {
            objectlistviewEventsService.updateWidthTrigger();
          }
        }).sidebar('toggle');

        if (_ember['default'].$('.inverted.vertical.main.menu').hasClass('visible')) {
          _ember['default'].$('.sidebar.icon.text-menu-show').removeClass('hidden');
          _ember['default'].$('.sidebar.icon.text-menu-hide').addClass('hidden');
        } else {
          _ember['default'].$('.sidebar.icon.text-menu-show').addClass('hidden');
          _ember['default'].$('.sidebar.icon.text-menu-hide').removeClass('hidden');
        }

        _ember['default'].$('.inverted.vertical.main.menu').removeClass('overlay');

        this.send('workPlaceConfig', true);
      },

      toggleSidebarMobile: function toggleSidebarMobile() {
        var sidebar = _ember['default'].$('.ui.sidebar.main.menu');
        var objectlistviewEventsService = this.get('objectlistviewEventsService');
        sidebar.sidebar({
          onHide: function onHide() {
            _ember['default'].$('.sidebar.icon.text-menu-show').removeClass('hidden');
            _ember['default'].$('.sidebar.icon.text-menu-hide').addClass('hidden');
          },
          onHidden: function onHidden() {
            objectlistviewEventsService.updateWidthTrigger();
          },
          onShow: function onShow() {
            objectlistviewEventsService.updateWidthTrigger();
          }
        }).sidebar('toggle');

        if (_ember['default'].$('.inverted.vertical.main.menu').hasClass('visible')) {
          _ember['default'].$('.sidebar.icon.text-menu-show').removeClass('hidden');
          _ember['default'].$('.sidebar.icon.text-menu-hide').addClass('hidden');
          _ember['default'].$('.bgw-opacity').addClass('hidden');
        } else {
          _ember['default'].$('.sidebar.icon.text-menu-show').addClass('hidden');
          _ember['default'].$('.sidebar.icon.text-menu-hide').removeClass('hidden');
          _ember['default'].$('.bgw-opacity').removeClass('hidden');
        }
      }
    }
  });
});
define('dummy/controllers/class-diagram-primitives-demo', ['exports', 'ember', 'npm:jointjs'], function (exports, _ember, _npmJointjs) {
  exports['default'] = _ember['default'].Controller.extend({
    actions: {
      printDiagram: function printDiagram() {
        var _this = this;
        _this.graph = new _npmJointjs['default'].dia.Graph();

        var paper = document.getElementById('paper');
        var minX = 16384;
        var minY = 16384;
        var maxX = 0;
        var maxY = 0;
        var sidebar = _ember['default'].$('.ui.sidebar.main.menu');
        var sidebarWidth = sidebar.hasClass('visible') ? sidebar.width() : 0;

        if (minX > maxX) {
          maxX = paper && 'offsetWidth' in paper ? paper.offsetWidth : 1024;
          maxX += sidebarWidth;
          maxY = 840;
        } else {
          maxX = minX + maxX + sidebarWidth;
          maxY = minY + maxY;
        }

        _this.paper = new _npmJointjs['default'].dia.Paper({
          el: paper,
          width: maxX,
          height: maxY,
          gridSize: 1,
          model: _this.graph
        });

        var linkAggregation = new _npmJointjs['default'].shapes.flexberryUml.ClassDiagramAggregation({
          source: { x: 100, y: 30 },
          target: { x: 300, y: 30 }
        });
        linkAggregation.setLabelText('startMultiplicity', '1');
        linkAggregation.setLabelText('endMultiplicity', '*');
        linkAggregation.setLabelText('description', 'Agregation');

        var linkAssociation = new _npmJointjs['default'].shapes.flexberryUml.ClassDiagramAssociation({
          source: { x: 100, y: 80 },
          target: { x: 300, y: 80 }
        });
        linkAssociation.setLabelText('startMultiplicity', '1');
        linkAssociation.setLabelText('endMultiplicity', '*');
        linkAssociation.setLabelText('description', 'Association');

        var linkComposition = new _npmJointjs['default'].shapes.flexberryUml.ClassDiagramComposition({
          source: { x: 100, y: 120 },
          target: { x: 300, y: 120 }
        });
        linkComposition.setLabelText('startMultiplicity', '0..1');
        linkComposition.setLabelText('endMultiplicity', '*');
        linkComposition.setLabelText('description', 'Composition');

        var linkDependency = new _npmJointjs['default'].shapes.flexberryUml.Dependency({
          source: { x: 100, y: 170 },
          target: { x: 300, y: 170 }
        });

        var linkRealization = new _npmJointjs['default'].shapes.flexberryUml.Realization({
          source: { x: 100, y: 220 },
          target: { x: 300, y: 220 }
        });

        var linkGeneralization = new _npmJointjs['default'].shapes.flexberryUml.Generalization({
          source: { x: 100, y: 270 },
          target: { x: 300, y: 270 }
        });

        var linkQualified = new _npmJointjs['default'].shapes.flexberryUml.Qualified({
          source: { x: 100, y: 320 },
          target: { x: 300, y: 320 }
        });
        linkQualified.setLabelText('startRole', '1');
        linkQualified.setLabelText('endRole', '2');
        linkQualified.setLabelText('description', 'Qualified');

        var linkQualifiedAggregation = new _npmJointjs['default'].shapes.flexberryUml.QualifiedAggregation({
          source: { x: 100, y: 370 },
          target: { x: 300, y: 370 }
        });
        linkQualifiedAggregation.setLabelText('startRole', '1');
        linkQualifiedAggregation.setLabelText('endRole', '2');
        linkQualifiedAggregation.setLabelText('description', 'Q-Agregation');

        var linkQualifiedComposition = new _npmJointjs['default'].shapes.flexberryUml.QualifiedComposition({
          source: { x: 100, y: 420 },
          target: { x: 300, y: 420 }
        });
        linkQualifiedComposition.setLabelText('startRole', '1');
        linkQualifiedComposition.setLabelText('endRole', '2');
        linkQualifiedComposition.setLabelText('description', 'Q-Composition');

        var linkNestedClassAssociation = new _npmJointjs['default'].shapes.flexberryUml.NestedClassAssociation({
          source: { x: 100, y: 470 },
          target: { x: 300, y: 470 }
        });

        var linkNoteConnector = new _npmJointjs['default'].shapes.flexberryUml.NoteConnector({
          source: { x: 100, y: 520 },
          target: { x: 300, y: 520 }
        });

        _this.graph.addCell([linkAggregation, linkAssociation, linkComposition, linkDependency, linkRealization, linkGeneralization, linkQualified, linkQualifiedAggregation, linkQualifiedComposition, linkNestedClassAssociation, linkNoteConnector]);

        var attributes = ['attr1', 'attr2'];
        var methods = ['method1'];

        var classWithoutStp = new _npmJointjs['default'].shapes.flexberryUml.Class({
          position: { x: 350, y: 30 },
          name: 'Class1',
          attributes: attributes,
          methods: methods
        });

        var classCollapsed = new _npmJointjs['default'].shapes.flexberryUml.ClassCollapsed({
          position: { x: 450, y: 30 },
          size: { width: 100 },
          name: 'ClassCollapsed',
          attributes: attributes,
          methods: methods
        });

        var classWithStp = new _npmJointjs['default'].shapes.flexberryUml.Class({
          position: { x: 350, y: 150 },
          name: 'Class2textextext',
          stereotype: 'enumeration',
          attributes: attributes,
          methods: methods
        });

        var nAryAssociation = new _npmJointjs['default'].shapes.flexberryUml.NAryAssociation({
          position: { x: 550, y: 30 },
          size: { width: 150, height: 75 },
          name: 'n-ary Association'
        });

        var obj = new _npmJointjs['default'].shapes.flexberryUml.Object({
          position: { x: 350, y: 300 },
          name: 'Object',
          attributes: attributes,
          methods: methods
        });

        var instance = new _npmJointjs['default'].shapes.flexberryUml.Instance({
          position: { x: 350, y: 400 },
          name: 'Instance'
        });

        var multiObject = new _npmJointjs['default'].shapes.flexberryUml.MultiObject({
          position: { x: 350, y: 500 },
          size: { width: 150, height: 40 },
          name: 'multiObject'
        });

        var activeObj = new _npmJointjs['default'].shapes.flexberryUml.ActiveObject({
          position: { x: 350, y: 600 },
          name: 'Active object'
        });

        var templateClass = new _npmJointjs['default'].shapes.flexberryUml.TemplateClass({
          position: { x: 550, y: 150 },
          name: 'Class2textextext',
          attributes: attributes,
          methods: methods,
          params: 'params'
        });

        var note = new _npmJointjs['default'].shapes.flexberryUml.Note({
          position: { x: 550, y: 300 },
          name: 'Comment'
        });

        var moreClasses = new _npmJointjs['default'].shapes.flexberryUml.MoreClasses({
          position: { x: 550, y: 400 }
        });

        var packagePr = new _npmJointjs['default'].shapes.flexberryUml.Package({
          position: { x: 550, y: 500 },
          name: 'Class2',
          attributes: attributes
        });

        _this.graph.addCell([classWithoutStp, classCollapsed, classWithStp, nAryAssociation, obj, instance, multiObject, activeObj, templateClass, note, moreClasses, packagePr]);
      }
    }
  });
});
define('dummy/controllers/collaboration-diagram-primitives-demo', ['exports', 'ember', 'npm:jointjs'], function (exports, _ember, _npmJointjs) {
  exports['default'] = _ember['default'].Controller.extend({
    actions: {
      printDiagram: function printDiagram() {
        var _this = this;
        _ember['default'].run.schedule('afterRender', function () {
          _this.graph = new _npmJointjs['default'].dia.Graph();

          var paper = document.getElementById('paper');
          var minX = 16384;
          var minY = 16384;
          var maxX = 0;
          var maxY = 0;

          if (minX > maxX) {
            maxX = paper && 'offsetWidth' in paper ? paper.offsetWidth : 1024;
            maxY = 840;
          } else {
            maxX = minX + maxX;
            maxY = minY + maxY;
          }

          _this.paper = new _npmJointjs['default'].dia.Paper({
            el: paper,
            width: maxX,
            height: maxY,
            gridSize: 1,
            model: _this.graph
          });

          var instance = new _npmJointjs['default'].shapes.flexberryUml.Instance({
            position: { x: 50, y: 10 },
            name: 'Instance'
          });

          var multiObject = new _npmJointjs['default'].shapes.flexberryUml.MultiObject({
            position: { x: 50, y: 60 },
            name: 'Multi Object'
          });

          var activeObject = new _npmJointjs['default'].shapes.flexberryUml.ActiveObject({
            position: { x: 50, y: 120 },
            name: 'Active object'
          });

          var nArrayAssociation = new _npmJointjs['default'].shapes.flexberryUml.NAryAssociation({
            position: { x: 50, y: 170 },
            name: 'N-array association'
          });

          var designPattern = new _npmJointjs['default'].shapes.flexberryUml.CollDesignPattern({
            position: { x: 50, y: 240 },
            name: 'Design Pattern'
          });

          var nAssociationConnector = new _npmJointjs['default'].shapes.flexberryUml.NArrayAssociationConnect({
            source: { x: 400, y: 10 },
            target: { x: 700, y: 10 },
            labels: [{ attrs: { text: { text: 'n-Association' } } }]
          });

          var associationConnector = new _npmJointjs['default'].shapes.flexberryUml.CollaborationDiagramAssociation({
            source: { x: 400, y: 50 },
            target: { x: 700, y: 50 }
          });
          associationConnector.setLabelText('startRole', '1');
          associationConnector.setLabelText('endRole', '2');
          associationConnector.setLabelText('description', 'Association');

          var qualifiedConnector = new _npmJointjs['default'].shapes.flexberryUml.Qualified({
            source: { x: 400, y: 90 },
            target: { x: 700, y: 90 }
          });
          qualifiedConnector.setLabelText('startRole', '1');
          qualifiedConnector.setLabelText('endRole', '2');
          qualifiedConnector.setLabelText('description', 'Qualified');

          var agregationConnector = new _npmJointjs['default'].shapes.flexberryUml.CollaborationDiagramAggregation({
            source: { x: 400, y: 140 },
            target: { x: 700, y: 140 }
          });
          agregationConnector.setLabelText('startRole', '1');
          agregationConnector.setLabelText('endRole', '2');
          agregationConnector.setLabelText('description', 'Agregation');

          var qAgregationConnector = new _npmJointjs['default'].shapes.flexberryUml.QualifiedAggregation({
            source: { x: 400, y: 180 },
            target: { x: 700, y: 180 }
          });
          qAgregationConnector.setLabelText('startRole', '1');
          qAgregationConnector.setLabelText('endRole', '2');
          qAgregationConnector.setLabelText('description', 'Q-Agregation');

          var compositionConnector = new _npmJointjs['default'].shapes.flexberryUml.CollaborationDiagramComposition({
            source: { x: 400, y: 210 },
            target: { x: 700, y: 210 }
          });
          compositionConnector.setLabelText('startRole', '1');
          compositionConnector.setLabelText('endRole', '2');
          compositionConnector.setLabelText('description', 'Composition');

          var qCompositionConnector = new _npmJointjs['default'].shapes.flexberryUml.QualifiedComposition({
            source: { x: 400, y: 250 },
            target: { x: 700, y: 250 }
          });
          qCompositionConnector.setLabelText('startRole', '1');
          qCompositionConnector.setLabelText('endRole', '2');
          qCompositionConnector.setLabelText('description', 'Q-Composition');

          var designPatternConnector = new _npmJointjs['default'].shapes.flexberryUml.CollPatternConnect({
            source: { x: 400, y: 290 },
            target: { x: 700, y: 290 },
            labels: [{ attrs: { text: { text: 'Design Pattern' } } }]
          });

          var inheritanceConnector = new _npmJointjs['default'].shapes.flexberryUml.CollInheritance({
            source: { x: 400, y: 320 },
            target: { x: 700, y: 320 },
            labels: [{ attrs: { text: { text: 'Inheritance' } } }]
          });

          var asyncMsgForward = new _npmJointjs['default'].shapes.flexberryUml.CollAsyncMsgForward({
            position: { x: 800, y: 50 }
          });

          var asyncMsgBack = new _npmJointjs['default'].shapes.flexberryUml.CollAsyncMsgBack({
            position: { x: 800, y: 100 }
          });

          var flatMsgForward = new _npmJointjs['default'].shapes.flexberryUml.CollFlatMsgForward({
            position: { x: 800, y: 140 }
          });

          var flatMsgBack = new _npmJointjs['default'].shapes.flexberryUml.CollFlatMsgBack({
            position: { x: 800, y: 180 }
          });

          var nestedMsgForward = new _npmJointjs['default'].shapes.flexberryUml.CollNestedMsgForward({
            position: { x: 800, y: 220 }
          });

          var nestedMsgBack = new _npmJointjs['default'].shapes.flexberryUml.CollNestedMsgBack({
            position: { x: 800, y: 260 }
          });

          _this.graph.addCell([instance, multiObject, activeObject, nArrayAssociation, designPattern, nAssociationConnector, associationConnector, qualifiedConnector, agregationConnector, qAgregationConnector, compositionConnector, qCompositionConnector, designPatternConnector, inheritanceConnector, asyncMsgForward, asyncMsgBack, flatMsgForward, flatMsgBack, nestedMsgForward, nestedMsgBack]);
        });
      }
    }
  });
});
define('dummy/controllers/colsconfig-dialog', ['exports', 'ember-flexberry/controllers/colsconfig-dialog'], function (exports, _emberFlexberryControllersColsconfigDialog) {
  exports['default'] = _emberFlexberryControllersColsconfigDialog['default'];
});
define('dummy/controllers/deployment-diagram-primitives-demo', ['exports', 'ember', 'npm:jointjs'], function (exports, _ember, _npmJointjs) {
  exports['default'] = _ember['default'].Controller.extend({
    actions: {
      printDiagram: function printDiagram() {
        var _this = this;
        _this.graph = new _npmJointjs['default'].dia.Graph();

        var paper = document.getElementById('paper');
        var minX = 16384;
        var minY = 16384;
        var maxX = 0;
        var maxY = 0;
        var sidebar = _ember['default'].$('.ui.sidebar.main.menu');
        var sidebarWidth = sidebar.hasClass('visible') ? sidebar.width() : 0;

        if (minX > maxX) {
          maxX = paper && 'offsetWidth' in paper ? paper.offsetWidth : 1024;
          maxX += sidebarWidth;
          maxY = 840;
        } else {
          maxX = minX + maxX + sidebarWidth;
          maxY = minY + maxY;
        }

        _this.paper = new _npmJointjs['default'].dia.Paper({
          el: paper,
          width: maxX,
          height: maxY,
          gridSize: 1,
          model: _this.graph
        });

        var linkNoteConnector = new _npmJointjs['default'].shapes.flexberryUml.NoteConnector({
          source: { x: 100, y: 100 },
          target: { x: 300, y: 100 },
          attrs: { path: { title: 'Коннектор комментария (Note Connector)' } }
        });

        var linkDependency = new _npmJointjs['default'].shapes.flexberryUml.Dependency({
          source: { x: 100, y: 150 },
          target: { x: 300, y: 150 },
          labels: [{
            attrs: { text: { text: 'Dependency' } }
          }],
          attrs: { path: { title: 'Переход (Dependency)' } }
        });

        var linkConnection = new _npmJointjs['default'].shapes.flexberryUml.deploymentDiagram_Connection({
          source: { x: 100, y: 200 },
          target: { x: 300, y: 200 },
          labels: [{
            attrs: { text: { text: 'Connection' } }
          }],
          attrs: { path: { title: 'Связь (Connection)' } }
        });

        _this.graph.addCell([linkNoteConnector, linkDependency, linkConnection]);

        var component = new _npmJointjs['default'].shapes.flexberryUml.deploymentDiagram_Component({
          position: { x: 450, y: 100 },
          name: ['StateName'],
          attrs: { '.rotatable': { title: 'Компонент (Component)' } }
        });

        var node = new _npmJointjs['default'].shapes.flexberryUml.deploymentDiagram_Node({
          position: { x: 450, y: 150 },
          name: ['NodeName', 'text', 'text'],
          attrs: { '.rotatable': { title: 'Узел (Node)' } }
        });
        node.addTo(_this.graph);

        var obj = new _npmJointjs['default'].shapes.flexberryUml.deploymentDiagram_Object({
          position: { x: 450, y: 220 },
          name: ['ObjectName', 'text', 'text'],
          attrs: { '.rotatable': { title: 'Объект (Object)' } }
        });
        obj.addTo(_this.graph);

        var interfaceObj = new _npmJointjs['default'].shapes.flexberryUml.deploymentDiagram_Interface({
          position: { x: 500, y: 260 },
          name: ['Interface'],
          attrs: { '.rotatable': { title: 'Интерфейс (Interface)' } },
          sourceObj: obj,
          graph: _this.graph
        });

        var activeObj = new _npmJointjs['default'].shapes.flexberryUml.deploymentDiagram_ActiveObject({
          position: { x: 450, y: 320 },
          name: ['ActiveObjectName', 'text'],
          attrs: { '.rotatable': { title: 'Объект (Object)' } }
        });

        _this.graph.addCell([activeObj, obj, node, component, interfaceObj]);
      }
    }
  });
});
define('dummy/controllers/detail-edit-form', ['exports', 'ember-flexberry/controllers/detail-edit-form'], function (exports, _emberFlexberryControllersDetailEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryControllersDetailEditForm['default'];
    }
  });
});
define('dummy/controllers/edit-form', ['exports', 'ember-flexberry/controllers/edit-form'], function (exports, _emberFlexberryControllersEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryControllersEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-aggregation-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-aggregation-edit-form'], function (exports, _emberFlexberryDesignerControllersFdAggregationEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdAggregationEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-aggregation-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-aggregation-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdAggregationEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdAggregationEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-aggregation-list-form', ['exports', 'ember-flexberry-designer/controllers/fd-aggregation-list-form'], function (exports, _emberFlexberryDesignerControllersFdAggregationListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdAggregationListForm['default'];
    }
  });
});
define('dummy/controllers/fd-application-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-application-edit-form'], function (exports, _emberFlexberryDesignerControllersFdApplicationEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdApplicationEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-application-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-application-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdApplicationEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdApplicationEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-appstruct-form', ['exports', 'ember-flexberry-designer/controllers/fd-appstruct-form'], function (exports, _emberFlexberryDesignerControllersFdAppstructForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdAppstructForm['default'];
    }
  });
});
define('dummy/controllers/fd-association-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-association-edit-form'], function (exports, _emberFlexberryDesignerControllersFdAssociationEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdAssociationEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-association-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-association-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdAssociationEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdAssociationEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-association-list-form', ['exports', 'ember-flexberry-designer/controllers/fd-association-list-form'], function (exports, _emberFlexberryDesignerControllersFdAssociationListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdAssociationListForm['default'];
    }
  });
});
define('dummy/controllers/fd-business-server-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-business-server-edit-form'], function (exports, _emberFlexberryDesignerControllersFdBusinessServerEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdBusinessServerEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-business-server-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-business-server-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdBusinessServerEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdBusinessServerEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-class-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-class-edit-form'], function (exports, _emberFlexberryDesignerControllersFdClassEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdClassEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-class-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-class-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdClassEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdClassEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-class-list-form', ['exports', 'ember-flexberry-designer/controllers/fd-class-list-form'], function (exports, _emberFlexberryDesignerControllersFdClassListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdClassListForm['default'];
    }
  });
});
define('dummy/controllers/fd-configuration-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-configuration-edit-form'], function (exports, _emberFlexberryDesignerControllersFdConfigurationEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdConfigurationEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-configuration-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-configuration-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdConfigurationEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdConfigurationEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-configuration-list-form', ['exports', 'ember-flexberry-designer/controllers/fd-configuration-list-form'], function (exports, _emberFlexberryDesignerControllersFdConfigurationListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdConfigurationListForm['default'];
    }
  });
});
define('dummy/controllers/fd-diagram-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-diagram-edit-form'], function (exports, _emberFlexberryDesignerControllersFdDiagramEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdDiagramEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-diagram-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-diagram-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdDiagramEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdDiagramEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-diagram-list-form', ['exports', 'ember-flexberry-designer/controllers/fd-diagram-list-form'], function (exports, _emberFlexberryDesignerControllersFdDiagramListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdDiagramListForm['default'];
    }
  });
});
define('dummy/controllers/fd-edit-form-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-edit-form-edit-form'], function (exports, _emberFlexberryDesignerControllersFdEditFormEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdEditFormEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-edit-form-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-edit-form-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdEditFormEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdEditFormEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-editform-constructor', ['exports', 'ember-flexberry-designer/controllers/fd-editform-constructor'], function (exports, _emberFlexberryDesignerControllersFdEditformConstructor) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdEditformConstructor['default'];
    }
  });
});
define('dummy/controllers/fd-enum-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-enum-edit-form'], function (exports, _emberFlexberryDesignerControllersFdEnumEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdEnumEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-enum-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-enum-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdEnumEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdEnumEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-external-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-external-edit-form'], function (exports, _emberFlexberryDesignerControllersFdExternalEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdExternalEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-external-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-external-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdExternalEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdExternalEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-generation-list-form', ['exports', 'ember-flexberry-designer/controllers/fd-generation-list-form'], function (exports, _emberFlexberryDesignerControllersFdGenerationListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdGenerationListForm['default'];
    }
  });
});
define('dummy/controllers/fd-generation-process-form', ['exports', 'ember-flexberry-designer/controllers/fd-generation-process-form'], function (exports, _emberFlexberryDesignerControllersFdGenerationProcessForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdGenerationProcessForm['default'];
    }
  });
});
define('dummy/controllers/fd-generation-process-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-generation-process-form/new'], function (exports, _emberFlexberryDesignerControllersFdGenerationProcessFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdGenerationProcessFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-inheritance-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-inheritance-edit-form'], function (exports, _emberFlexberryDesignerControllersFdInheritanceEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdInheritanceEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-inheritance-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-inheritance-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdInheritanceEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdInheritanceEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-inheritance-list-form', ['exports', 'ember-flexberry-designer/controllers/fd-inheritance-list-form'], function (exports, _emberFlexberryDesignerControllersFdInheritanceListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdInheritanceListForm['default'];
    }
  });
});
define('dummy/controllers/fd-interface-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-interface-edit-form'], function (exports, _emberFlexberryDesignerControllersFdInterfaceEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdInterfaceEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-interface-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-interface-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdInterfaceEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdInterfaceEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-list-form-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-list-form-edit-form'], function (exports, _emberFlexberryDesignerControllersFdListFormEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdListFormEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-list-form-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-list-form-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdListFormEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdListFormEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-listform-constructor', ['exports', 'ember-flexberry-designer/controllers/fd-listform-constructor'], function (exports, _emberFlexberryDesignerControllersFdListformConstructor) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdListformConstructor['default'];
    }
  });
});
define('dummy/controllers/fd-sequence-diagram-primitives-demo', ['exports', 'ember', 'npm:jointjs'], function (exports, _ember, _npmJointjs) {
  exports['default'] = _ember['default'].Controller.extend({
    actions: {
      printDiagram: function printDiagram() {
        var _this = this;
        _this.graph = new _npmJointjs['default'].dia.Graph();

        var paper = document.getElementById('paper');
        var minX = 16384;
        var minY = 16384;
        var maxX = 0;
        var maxY = 0;
        var sidebar = _ember['default'].$('.ui.sidebar.main.menu');
        var sidebarWidth = sidebar.hasClass('visible') ? sidebar.width() : 0;

        if (minX > maxX) {
          maxX = paper && 'offsetWidth' in paper ? paper.offsetWidth : 1024;
          maxX += sidebarWidth;
          maxY = 840;
        } else {
          maxX = minX + maxX + sidebarWidth;
          maxY = minY + maxY;
        }

        _this.paper = new _npmJointjs['default'].dia.Paper({
          el: paper,
          width: maxX,
          height: maxY,
          gridSize: 1,
          model: _this.graph
        });

        /*let actor = */new _npmJointjs['default'].shapes.flexberryUml.sequencediagramActor({
          position: { x: 0, y: 0 },
          graph: _this.graph
        });

        /*let object = */new _npmJointjs['default'].shapes.flexberryUml.sequencediagramObject({
          position: { x: 100, y: 0 },
          graph: _this.graph
        });

        /*let activeObject = */new _npmJointjs['default'].shapes.flexberryUml.sequencediagramActiveObject({
          position: { x: 200, y: 0 },
          graph: _this.graph
        });

        /*let terminator = */new _npmJointjs['default'].shapes.flexberryUml.sequencediagramTerminator({
          position: { x: 300, y: 0 },
          graph: _this.graph
        });

        /*let sequencediagramProcedureCall = new joint.shapes.flexberryUml.sequencediagramProcedureCall({
          source: { x: 0, y: 200 },
          target: { x: 300, y: 200 },
          labels: [{ attrs: { text: { text:  'Procedure Call' } } }],
          graph: _this.graph
        });*/

        /*let sequencediagramFlatMessage = new joint.shapes.flexberryUml.sequencediagramFlatMessage({
          source: { x: 0, y: 250 },
          target: { x: 300, y: 250 },
          labels: [{ attrs: { text: { text:  'Flat Message' } } }],
          graph: _this.graph
        });*/
      }
    }
  });
});
define('dummy/controllers/fd-stage-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-stage-edit-form'], function (exports, _emberFlexberryDesignerControllersFdStageEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdStageEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-stage-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-stage-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdStageEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdStageEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-stage-list-form', ['exports', 'ember-flexberry-designer/controllers/fd-stage-list-form'], function (exports, _emberFlexberryDesignerControllersFdStageListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdStageListForm['default'];
    }
  });
});
define('dummy/controllers/fd-system-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-system-edit-form'], function (exports, _emberFlexberryDesignerControllersFdSystemEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdSystemEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-system-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-system-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdSystemEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdSystemEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-system-list-form', ['exports', 'ember-flexberry-designer/controllers/fd-system-list-form'], function (exports, _emberFlexberryDesignerControllersFdSystemListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdSystemListForm['default'];
    }
  });
});
define('dummy/controllers/fd-type-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-type-edit-form'], function (exports, _emberFlexberryDesignerControllersFdTypeEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdTypeEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-type-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-type-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdTypeEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdTypeEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-user-form-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-user-form-edit-form'], function (exports, _emberFlexberryDesignerControllersFdUserFormEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdUserFormEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-user-form-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-user-form-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdUserFormEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdUserFormEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-view-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-view-edit-form'], function (exports, _emberFlexberryDesignerControllersFdViewEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdViewEditForm['default'];
    }
  });
});
define('dummy/controllers/fd-view-edit-form/new', ['exports', 'ember-flexberry-designer/controllers/fd-view-edit-form/new'], function (exports, _emberFlexberryDesignerControllersFdViewEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdViewEditFormNew['default'];
    }
  });
});
define('dummy/controllers/fd-view-list-form', ['exports', 'ember-flexberry-designer/controllers/fd-view-list-form'], function (exports, _emberFlexberryDesignerControllersFdViewListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdViewListForm['default'];
    }
  });
});
define('dummy/controllers/fd-visual-edit-form', ['exports', 'ember-flexberry-designer/controllers/fd-visual-edit-form'], function (exports, _emberFlexberryDesignerControllersFdVisualEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersFdVisualEditForm['default'];
    }
  });
});
define('dummy/controllers/flexberry-file-view-dialog', ['exports', 'ember-flexberry/controllers/flexberry-file-view-dialog'], function (exports, _emberFlexberryControllersFlexberryFileViewDialog) {
  exports['default'] = _emberFlexberryControllersFlexberryFileViewDialog['default'];
});
define('dummy/controllers/i-i-s-caseberry-logging-objects-application-log-e', ['exports', 'ember-flexberry/controllers/i-i-s-caseberry-logging-objects-application-log-e'], function (exports, _emberFlexberryControllersIISCaseberryLoggingObjectsApplicationLogE) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryControllersIISCaseberryLoggingObjectsApplicationLogE['default'];
    }
  });
});
define('dummy/controllers/i-i-s-caseberry-logging-objects-application-log-l', ['exports', 'ember-flexberry/controllers/i-i-s-caseberry-logging-objects-application-log-l'], function (exports, _emberFlexberryControllersIISCaseberryLoggingObjectsApplicationLogL) {
  /**
   * @module ember-flexberry
   */
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryControllersIISCaseberryLoggingObjectsApplicationLogL['default'];
    }
  });
});
define('dummy/controllers/list-form', ['exports', 'ember-flexberry/controllers/list-form'], function (exports, _emberFlexberryControllersListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryControllersListForm['default'];
    }
  });
});
define('dummy/controllers/lookup-dialog', ['exports', 'ember-flexberry/controllers/lookup-dialog'], function (exports, _emberFlexberryControllersLookupDialog) {
  exports['default'] = _emberFlexberryControllersLookupDialog['default'];
});
define('dummy/controllers/new-platform-flexberry-services-lock-list', ['exports', 'ember-flexberry/controllers/new-platform-flexberry-services-lock-list'], function (exports, _emberFlexberryControllersNewPlatformFlexberryServicesLockList) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryControllersNewPlatformFlexberryServicesLockList['default'];
    }
  });
});
define('dummy/controllers/new-platform-flexberry-web-designer-generation-e/new', ['exports', 'ember-flexberry-designer/controllers/new-platform-flexberry-web-designer-generation-e/new'], function (exports, _emberFlexberryDesignerControllersNewPlatformFlexberryWebDesignerGenerationENew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerControllersNewPlatformFlexberryWebDesignerGenerationENew['default'];
    }
  });
});
define('dummy/controllers/sitemap-node', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Controller.extend({
    actions: {
      /**
        Hide Sidebar by clicking submenu item.
         @method actions.subMenuEl
      */
      hideSidebar: function hideSidebar() {
        _ember['default'].$('.ui.sidebar').sidebar('hide');
      },
      /**
        Expand menu items by click.
         @method actions.subMenuEl
      */
      subMenuEl: function subMenuEl(event) {
        var $this = _ember['default'].$(event.currentTarget).parent().find('.subMenu:first');
        if ($this.hasClass('hidden')) {
          $this.removeClass('hidden');
          _ember['default'].$(event.target).parent().find('.item-minus:first').removeClass('hidden');
          _ember['default'].$(event.target).parent().find('.item-plus:first').addClass('hidden');
        } else {
          $this.addClass('hidden');
          _ember['default'].$(event.target).parent().find('.item-minus:first').addClass('hidden');
          _ember['default'].$(event.target).parent().find('.item-plus:first').removeClass('hidden');
        }
      }
    }
  });
});
define('dummy/controllers/statechart-diagram-primitives-demo', ['exports', 'ember', 'npm:jointjs'], function (exports, _ember, _npmJointjs) {
  exports['default'] = _ember['default'].Controller.extend({
    actions: {
      printDiagram: function printDiagram() {
        var _this = this;
        _this.graph = new _npmJointjs['default'].dia.Graph();

        var paper = document.getElementById('paper');
        var minX = 16384;
        var minY = 16384;
        var maxX = 0;
        var maxY = 0;
        var sidebar = _ember['default'].$('.ui.sidebar.main.menu');
        var sidebarWidth = sidebar.hasClass('visible') ? sidebar.width() : 0;

        if (minX > maxX) {
          maxX = paper && 'offsetWidth' in paper ? paper.offsetWidth : 1024;
          maxX += sidebarWidth;
          maxY = 840;
        } else {
          maxX = minX + maxX + sidebarWidth;
          maxY = minY + maxY;
        }

        _this.paper = new _npmJointjs['default'].dia.Paper({
          el: paper,
          width: maxX,
          height: maxY,
          gridSize: 1,
          model: _this.graph
        });

        var linkNoteConnector = new _npmJointjs['default'].shapes.flexberryUml.NoteConnector({
          source: { x: 100, y: 100 },
          target: { x: 300, y: 100 },
          attrs: { path: { title: 'Коннектор комментария (Note Connector)' } }
        });

        var linkEventMessage = new _npmJointjs['default'].shapes.flexberryUml.statechartDiagram_EventMessage({
          source: { x: 100, y: 150 },
          target: { x: 300, y: 150 },
          labels: [{
            attrs: { text: { text: 'EventMessage' } }
          }],
          attrs: { path: { title: 'Сообщение (Event Message)' } }
        });

        var linkTransition = new _npmJointjs['default'].shapes.flexberryUml.statechartDiagram_Transition({
          source: { x: 100, y: 250 },
          target: { x: 300, y: 250 },
          labels: [{
            attrs: { text: { text: 'Transition' } }
          }],
          attrs: { path: { title: 'Переход (Transition)' } }
        });

        _this.graph.addCell([linkNoteConnector, linkEventMessage, linkTransition]);

        var state = new _npmJointjs['default'].shapes.flexberryUml.statechartDiagram_State({
          position: { x: 450, y: 100 },
          name: 'StateName',
          attrs: { '.rotatable': { title: 'Состояние (State)' } }
        });

        var stateEx = new _npmJointjs['default'].shapes.flexberryUml.statechartDiagram_StateEx({
          position: { x: 450, y: 150 },
          name: ['StateName', 'dsfsdg', 'dsfsdg'],
          attributes: ['attr1'],
          attrs: { '.rotatable': { title: 'Состояние (StateEx)' } }
        });

        var statechartClass = new _npmJointjs['default'].shapes.flexberryUml.statechartDiagram_Class({
          position: { x: 450, y: 250 },
          name: 'ClassName',
          attrs: { '.rotatable': { title: 'Класс (Class)' } }
        });

        var note = new _npmJointjs['default'].shapes.flexberryUml.Note({
          position: { x: 450, y: 300 },
          name: 'Comment'
        });

        var startState = new _npmJointjs['default'].shapes.flexberryUml.StartState({
          position: { x: 100, y: 204 },
          attrs: {
            text: { text: 'Start State' }
          }
        });

        var endState = new _npmJointjs['default'].shapes.flexberryUml.EndState({
          position: { x: 150, y: 200 },
          attrs: {
            text: { text: 'End State' }
          }
        });

        var сomplexTransitionHorizon = new _npmJointjs['default'].shapes.flexberryUml.ComplexTransitionHorizon({
          size: { width: 200 },
          position: { x: 100, y: 300 },
          attrs: {
            text: { text: 'Some text' },
            '.rotatable': { title: 'Синхронизатор/разветвитель (Complex Transition)' } }
        });

        var сomplexTransitionVertical = new _npmJointjs['default'].shapes.flexberryUml.ComplexTransitionVertical({
          size: { height: 200 },
          position: { x: 100, y: 350 },
          attrs: {
            text: { text: 'Some text' },
            '.rotatable': { title: 'Синхронизатор/разветвитель (Complex Transition)' } }
        });

        var history = new _npmJointjs['default'].shapes.flexberryUml.statechartDiagram_History({
          position: { x: 250, y: 200 }
        });

        var deepHistory = new _npmJointjs['default'].shapes.flexberryUml.statechartDiagram_DeepHistory({
          position: { x: 280, y: 200 }
        });

        var compositeState = new _npmJointjs['default'].shapes.flexberryUml.statechartDiagram_CompositeState({
          position: { x: 450, y: 350 },
          name: ['StateName'],
          attributes: ['attr1'],
          attrs: { '.rotatable': { title: 'Состояние (StateEx)' } }
        });
        _this.graph.addCell([state, stateEx, statechartClass, note, startState, endState, сomplexTransitionHorizon, сomplexTransitionVertical, history, deepHistory, compositeState]);
      }
    }
  });
});
define('dummy/controllers/usecase-diagram-primitives-demo', ['exports', 'ember', 'npm:jointjs'], function (exports, _ember, _npmJointjs) {
  exports['default'] = _ember['default'].Controller.extend({
    actions: {
      printDiagram: function printDiagram() {
        var _this = this;
        _this.graph = new _npmJointjs['default'].dia.Graph();

        var paper = document.getElementById('paper');
        var minX = 16384;
        var minY = 16384;
        var maxX = 0;
        var maxY = 0;
        var sidebar = _ember['default'].$('.ui.sidebar.main.menu');
        var sidebarWidth = sidebar.hasClass('visible') ? sidebar.width() : 0;

        if (minX > maxX) {
          maxX = paper && 'offsetWidth' in paper ? paper.offsetWidth : 1024;
          maxX += sidebarWidth;
          maxY = 840;
        } else {
          maxX = minX + maxX + sidebarWidth;
          maxY = minY + maxY;
        }

        _this.paper = new _npmJointjs['default'].dia.Paper({
          el: paper,
          width: maxX,
          height: maxY,
          gridSize: 1,
          model: _this.graph
        });

        var jUseCase = new _npmJointjs['default'].shapes.flexberryUml.Usecase({
          position: { x: 50, y: 10 },
          size: { width: 100, height: 40 },
          name: 'UseCase \n primitive \n 1',
          ports: {
            groups: {
              'in': {
                position: 'absolute'
              },
              'out': {
                position: 'absolute'
              }
            }
          }
        });
        _this.graph.addCell(jUseCase);

        var jUseCaseBoundary = new _npmJointjs['default'].shapes.flexberryUml.UsecaseBoundary({
          position: { x: 50, y: 150 },
          size: { width: 70, height: 50 },
          name: 'Boundary \n Very long string uuuuuuuuuuuuuuuuuuuuu \n the end',
          ports: {
            groups: {
              'in': {
                position: 'absolute'
              },
              'out': {
                position: 'absolute'
              }
            }
          }
        });
        _this.graph.addCell(jUseCaseBoundary);

        var jUseCaseActor = new _npmJointjs['default'].shapes.flexberryUml.UsecaseActor({
          position: { x: 250, y: 50 },
          name: 'Actor',
          ports: {
            groups: {
              'in': {
                position: 'absolute'
              },
              'out': {
                position: 'absolute'
              }
            }
          }
        });
        _this.graph.addCell(jUseCaseActor);

        var jUseCaseUndirAssociation = new _npmJointjs['default'].shapes.flexberryUml.UseCaseUndirAssociation({
          source: { x: 500, y: 80 },
          target: { x: 700, y: 80 },
          labels: [{ attrs: { text: { text: 'Undir association' } } }]
        });
        _this.graph.addCell(jUseCaseUndirAssociation);

        var jUseCaseDirAssociation = new _npmJointjs['default'].shapes.flexberryUml.UseCaseDirAssociation({
          source: { x: 500, y: 150 },
          target: { x: 700, y: 150 },
          labels: [{ attrs: { text: { text: 'Directed association' } } }]
        });
        _this.graph.addCell(jUseCaseDirAssociation);

        var jUseCaseGeneralization = new _npmJointjs['default'].shapes.flexberryUml.UseCaseGeneralization({
          source: { x: 500, y: 200 },
          target: { x: 700, y: 200 },
          labels: [{ attrs: { text: { text: 'Generalization' } } }]
        });
        _this.graph.addCell(jUseCaseGeneralization);
      }
    }
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-config-panel.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-config-panel.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-config-panel.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-config-panel.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-config-panel.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-config-panel.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-editform-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-editform-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-editform-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-editform-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-editform-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-editform-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-editform-row.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-editform-row.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-editform-row.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-editform-row.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-editform-row.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-editform-row.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-file.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-file.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-file.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-file.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-file.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-file.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-groupedit.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-groupedit.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-groupedit.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-groupedit.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-groupedit.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-groupedit.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-lookup.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-lookup.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-lookup.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-lookup.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-lookup.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-lookup.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-object-list-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-object-list-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-object-list-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-object-list-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-object-list-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-object-list-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-objectlistview.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-objectlistview.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-objectlistview.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-objectlistview.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-objectlistview.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-objectlistview.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-tabs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-tabs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-tabs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-tabs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-tabs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-tabs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-uml-diagram.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-uml-diagram.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-uml-diagram.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-uml-diagram.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-uml-diagram.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-uml-diagram.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-visual-edit-control-tree.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-visual-edit-control-tree.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-visual-edit-control-tree.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-visual-edit-control-tree.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-visual-edit-control-tree.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-visual-edit-control-tree.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-visual-edit-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-visual-edit-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-visual-edit-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-visual-edit-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-visual-edit-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-visual-edit-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-visual-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-visual-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-visual-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-visual-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-visual-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-visual-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-visual-listform-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/fd-visual-listform-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/fd-visual-listform-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/fd-visual-listform-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/fd-visual-listform-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/fd-visual-listform-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/ui-tab-menu.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/ui-tab-menu.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/ui-tab-menu.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/ui-tab-menu.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/ui-tab-menu.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/ui-tab-menu.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/ui-tab-segment.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/components');
  test('modules/ember-flexberry-designer/components/ui-tab-segment.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/components/ui-tab-segment.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/components/ui-tab-segment.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/components/ui-tab-segment.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/components/ui-tab-segment.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-aggregation-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-aggregation-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-aggregation-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-aggregation-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-aggregation-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-aggregation-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-aggregation-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-aggregation-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-aggregation-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-aggregation-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-aggregation-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-aggregation-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-aggregation-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-aggregation-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-aggregation-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-aggregation-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-aggregation-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-aggregation-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-aggregation-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-application-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-application-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-application-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-application-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-application-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-application-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-application-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-application-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-application-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-application-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-application-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-application-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-application-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-appstruct-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-appstruct-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-appstruct-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-appstruct-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-appstruct-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-appstruct-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-association-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-association-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-association-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-association-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-association-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-association-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-association-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-association-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-association-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-association-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-association-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-association-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-association-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-association-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-association-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-association-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-association-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-association-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-association-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-business-server-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-business-server-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-business-server-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-business-server-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-business-server-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-business-server-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-business-server-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-business-server-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-business-server-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-business-server-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-business-server-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-business-server-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-business-server-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-class-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-class-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-class-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-class-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-class-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-class-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-class-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-class-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-class-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-class-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-class-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-class-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-class-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-class-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-class-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-class-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-class-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-class-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-class-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-configuration-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-configuration-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-configuration-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-configuration-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-configuration-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-configuration-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-configuration-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-configuration-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-configuration-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-configuration-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-configuration-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-configuration-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-configuration-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-configuration-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-configuration-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-configuration-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-configuration-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-configuration-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-configuration-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-diagram-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-diagram-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-diagram-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-diagram-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-diagram-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-diagram-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-diagram-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-diagram-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-diagram-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-diagram-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-diagram-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-diagram-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-diagram-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-diagram-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-diagram-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-diagram-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-diagram-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-diagram-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-diagram-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-edit-form-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-edit-form-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-edit-form-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-edit-form-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-edit-form-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-edit-form-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-edit-form-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-edit-form-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-edit-form-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-edit-form-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-edit-form-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-edit-form-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-edit-form-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-editform-constructor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-editform-constructor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-editform-constructor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-editform-constructor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-editform-constructor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-editform-constructor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-editform-constructor/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-editform-constructor');
  test('modules/ember-flexberry-designer/controllers/fd-editform-constructor/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-editform-constructor/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-editform-constructor/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-editform-constructor/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-editform-constructor/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-enum-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-enum-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-enum-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-enum-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-enum-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-enum-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-enum-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-enum-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-enum-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-enum-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-enum-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-enum-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-enum-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-external-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-external-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-external-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-external-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-external-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-external-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-external-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-external-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-external-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-external-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-external-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-external-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-external-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-generation-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-generation-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-generation-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-generation-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-generation-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-generation-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-generation-process-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-generation-process-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-generation-process-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-generation-process-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-generation-process-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-generation-process-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-generation-process-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-generation-process-form');
  test('modules/ember-flexberry-designer/controllers/fd-generation-process-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-generation-process-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-generation-process-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-generation-process-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-generation-process-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-inheritance-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-inheritance-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-inheritance-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-inheritance-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-inheritance-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-inheritance-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-inheritance-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-inheritance-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-inheritance-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-inheritance-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-inheritance-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-inheritance-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-inheritance-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-inheritance-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-inheritance-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-inheritance-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-inheritance-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-inheritance-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-inheritance-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-interface-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-interface-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-interface-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-interface-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-interface-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-interface-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-interface-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-interface-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-interface-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-interface-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-interface-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-interface-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-interface-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-list-form-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-list-form-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-list-form-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-list-form-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-list-form-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-list-form-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-list-form-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-list-form-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-list-form-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-list-form-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-list-form-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-list-form-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-list-form-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-listform-constructor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-listform-constructor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-listform-constructor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-listform-constructor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-listform-constructor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-listform-constructor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-stage-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-stage-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-stage-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-stage-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-stage-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-stage-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-stage-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-stage-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-stage-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-stage-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-stage-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-stage-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-stage-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-stage-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-stage-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-stage-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-stage-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-stage-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-stage-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-system-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-system-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-system-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-system-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-system-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-system-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-system-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-system-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-system-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-system-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-system-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-system-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-system-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-system-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-system-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-system-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-system-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-system-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-system-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-type-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-type-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-type-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-type-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-type-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-type-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-type-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-type-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-type-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-type-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-type-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-type-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-type-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-user-form-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-user-form-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-user-form-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-user-form-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-user-form-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-user-form-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-user-form-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-user-form-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-user-form-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-user-form-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-user-form-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-user-form-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-user-form-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-view-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-view-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-view-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-view-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-view-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-view-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-view-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers/fd-view-edit-form');
  test('modules/ember-flexberry-designer/controllers/fd-view-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-view-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-view-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-view-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-view-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-view-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-view-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-view-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-view-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-view-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-view-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-visual-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/controllers');
  test('modules/ember-flexberry-designer/controllers/fd-visual-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/controllers/fd-visual-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/controllers/fd-visual-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/controllers/fd-visual-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/controllers/fd-visual-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/enums/fd-generation-state.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/enums');
  test('modules/ember-flexberry-designer/enums/fd-generation-state.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/enums/fd-generation-state.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/enums/fd-generation-state.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/enums/fd-generation-state.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/enums/fd-generation-state.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-access-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/enums');
  test('modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-access-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-access-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-access-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-access-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-access-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/enums');
  test('modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/enums');
  test('modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-repository-access-modifier.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/enums');
  test('modules/ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-repository-access-modifier.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-repository-access-modifier.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-repository-access-modifier.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-repository-access-modifier.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-repository-access-modifier.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/enums');
  test('modules/ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/external/jointjs.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/external');
  test('modules/ember-flexberry-designer/external/jointjs.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/external/jointjs.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/external/jointjs.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/external/jointjs.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/external/jointjs.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/components/fd-visual-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/components');
  test('modules/ember-flexberry-designer/locales/en/components/fd-visual-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/components/fd-visual-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/components/fd-visual-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/components/fd-visual-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/components/fd-visual-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/components/fd-visual-edit-control-tree.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/components');
  test('modules/ember-flexberry-designer/locales/en/components/fd-visual-edit-control-tree.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/components/fd-visual-edit-control-tree.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/components/fd-visual-edit-control-tree.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/components/fd-visual-edit-control-tree.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/components/fd-visual-edit-control-tree.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-aggregation-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-aggregation-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-aggregation-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-aggregation-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-aggregation-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-aggregation-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-aggregation-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-aggregation-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-aggregation-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-aggregation-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-aggregation-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-aggregation-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-application-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-application-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-application-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-application-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-application-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-application-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-appstruct-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-appstruct-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-appstruct-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-appstruct-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-appstruct-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-appstruct-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-association-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-association-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-association-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-association-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-association-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-association-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-association-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-association-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-association-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-association-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-association-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-association-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-business-server-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-business-server-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-business-server-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-business-server-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-business-server-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-business-server-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-class-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-class-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-class-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-class-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-class-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-class-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-class-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-class-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-class-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-class-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-class-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-class-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-configuration-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-configuration-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-configuration-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-configuration-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-configuration-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-configuration-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-configuration-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-configuration-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-configuration-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-configuration-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-configuration-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-configuration-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-diagram-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-diagram-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-diagram-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-diagram-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-diagram-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-diagram-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-diagram-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-diagram-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-diagram-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-diagram-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-diagram-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-diagram-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-edit-form-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-edit-form-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-edit-form-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-edit-form-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-edit-form-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-edit-form-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-editform-constructor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-editform-constructor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-editform-constructor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-editform-constructor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-editform-constructor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-editform-constructor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-enum-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-enum-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-enum-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-enum-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-enum-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-enum-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-external-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-external-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-external-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-external-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-external-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-external-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-generation-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-generation-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-generation-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-generation-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-generation-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-generation-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-generation-process-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-generation-process-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-generation-process-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-generation-process-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-generation-process-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-generation-process-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-inheritance-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-inheritance-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-inheritance-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-inheritance-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-inheritance-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-inheritance-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-inheritance-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-inheritance-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-inheritance-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-inheritance-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-inheritance-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-inheritance-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-interface-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-interface-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-interface-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-interface-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-interface-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-interface-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-list-form-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-list-form-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-list-form-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-list-form-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-list-form-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-list-form-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-listform-constructor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-listform-constructor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-listform-constructor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-listform-constructor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-listform-constructor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-listform-constructor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-stage-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-stage-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-stage-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-stage-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-stage-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-stage-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-stage-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-stage-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-stage-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-stage-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-stage-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-stage-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-system-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-system-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-system-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-system-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-system-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-system-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-system-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-system-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-system-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-system-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-system-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-system-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-type-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-type-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-type-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-type-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-type-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-type-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-user-form-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-user-form-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-user-form-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-user-form-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-user-form-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-user-form-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-view-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-view-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-view-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-view-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-view-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-view-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-view-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-view-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-view-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-view-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-view-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-view-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-visual-edit-form-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-visual-edit-form-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-visual-edit-form-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-visual-edit-form-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-visual-edit-form-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-visual-edit-form-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-visual-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/forms');
  test('modules/ember-flexberry-designer/locales/en/forms/fd-visual-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-visual-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/forms/fd-visual-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/forms/fd-visual-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/forms/fd-visual-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-ad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-ad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-ad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-ad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-ad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-ad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-aggregation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-aggregation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-aggregation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-aggregation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-aggregation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-aggregation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-base-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-base-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-base-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-base-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-base-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-base-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-cad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-cad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-cad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-cad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-cad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-cad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-case-property.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-case-property.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-case-property.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-case-property.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-case-property.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-case-property.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-class-storage-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-class-storage-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-class-storage-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-class-storage-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-class-storage-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-class-storage-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-cod.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-cod.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-cod.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-cod.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-cod.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-cod.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-configuration.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-configuration.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-configuration.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-configuration.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-configuration.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-configuration.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-aggregation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-aggregation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-aggregation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-aggregation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-aggregation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-aggregation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-associated-detail-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-associated-detail-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-associated-detail-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-associated-detail-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-associated-detail-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-associated-detail-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-attribute.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-attribute.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-attribute.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-attribute.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-attribute.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-attribute.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-base-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-base-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-base-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-base-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-base-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-base-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-control-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-control-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-control-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-control-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-control-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-control-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-diagram-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-diagram-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-diagram-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-diagram-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-diagram-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-diagram-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-filelink.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-filelink.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-filelink.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-filelink.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-filelink.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-filelink.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-form-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-form-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-form-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-form-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-form-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-form-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-form-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-form-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-form-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-form-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-form-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-form-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-inheritance.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-inheritance.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-inheritance.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-inheritance.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-inheritance.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-inheritance.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-method.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-method.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-method.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-method.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-method.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-method.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-module-setting-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-module-setting-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-module-setting-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-module-setting-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-module-setting-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-module-setting-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-module-setting.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-module-setting.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-module-setting.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-module-setting.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-module-setting.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-module-setting.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-parameter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-parameter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-parameter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-parameter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-parameter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-parameter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-process-status.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-process-status.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-process-status.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-process-status.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-process-status.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-process-status.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-stage-history.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-stage-history.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-stage-history.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-stage-history.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-stage-history.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-stage-history.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-stage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-stage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-stage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-stage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-stage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-stage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-system.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-system.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-system.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-system.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-system.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-system.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-task.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-task.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-task.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-task.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-task.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-task.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-type-definition.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-type-definition.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-type-definition.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-type-definition.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-type-definition.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-type-definition.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-ad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-ad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-ad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-ad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-ad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-ad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-cad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-cad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-cad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-cad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-cad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-cad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-cod.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-cod.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-cod.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-cod.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-cod.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-cod.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-dpd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-dpd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-dpd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-dpd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-dpd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-dpd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-sd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-sd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-sd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-sd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-sd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-sd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-std.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-std.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-std.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-std.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-std.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-std.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-ucd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-ucd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-ucd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-ucd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-ucd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-uml-ucd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dev-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dev-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dev-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dev-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-diagram-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-diagram-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-diagram-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-diagram-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-diagram-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-diagram-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-diagram.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-diagram.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-diagram.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-diagram.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-diagram.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-diagram.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dpd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-dpd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dpd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-dpd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-dpd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-dpd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-filelink.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-filelink.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-filelink.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-filelink.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-filelink.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-filelink.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-form-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-form-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-form-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-form-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-form-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-form-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-form-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-form-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-form-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-form-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-form-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-form-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-generation-step-log.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-generation-step-log.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-generation-step-log.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-generation-step-log.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-generation-step-log.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-generation-step-log.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-generation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-generation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-generation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-generation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-generation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-generation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-inheritance.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-inheritance.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-inheritance.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-inheritance.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-inheritance.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-inheritance.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-object-in-system.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-object-in-system.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-object-in-system.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-object-in-system.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-object-in-system.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-object-in-system.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-plugin-on-rep-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-plugin-on-rep-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-plugin-on-rep-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-plugin-on-rep-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-plugin-on-rep-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-plugin-on-rep-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-project.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-project.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-project.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-project.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-project.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-project.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-registered-plug-in.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-registered-plug-in.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-registered-plug-in.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-registered-plug-in.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-registered-plug-in.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-registered-plug-in.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-repository-browser-data-object-with-a-c-l.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-repository-browser-data-object-with-a-c-l.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-repository-browser-data-object-with-a-c-l.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-repository-browser-data-object-with-a-c-l.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-repository-browser-data-object-with-a-c-l.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-repository-browser-data-object-with-a-c-l.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-repository-browser-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-repository-browser-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-repository-browser-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-repository-browser-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-repository-browser-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-repository-browser-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-repository-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-repository-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-repository-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-repository-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-repository-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-repository-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-repository-object-with-plugins.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-repository-object-with-plugins.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-repository-object-with-plugins.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-repository-object-with-plugins.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-repository-object-with-plugins.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-repository-object-with-plugins.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-repository-ref-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-repository-ref-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-repository-ref-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-repository-ref-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-repository-ref-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-repository-ref-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-repository.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-repository.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-repository.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-repository.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-repository.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-repository.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-sd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-sd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-sd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-sd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-sd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-sd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-stage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-stage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-stage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-stage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-stage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-stage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-std.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-std.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-std.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-std.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-std.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-std.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-storage-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-storage-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-storage-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-storage-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-storage-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-storage-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-subsystem.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-subsystem.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-subsystem.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-subsystem.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-subsystem.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-subsystem.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-ucd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-ucd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-ucd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-ucd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-ucd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-ucd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-visual-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en/models');
  test('modules/ember-flexberry-designer/locales/en/models/fd-visual-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-visual-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/models/fd-visual-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/models/fd-visual-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/models/fd-visual-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/translations.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/en');
  test('modules/ember-flexberry-designer/locales/en/translations.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/en/translations.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/en/translations.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/en/translations.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/en/translations.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/components/fd-visual-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/components');
  test('modules/ember-flexberry-designer/locales/ru/components/fd-visual-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/components/fd-visual-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/components/fd-visual-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/components/fd-visual-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/components/fd-visual-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/components/fd-visual-edit-control-tree.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/components');
  test('modules/ember-flexberry-designer/locales/ru/components/fd-visual-edit-control-tree.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/components/fd-visual-edit-control-tree.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/components/fd-visual-edit-control-tree.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/components/fd-visual-edit-control-tree.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/components/fd-visual-edit-control-tree.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-aggregation-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-aggregation-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-aggregation-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-aggregation-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-aggregation-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-aggregation-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-aggregation-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-aggregation-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-aggregation-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-aggregation-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-aggregation-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-aggregation-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-application-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-application-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-application-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-application-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-application-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-application-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-appstruct-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-appstruct-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-appstruct-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-appstruct-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-appstruct-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-appstruct-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-association-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-association-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-association-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-association-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-association-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-association-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-association-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-association-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-association-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-association-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-association-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-association-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-business-server-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-business-server-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-business-server-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-business-server-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-business-server-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-business-server-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-class-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-class-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-class-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-class-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-class-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-class-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-class-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-class-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-class-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-class-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-class-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-class-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-configuration-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-configuration-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-configuration-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-configuration-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-configuration-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-configuration-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-configuration-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-configuration-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-configuration-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-configuration-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-configuration-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-configuration-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-diagram-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-diagram-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-diagram-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-diagram-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-diagram-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-diagram-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-diagram-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-diagram-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-diagram-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-diagram-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-diagram-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-diagram-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-edit-form-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-edit-form-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-edit-form-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-edit-form-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-edit-form-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-edit-form-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-editform-constructor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-editform-constructor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-editform-constructor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-editform-constructor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-editform-constructor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-editform-constructor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-enum-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-enum-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-enum-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-enum-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-enum-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-enum-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-external-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-external-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-external-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-external-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-external-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-external-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-generation-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-generation-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-generation-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-generation-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-generation-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-generation-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-generation-process-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-generation-process-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-generation-process-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-generation-process-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-generation-process-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-generation-process-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-inheritance-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-inheritance-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-inheritance-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-inheritance-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-inheritance-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-inheritance-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-inheritance-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-inheritance-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-inheritance-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-inheritance-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-inheritance-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-inheritance-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-interface-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-interface-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-interface-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-interface-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-interface-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-interface-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-list-form-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-list-form-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-list-form-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-list-form-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-list-form-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-list-form-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-listform-constructor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-listform-constructor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-listform-constructor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-listform-constructor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-listform-constructor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-listform-constructor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-stage-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-stage-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-stage-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-stage-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-stage-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-stage-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-stage-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-stage-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-stage-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-stage-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-stage-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-stage-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-system-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-system-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-system-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-system-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-system-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-system-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-system-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-system-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-system-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-system-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-system-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-system-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-type-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-type-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-type-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-type-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-type-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-type-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-user-form-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-user-form-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-user-form-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-user-form-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-user-form-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-user-form-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-view-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-view-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-view-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-view-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-view-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-view-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-view-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-view-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-view-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-view-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-view-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-view-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-visual-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/forms');
  test('modules/ember-flexberry-designer/locales/ru/forms/fd-visual-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-visual-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/forms/fd-visual-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/forms/fd-visual-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/forms/fd-visual-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-ad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-ad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-ad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-ad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-ad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-ad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-aggregation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-aggregation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-aggregation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-aggregation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-aggregation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-aggregation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-base-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-base-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-base-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-base-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-base-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-base-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-cad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-cad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-cad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-cad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-cad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-cad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-case-property.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-case-property.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-case-property.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-case-property.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-case-property.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-case-property.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-class-storage-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-class-storage-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-class-storage-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-class-storage-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-class-storage-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-class-storage-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-cod.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-cod.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-cod.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-cod.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-cod.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-cod.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-configuration.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-configuration.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-configuration.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-configuration.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-configuration.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-configuration.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-aggregation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-aggregation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-aggregation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-aggregation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-aggregation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-aggregation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-associated-detail-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-associated-detail-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-associated-detail-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-associated-detail-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-associated-detail-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-associated-detail-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-attribute.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-attribute.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-attribute.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-attribute.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-attribute.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-attribute.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-base-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-base-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-base-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-base-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-base-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-base-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-control-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-control-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-control-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-control-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-control-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-control-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-diagram-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-diagram-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-diagram-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-diagram-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-diagram-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-diagram-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-filelink.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-filelink.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-filelink.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-filelink.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-filelink.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-filelink.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-form-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-form-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-form-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-form-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-form-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-form-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-form-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-form-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-form-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-form-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-form-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-form-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-inheritance.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-inheritance.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-inheritance.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-inheritance.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-inheritance.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-inheritance.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-method.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-method.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-method.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-method.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-method.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-method.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-module-setting-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-module-setting-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-module-setting-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-module-setting-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-module-setting-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-module-setting-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-module-setting.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-module-setting.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-module-setting.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-module-setting.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-module-setting.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-module-setting.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-parameter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-parameter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-parameter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-parameter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-parameter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-parameter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-process-status.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-process-status.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-process-status.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-process-status.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-process-status.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-process-status.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-stage-history.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-stage-history.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-stage-history.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-stage-history.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-stage-history.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-stage-history.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-stage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-stage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-stage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-stage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-stage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-stage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-system.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-system.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-system.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-system.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-system.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-system.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-task.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-task.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-task.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-task.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-task.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-task.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-type-definition.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-type-definition.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-type-definition.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-type-definition.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-type-definition.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-type-definition.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-ad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-ad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-ad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-ad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-ad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-ad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-cad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-cad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-cad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-cad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-cad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-cad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-cod.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-cod.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-cod.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-cod.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-cod.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-cod.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-dpd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-dpd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-dpd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-dpd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-dpd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-dpd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-sd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-sd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-sd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-sd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-sd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-sd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-std.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-std.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-std.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-std.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-std.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-std.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-ucd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-ucd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-ucd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-ucd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-ucd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-uml-ucd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dev-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dev-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dev-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dev-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-diagram-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-diagram-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-diagram-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-diagram-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-diagram-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-diagram-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-diagram.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-diagram.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-diagram.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-diagram.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-diagram.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-diagram.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dpd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-dpd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dpd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-dpd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-dpd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-dpd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-filelink.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-filelink.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-filelink.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-filelink.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-filelink.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-filelink.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-form-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-form-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-form-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-form-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-form-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-form-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-form-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-form-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-form-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-form-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-form-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-form-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-generation-step-log.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-generation-step-log.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-generation-step-log.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-generation-step-log.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-generation-step-log.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-generation-step-log.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-generation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-generation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-generation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-generation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-generation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-generation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-inheritance.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-inheritance.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-inheritance.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-inheritance.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-inheritance.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-inheritance.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-object-in-system.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-object-in-system.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-object-in-system.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-object-in-system.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-object-in-system.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-object-in-system.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-plugin-on-rep-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-plugin-on-rep-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-plugin-on-rep-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-plugin-on-rep-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-plugin-on-rep-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-plugin-on-rep-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-project.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-project.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-project.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-project.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-project.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-project.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-registered-plug-in.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-registered-plug-in.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-registered-plug-in.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-registered-plug-in.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-registered-plug-in.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-registered-plug-in.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-repository-browser-data-object-with-a-c-l.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-repository-browser-data-object-with-a-c-l.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-repository-browser-data-object-with-a-c-l.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-repository-browser-data-object-with-a-c-l.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-repository-browser-data-object-with-a-c-l.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-repository-browser-data-object-with-a-c-l.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-repository-browser-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-repository-browser-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-repository-browser-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-repository-browser-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-repository-browser-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-repository-browser-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-repository-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-repository-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-repository-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-repository-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-repository-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-repository-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-repository-object-with-plugins.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-repository-object-with-plugins.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-repository-object-with-plugins.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-repository-object-with-plugins.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-repository-object-with-plugins.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-repository-object-with-plugins.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-repository-ref-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-repository-ref-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-repository-ref-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-repository-ref-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-repository-ref-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-repository-ref-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-repository.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-repository.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-repository.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-repository.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-repository.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-repository.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-sd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-sd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-sd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-sd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-sd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-sd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-stage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-stage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-stage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-stage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-stage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-stage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-std.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-std.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-std.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-std.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-std.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-std.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-storage-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-storage-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-storage-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-storage-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-storage-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-storage-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-subsystem.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-subsystem.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-subsystem.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-subsystem.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-subsystem.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-subsystem.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-ucd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-ucd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-ucd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-ucd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-ucd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-ucd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-visual-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru/models');
  test('modules/ember-flexberry-designer/locales/ru/models/fd-visual-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-visual-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/models/fd-visual-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/models/fd-visual-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/models/fd-visual-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/translations.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/locales/ru');
  test('modules/ember-flexberry-designer/locales/ru/translations.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/locales/ru/translations.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/locales/ru/translations.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/locales/ru/translations.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/locales/ru/translations.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/fd-draggable-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins');
  test('modules/ember-flexberry-designer/mixins/fd-draggable-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/fd-draggable-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/fd-draggable-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/fd-draggable-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/fd-draggable-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/fd-limit-by-stage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins');
  test('modules/ember-flexberry-designer/mixins/fd-limit-by-stage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/fd-limit-by-stage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/fd-limit-by-stage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/fd-limit-by-stage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/fd-limit-by-stage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/fd-loading-for-transition.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins');
  test('modules/ember-flexberry-designer/mixins/fd-loading-for-transition.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/fd-loading-for-transition.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/fd-loading-for-transition.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/fd-loading-for-transition.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/fd-loading-for-transition.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/fd-work-panel-toggler.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins');
  test('modules/ember-flexberry-designer/mixins/fd-work-panel-toggler.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/fd-work-panel-toggler.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/fd-work-panel-toggler.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/fd-work-panel-toggler.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/fd-work-panel-toggler.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-ad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-ad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-ad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-ad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-ad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-ad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-aggregation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-aggregation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-aggregation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-aggregation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-aggregation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-aggregation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-base-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-base-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-base-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-base-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-base-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-base-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-cad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-cad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-cad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-cad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-cad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-cad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-case-property.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-case-property.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-case-property.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-case-property.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-case-property.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-case-property.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-class-storage-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-class-storage-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-class-storage-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-class-storage-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-class-storage-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-class-storage-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-cod.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-cod.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-cod.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-cod.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-cod.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-cod.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-configuration.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-configuration.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-configuration.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-configuration.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-configuration.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-configuration.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-aggregation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-aggregation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-aggregation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-aggregation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-aggregation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-aggregation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-associated-detail-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-associated-detail-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-associated-detail-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-associated-detail-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-associated-detail-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-associated-detail-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-attribute.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-attribute.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-attribute.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-attribute.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-attribute.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-attribute.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-base-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-base-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-base-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-base-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-base-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-base-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-control-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-control-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-control-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-control-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-control-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-control-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-diagram-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-diagram-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-diagram-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-diagram-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-diagram-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-diagram-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-filelink.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-filelink.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-filelink.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-filelink.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-filelink.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-filelink.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-form-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-form-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-form-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-form-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-form-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-form-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-form-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-form-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-form-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-form-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-form-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-form-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-inheritance.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-inheritance.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-inheritance.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-inheritance.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-inheritance.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-inheritance.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-method.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-method.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-method.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-method.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-method.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-method.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-module-setting-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-module-setting-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-module-setting-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-module-setting-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-module-setting-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-module-setting-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-module-setting.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-module-setting.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-module-setting.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-module-setting.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-module-setting.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-module-setting.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-parameter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-parameter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-parameter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-parameter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-parameter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-parameter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-process-status.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-process-status.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-process-status.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-process-status.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-process-status.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-process-status.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-stage-history.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-stage-history.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-stage-history.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-stage-history.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-stage-history.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-stage-history.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-stage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-stage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-stage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-stage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-stage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-stage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-system.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-system.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-system.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-system.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-system.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-system.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-task.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-task.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-task.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-task.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-task.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-task.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-type-definition.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-type-definition.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-type-definition.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-type-definition.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-type-definition.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-type-definition.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-ad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-ad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-ad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-ad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-ad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-ad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-cad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-cad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-cad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-cad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-cad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-cad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-cod.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-cod.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-cod.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-cod.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-cod.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-cod.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-dpd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-dpd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-dpd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-dpd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-dpd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-dpd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-sd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-sd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-sd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-sd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-sd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-sd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-std.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-std.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-std.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-std.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-std.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-std.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-ucd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-ucd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-ucd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-ucd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-ucd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-uml-ucd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dev-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-diagram-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-diagram-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-diagram-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-diagram-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-diagram-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-diagram-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-diagram.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-diagram.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-diagram.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-diagram.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-diagram.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-diagram.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dpd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-dpd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dpd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-dpd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-dpd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-dpd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-filelink.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-filelink.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-filelink.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-filelink.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-filelink.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-filelink.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-form-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-form-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-form-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-form-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-form-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-form-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-form-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-form-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-form-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-form-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-form-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-form-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-generation-step-log.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-generation-step-log.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-generation-step-log.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-generation-step-log.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-generation-step-log.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-generation-step-log.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-generation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-generation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-generation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-generation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-generation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-generation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-inheritance.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-inheritance.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-inheritance.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-inheritance.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-inheritance.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-inheritance.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-object-in-system.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-object-in-system.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-object-in-system.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-object-in-system.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-object-in-system.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-object-in-system.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-plugin-on-rep-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-plugin-on-rep-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-plugin-on-rep-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-plugin-on-rep-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-plugin-on-rep-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-plugin-on-rep-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-project.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-project.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-project.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-project.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-project.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-project.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-registered-plug-in.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-registered-plug-in.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-registered-plug-in.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-registered-plug-in.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-registered-plug-in.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-registered-plug-in.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-browser-data-object-with-a-c-l.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-browser-data-object-with-a-c-l.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-browser-data-object-with-a-c-l.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-browser-data-object-with-a-c-l.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-browser-data-object-with-a-c-l.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-browser-data-object-with-a-c-l.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-browser-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-browser-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-browser-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-browser-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-browser-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-browser-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-object-with-plugins.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-object-with-plugins.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-object-with-plugins.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-object-with-plugins.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-object-with-plugins.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-object-with-plugins.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-ref-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-ref-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-ref-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-ref-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-ref-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository-ref-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-repository.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-sd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-sd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-sd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-sd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-sd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-sd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-stage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-stage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-stage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-stage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-stage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-stage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-std.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-std.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-std.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-std.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-std.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-std.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-storage-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-storage-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-storage-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-storage-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-storage-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-storage-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-subsystem.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-subsystem.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-subsystem.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-subsystem.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-subsystem.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-subsystem.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-ucd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-ucd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-ucd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-ucd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-ucd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-ucd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/models');
  test('modules/ember-flexberry-designer/mixins/regenerated/models/fd-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/models/fd-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/models/fd-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/models/fd-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/objects/new-platform-flexberry-web-designer-business-server-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/objects');
  test('modules/ember-flexberry-designer/mixins/regenerated/objects/new-platform-flexberry-web-designer-business-server-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/objects/new-platform-flexberry-web-designer-business-server-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/objects/new-platform-flexberry-web-designer-business-server-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/objects/new-platform-flexberry-web-designer-business-server-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/objects/new-platform-flexberry-web-designer-business-server-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ad-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ad-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ad-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ad-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ad-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ad-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-aggregation-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-aggregation-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-aggregation-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-aggregation-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-aggregation-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-aggregation-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-aggregation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-aggregation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-aggregation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-aggregation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-aggregation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-aggregation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-association-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-association-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-association-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-association-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-association-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-association-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-base-association-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-base-association-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-base-association-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-base-association-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-base-association-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-base-association-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-base-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-base-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-base-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-base-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-base-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-base-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cad-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cad-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cad-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cad-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cad-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cad-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-case-property-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-case-property-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-case-property-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-case-property-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-case-property-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-case-property-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-case-property.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-case-property.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-case-property.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-case-property.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-case-property.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-case-property.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-storage-type-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-storage-type-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-storage-type-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-storage-type-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-storage-type-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-storage-type-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-storage-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-storage-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-storage-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-storage-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-storage-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class-storage-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cod-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cod-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cod-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cod-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cod-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cod-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cod.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cod.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cod.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cod.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cod.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-cod.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-configuration-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-configuration-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-configuration-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-configuration-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-configuration-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-configuration-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-configuration.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-configuration.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-configuration.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-configuration.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-configuration.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-configuration.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-aggregation-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-aggregation-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-aggregation-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-aggregation-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-aggregation-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-aggregation-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-aggregation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-aggregation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-aggregation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-aggregation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-aggregation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-aggregation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-associated-detail-view-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-associated-detail-view-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-associated-detail-view-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-associated-detail-view-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-associated-detail-view-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-associated-detail-view-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-associated-detail-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-associated-detail-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-associated-detail-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-associated-detail-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-associated-detail-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-associated-detail-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-association-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-association-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-association-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-association-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-association-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-association-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-attribute-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-attribute-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-attribute-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-attribute-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-attribute-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-attribute-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-attribute.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-attribute.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-attribute.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-attribute.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-attribute.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-attribute.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-base-association-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-base-association-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-base-association-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-base-association-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-base-association-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-base-association-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-base-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-base-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-base-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-base-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-base-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-base-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-class-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-class-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-class-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-class-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-class-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-class-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-control-type-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-control-type-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-control-type-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-control-type-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-control-type-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-control-type-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-control-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-control-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-control-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-control-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-control-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-control-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-diagram-link-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-diagram-link-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-diagram-link-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-diagram-link-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-diagram-link-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-diagram-link-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-diagram-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-diagram-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-diagram-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-diagram-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-diagram-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-diagram-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-filelink-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-filelink-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-filelink-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-filelink-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-filelink-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-filelink-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-filelink.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-filelink.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-filelink.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-filelink.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-filelink.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-filelink.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-control-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-control-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-control-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-control-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-control-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-control-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-view-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-view-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-view-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-view-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-view-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-view-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-form-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-inheritance-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-inheritance-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-inheritance-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-inheritance-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-inheritance-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-inheritance-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-inheritance.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-inheritance.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-inheritance.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-inheritance.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-inheritance.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-inheritance.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-method-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-method-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-method-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-method-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-method-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-method-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-method.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-method.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-method.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-method.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-method.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-method.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-type-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-type-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-type-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-type-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-type-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-type-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-module-setting.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-parameter-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-parameter-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-parameter-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-parameter-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-parameter-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-parameter-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-parameter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-parameter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-parameter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-parameter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-parameter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-parameter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-process-status-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-process-status-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-process-status-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-process-status-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-process-status-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-process-status-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-process-status.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-process-status.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-process-status.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-process-status.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-process-status.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-process-status.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-history-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-history-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-history-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-history-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-history-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-history-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-history.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-history.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-history.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-history.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-history.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-history.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-stage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-system-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-system-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-system-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-system-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-system-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-system-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-system.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-system.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-system.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-system.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-system.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-system.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-task-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-task-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-task-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-task-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-task-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-task-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-task.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-task.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-task.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-task.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-task.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-task.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-type-definition-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-type-definition-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-type-definition-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-type-definition-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-type-definition-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-type-definition-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-type-definition.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-type-definition.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-type-definition.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-type-definition.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-type-definition.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-type-definition.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ad-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ad-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ad-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ad-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ad-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ad-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cad-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cad-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cad-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cad-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cad-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cad-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cod-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cod-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cod-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cod-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cod-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cod-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cod.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cod.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cod.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cod.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cod.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-cod.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-dpd-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-dpd-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-dpd-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-dpd-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-dpd-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-dpd-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-dpd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-dpd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-dpd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-dpd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-dpd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-dpd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-sd-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-sd-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-sd-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-sd-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-sd-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-sd-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-sd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-sd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-sd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-sd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-sd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-sd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-std-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-std-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-std-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-std-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-std-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-std-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-std.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-std.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-std.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-std.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-std.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-std.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ucd-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ucd-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ucd-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ucd-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ucd-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ucd-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ucd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ucd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ucd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ucd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ucd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-uml-ucd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-view-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-view-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-view-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-view-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-view-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-view-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dev-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-link-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-link-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-link-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-link-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-link-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-link-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-diagram.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dpd-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dpd-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dpd-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dpd-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dpd-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dpd-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dpd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dpd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dpd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dpd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dpd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-dpd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-filelink-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-filelink-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-filelink-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-filelink-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-filelink-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-filelink-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-filelink.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-filelink.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-filelink.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-filelink.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-filelink.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-filelink.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-control-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-control-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-control-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-control-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-control-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-control-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-view-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-view-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-view-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-view-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-view-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-view-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-form-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-step-log-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-step-log-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-step-log-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-step-log-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-step-log-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-step-log-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-step-log.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-step-log.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-step-log.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-step-log.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-step-log.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation-step-log.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-generation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-inheritance-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-inheritance-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-inheritance-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-inheritance-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-inheritance-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-inheritance-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-inheritance.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-inheritance.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-inheritance.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-inheritance.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-inheritance.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-inheritance.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-object-in-system-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-object-in-system-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-object-in-system-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-object-in-system-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-object-in-system-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-object-in-system-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-object-in-system.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-object-in-system.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-object-in-system.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-object-in-system.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-object-in-system.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-object-in-system.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-plugin-on-rep-object-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-plugin-on-rep-object-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-plugin-on-rep-object-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-plugin-on-rep-object-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-plugin-on-rep-object-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-plugin-on-rep-object-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-plugin-on-rep-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-plugin-on-rep-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-plugin-on-rep-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-plugin-on-rep-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-plugin-on-rep-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-plugin-on-rep-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-project-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-project-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-project-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-project-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-project-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-project-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-project.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-project.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-project.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-project.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-project.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-project.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-registered-plug-in-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-registered-plug-in-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-registered-plug-in-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-registered-plug-in-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-registered-plug-in-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-registered-plug-in-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-registered-plug-in.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-registered-plug-in.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-registered-plug-in.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-registered-plug-in.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-registered-plug-in.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-registered-plug-in.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-with-a-c-l-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-with-a-c-l-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-with-a-c-l-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-with-a-c-l-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-with-a-c-l-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-with-a-c-l-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-with-a-c-l.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-with-a-c-l.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-with-a-c-l.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-with-a-c-l.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-with-a-c-l.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object-with-a-c-l.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-browser-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-data-object-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-data-object-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-data-object-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-data-object-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-data-object-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-data-object-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-object-with-plugins-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-object-with-plugins-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-object-with-plugins-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-object-with-plugins-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-object-with-plugins-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-object-with-plugins-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-object-with-plugins.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-object-with-plugins.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-object-with-plugins.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-object-with-plugins.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-object-with-plugins.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-object-with-plugins.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-ref-data-object-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-ref-data-object-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-ref-data-object-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-ref-data-object-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-ref-data-object-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-ref-data-object-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-ref-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-ref-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-ref-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-ref-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-ref-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository-ref-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-repository.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-sd-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-sd-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-sd-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-sd-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-sd-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-sd-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-sd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-sd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-sd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-sd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-sd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-sd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-stage-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-stage-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-stage-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-stage-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-stage-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-stage-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-stage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-stage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-stage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-stage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-stage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-stage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-std-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-std-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-std-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-std-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-std-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-std-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-std.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-std.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-std.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-std.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-std.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-std.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-storage-type-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-storage-type-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-storage-type-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-storage-type-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-storage-type-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-storage-type-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-storage-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-storage-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-storage-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-storage-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-storage-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-storage-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-subsystem-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-subsystem-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-subsystem-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-subsystem-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-subsystem-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-subsystem-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-subsystem.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-subsystem.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-subsystem.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-subsystem.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-subsystem.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-subsystem.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ucd-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ucd-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ucd-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ucd-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ucd-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ucd-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ucd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ucd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ucd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ucd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ucd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-ucd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-view-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-view-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-view-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-view-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-view-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-view-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/mixins/regenerated/serializers');
  test('modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/mixins/regenerated/serializers/fd-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-ad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-ad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-ad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-ad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-ad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-ad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-aggregation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-aggregation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-aggregation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-aggregation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-aggregation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-aggregation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-base-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-base-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-base-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-base-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-base-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-base-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-cad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-cad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-cad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-cad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-cad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-cad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-case-property.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-case-property.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-case-property.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-case-property.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-case-property.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-case-property.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-class-storage-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-class-storage-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-class-storage-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-class-storage-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-class-storage-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-class-storage-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-cod.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-cod.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-cod.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-cod.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-cod.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-cod.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-configuration.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-configuration.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-configuration.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-configuration.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-configuration.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-configuration.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-aggregation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-aggregation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-aggregation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-aggregation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-aggregation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-aggregation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-associated-detail-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-associated-detail-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-associated-detail-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-associated-detail-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-associated-detail-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-associated-detail-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-attribute.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-attribute.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-attribute.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-attribute.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-attribute.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-attribute.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-base-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-base-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-base-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-base-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-base-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-base-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-control-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-control-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-control-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-control-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-control-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-control-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-diagram-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-diagram-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-diagram-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-diagram-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-diagram-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-diagram-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-filelink.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-filelink.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-filelink.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-filelink.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-filelink.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-filelink.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-form-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-form-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-form-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-form-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-form-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-form-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-form-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-form-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-form-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-form-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-form-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-form-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-inheritance.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-inheritance.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-inheritance.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-inheritance.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-inheritance.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-inheritance.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-method.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-method.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-method.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-method.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-method.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-method.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-module-setting-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-module-setting-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-module-setting-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-module-setting-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-module-setting-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-module-setting-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-module-setting.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-module-setting.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-module-setting.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-module-setting.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-module-setting.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-module-setting.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-parameter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-parameter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-parameter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-parameter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-parameter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-parameter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-process-status.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-process-status.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-process-status.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-process-status.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-process-status.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-process-status.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-stage-history.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-stage-history.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-stage-history.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-stage-history.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-stage-history.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-stage-history.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-stage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-stage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-stage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-stage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-stage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-stage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-system.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-system.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-system.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-system.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-system.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-system.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-task.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-task.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-task.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-task.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-task.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-task.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-type-definition.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-type-definition.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-type-definition.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-type-definition.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-type-definition.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-type-definition.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-ad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-uml-ad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-ad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-ad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-uml-ad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-ad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-cad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-uml-cad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-cad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-cad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-uml-cad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-cad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-cod.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-uml-cod.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-cod.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-cod.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-uml-cod.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-cod.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-dpd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-uml-dpd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-dpd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-dpd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-uml-dpd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-dpd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-sd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-uml-sd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-sd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-sd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-uml-sd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-sd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-std.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-uml-std.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-std.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-std.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-uml-std.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-std.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-ucd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-uml-ucd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-ucd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-uml-ucd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-uml-ucd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-uml-ucd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dev-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dev-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dev-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dev-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dev-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-diagram-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-diagram-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-diagram-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-diagram-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-diagram-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-diagram-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-diagram.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-diagram.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-diagram.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-diagram.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-diagram.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-diagram.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dpd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-dpd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-dpd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-dpd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-dpd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-dpd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-filelink.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-filelink.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-filelink.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-filelink.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-filelink.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-filelink.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-form-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-form-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-form-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-form-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-form-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-form-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-form-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-form-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-form-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-form-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-form-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-form-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-generation-step-log.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-generation-step-log.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-generation-step-log.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-generation-step-log.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-generation-step-log.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-generation-step-log.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-generation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-generation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-generation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-generation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-generation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-generation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-inheritance.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-inheritance.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-inheritance.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-inheritance.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-inheritance.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-inheritance.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-object-in-system.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-object-in-system.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-object-in-system.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-object-in-system.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-object-in-system.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-object-in-system.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-plugin-on-rep-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-plugin-on-rep-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-plugin-on-rep-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-plugin-on-rep-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-plugin-on-rep-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-plugin-on-rep-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-project.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-project.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-project.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-project.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-project.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-project.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-registered-plug-in.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-registered-plug-in.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-registered-plug-in.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-registered-plug-in.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-registered-plug-in.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-registered-plug-in.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-repository-browser-data-object-with-a-c-l.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-repository-browser-data-object-with-a-c-l.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-repository-browser-data-object-with-a-c-l.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-repository-browser-data-object-with-a-c-l.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-repository-browser-data-object-with-a-c-l.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-repository-browser-data-object-with-a-c-l.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-repository-browser-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-repository-browser-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-repository-browser-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-repository-browser-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-repository-browser-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-repository-browser-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-repository-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-repository-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-repository-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-repository-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-repository-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-repository-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-repository-object-with-plugins.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-repository-object-with-plugins.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-repository-object-with-plugins.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-repository-object-with-plugins.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-repository-object-with-plugins.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-repository-object-with-plugins.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-repository-ref-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-repository-ref-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-repository-ref-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-repository-ref-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-repository-ref-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-repository-ref-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-repository.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-repository.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-repository.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-repository.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-repository.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-repository.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-sd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-sd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-sd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-sd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-sd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-sd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-stage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-stage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-stage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-stage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-stage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-stage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-std.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-std.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-std.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-std.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-std.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-std.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-storage-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-storage-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-storage-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-storage-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-storage-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-storage-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-subsystem.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-subsystem.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-subsystem.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-subsystem.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-subsystem.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-subsystem.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-ucd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-ucd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-ucd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-ucd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-ucd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-ucd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-visual-edit-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-visual-edit-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-visual-edit-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-visual-edit-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-visual-edit-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-visual-edit-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-visual-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/models');
  test('modules/ember-flexberry-designer/models/fd-visual-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/models/fd-visual-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/models/fd-visual-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/models/fd-visual-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/models/fd-visual-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-appstruct-tree.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects');
  test('modules/ember-flexberry-designer/objects/fd-appstruct-tree.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/fd-appstruct-tree.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-appstruct-tree.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/fd-appstruct-tree.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/fd-appstruct-tree.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-attributes-tree.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects');
  test('modules/ember-flexberry-designer/objects/fd-attributes-tree.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/fd-attributes-tree.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-attributes-tree.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/fd-attributes-tree.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/fd-attributes-tree.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-editform-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects');
  test('modules/ember-flexberry-designer/objects/fd-editform-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/fd-editform-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-editform-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/fd-editform-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/fd-editform-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-editform-group.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects');
  test('modules/ember-flexberry-designer/objects/fd-editform-group.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/fd-editform-group.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-editform-group.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/fd-editform-group.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/fd-editform-group.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-editform-row.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects');
  test('modules/ember-flexberry-designer/objects/fd-editform-row.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/fd-editform-row.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-editform-row.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/fd-editform-row.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/fd-editform-row.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-editform-tab.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects');
  test('modules/ember-flexberry-designer/objects/fd-editform-tab.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/fd-editform-tab.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-editform-tab.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/fd-editform-tab.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/fd-editform-tab.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-editform-tabgroup.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects');
  test('modules/ember-flexberry-designer/objects/fd-editform-tabgroup.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/fd-editform-tabgroup.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-editform-tabgroup.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/fd-editform-tabgroup.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/fd-editform-tabgroup.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-listform-column.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects');
  test('modules/ember-flexberry-designer/objects/fd-listform-column.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/fd-listform-column.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-listform-column.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/fd-listform-column.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/fd-listform-column.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-view-attributes-detail.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects');
  test('modules/ember-flexberry-designer/objects/fd-view-attributes-detail.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/fd-view-attributes-detail.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-view-attributes-detail.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/fd-view-attributes-detail.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/fd-view-attributes-detail.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-view-attributes-master.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects');
  test('modules/ember-flexberry-designer/objects/fd-view-attributes-master.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/fd-view-attributes-master.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-view-attributes-master.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/fd-view-attributes-master.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/fd-view-attributes-master.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-view-attributes-property.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects');
  test('modules/ember-flexberry-designer/objects/fd-view-attributes-property.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/fd-view-attributes-property.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/fd-view-attributes-property.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/fd-view-attributes-property.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/fd-view-attributes-property.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/new-platform-flexberry-web-designer-business-server-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects');
  test('modules/ember-flexberry-designer/objects/new-platform-flexberry-web-designer-business-server-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/new-platform-flexberry-web-designer-business-server-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/new-platform-flexberry-web-designer-business-server-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/new-platform-flexberry-web-designer-business-server-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/new-platform-flexberry-web-designer-business-server-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects/uml-primitives');
  test('modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects/uml-primitives');
  test('modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-composition.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects/uml-primitives');
  test('modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-composition.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-composition.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-composition.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-composition.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-composition.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-element.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects/uml-primitives');
  test('modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-element.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-element.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-element.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-element.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-element.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-generalization.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects/uml-primitives');
  test('modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-generalization.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-generalization.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-generalization.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-generalization.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-generalization.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects/uml-primitives');
  test('modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-primitive.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/objects/uml-primitives');
  test('modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-primitive.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-primitive.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-primitive.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-primitive.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/objects/uml-primitives/fd-uml-primitive.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-aggregation-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-aggregation-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-aggregation-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-aggregation-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-aggregation-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-aggregation-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-aggregation-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-aggregation-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-aggregation-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-aggregation-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-aggregation-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-aggregation-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-aggregation-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-aggregation-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-aggregation-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-aggregation-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-aggregation-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-aggregation-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-aggregation-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-application-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-application-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-application-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-application-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-application-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-application-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-application-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-application-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-application-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-application-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-application-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-application-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-application-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-appstruct-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-appstruct-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-appstruct-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-appstruct-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-appstruct-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-appstruct-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-association-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-association-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-association-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-association-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-association-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-association-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-association-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-association-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-association-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-association-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-association-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-association-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-association-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-association-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-association-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-association-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-association-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-association-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-association-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-business-server-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-business-server-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-business-server-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-business-server-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-business-server-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-business-server-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-business-server-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-business-server-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-business-server-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-business-server-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-business-server-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-business-server-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-business-server-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-class-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-class-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-class-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-class-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-class-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-class-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-class-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-class-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-class-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-class-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-class-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-class-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-class-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-class-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-class-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-class-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-class-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-class-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-class-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-configuration-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-configuration-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-configuration-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-configuration-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-configuration-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-configuration-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-configuration-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-configuration-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-configuration-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-configuration-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-configuration-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-configuration-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-configuration-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-configuration-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-configuration-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-configuration-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-configuration-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-configuration-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-configuration-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-diagram-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-diagram-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-diagram-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-diagram-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-diagram-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-diagram-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-diagram-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-diagram-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-diagram-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-diagram-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-diagram-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-diagram-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-diagram-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-diagram-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-diagram-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-diagram-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-diagram-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-diagram-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-diagram-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-edit-enum-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-edit-enum-form');
  test('modules/ember-flexberry-designer/routes/fd-edit-enum-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-edit-enum-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-edit-enum-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-edit-enum-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-edit-enum-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-edit-form-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-edit-form-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-edit-form-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-edit-form-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-edit-form-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-edit-form-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-edit-form-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-edit-form-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-edit-form-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-edit-form-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-edit-form-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-edit-form-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-edit-form-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-editform-constructor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-editform-constructor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-editform-constructor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-editform-constructor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-editform-constructor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-editform-constructor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-editform-constructor/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-editform-constructor');
  test('modules/ember-flexberry-designer/routes/fd-editform-constructor/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-editform-constructor/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-editform-constructor/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-editform-constructor/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-editform-constructor/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-enum-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-enum-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-enum-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-enum-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-enum-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-enum-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-external-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-external-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-external-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-external-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-external-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-external-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-external-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-external-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-external-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-external-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-external-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-external-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-external-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-generation-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-generation-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-generation-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-generation-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-generation-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-generation-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-generation-process-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-generation-process-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-generation-process-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-generation-process-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-generation-process-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-generation-process-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-generation-process-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-generation-process-form');
  test('modules/ember-flexberry-designer/routes/fd-generation-process-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-generation-process-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-generation-process-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-generation-process-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-generation-process-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-inheritance-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-inheritance-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-inheritance-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-inheritance-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-inheritance-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-inheritance-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-inheritance-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-inheritance-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-inheritance-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-inheritance-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-inheritance-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-inheritance-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-inheritance-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-inheritance-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-inheritance-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-inheritance-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-inheritance-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-inheritance-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-inheritance-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-interface-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-interface-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-interface-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-interface-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-interface-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-interface-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-interface-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-interface-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-interface-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-interface-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-interface-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-interface-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-interface-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-list-form-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-list-form-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-list-form-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-list-form-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-list-form-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-list-form-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-list-form-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-list-form-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-list-form-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-list-form-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-list-form-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-list-form-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-list-form-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-listform-constructor.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-listform-constructor.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-listform-constructor.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-listform-constructor.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-listform-constructor.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-listform-constructor.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-stage-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-stage-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-stage-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-stage-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-stage-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-stage-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-stage-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-stage-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-stage-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-stage-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-stage-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-stage-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-stage-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-stage-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-stage-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-stage-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-stage-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-stage-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-stage-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-system-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-system-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-system-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-system-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-system-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-system-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-system-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-system-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-system-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-system-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-system-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-system-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-system-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-system-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-system-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-system-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-system-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-system-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-system-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-type-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-type-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-type-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-type-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-type-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-type-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-type-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-type-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-type-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-type-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-type-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-type-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-type-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-user-form-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-user-form-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-user-form-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-user-form-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-user-form-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-user-form-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-user-form-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-user-form-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-user-form-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-user-form-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-user-form-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-user-form-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-user-form-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-view-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-view-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-view-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-view-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-view-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-view-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-view-edit-form/new.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes/fd-view-edit-form');
  test('modules/ember-flexberry-designer/routes/fd-view-edit-form/new.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-view-edit-form/new.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-view-edit-form/new.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-view-edit-form/new.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-view-edit-form/new.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-view-list-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-view-list-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-view-list-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-view-list-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-view-list-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-view-list-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-visual-edit-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-visual-edit-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-visual-edit-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-visual-edit-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-visual-edit-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-visual-edit-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-visual-edit-form.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/routes');
  test('modules/ember-flexberry-designer/routes/fd-visual-edit-form.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/routes/fd-visual-edit-form.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/routes/fd-visual-edit-form.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/routes/fd-visual-edit-form.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/routes/fd-visual-edit-form.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/application-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/application-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/application-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/application-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/application-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/application-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/application.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/application.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/application.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/application.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/application.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/application.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-ad-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-ad-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-ad-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-ad-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-ad-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-ad-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-ad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-ad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-ad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-ad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-ad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-ad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-aggregation-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-aggregation-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-aggregation-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-aggregation-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-aggregation-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-aggregation-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-aggregation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-aggregation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-aggregation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-aggregation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-aggregation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-aggregation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-association-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-association-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-association-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-association-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-association-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-association-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-base-association-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-base-association-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-base-association-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-base-association-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-base-association-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-base-association-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-base-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-base-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-base-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-base-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-base-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-base-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-cad-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-cad-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-cad-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-cad-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-cad-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-cad-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-cad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-cad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-cad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-cad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-cad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-cad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-case-property-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-case-property-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-case-property-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-case-property-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-case-property-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-case-property-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-case-property.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-case-property.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-case-property.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-case-property.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-case-property.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-case-property.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-class-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-class-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-class-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-class-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-class-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-class-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-class-storage-type-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-class-storage-type-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-class-storage-type-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-class-storage-type-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-class-storage-type-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-class-storage-type-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-class-storage-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-class-storage-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-class-storage-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-class-storage-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-class-storage-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-class-storage-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-cod-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-cod-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-cod-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-cod-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-cod-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-cod-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-cod.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-cod.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-cod.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-cod.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-cod.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-cod.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-configuration-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-configuration-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-configuration-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-configuration-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-configuration-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-configuration-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-configuration.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-configuration.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-configuration.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-configuration.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-configuration.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-configuration.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-aggregation-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-aggregation-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-aggregation-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-aggregation-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-aggregation-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-aggregation-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-aggregation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-aggregation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-aggregation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-aggregation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-aggregation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-aggregation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-associated-detail-view-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-associated-detail-view-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-associated-detail-view-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-associated-detail-view-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-associated-detail-view-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-associated-detail-view-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-associated-detail-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-associated-detail-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-associated-detail-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-associated-detail-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-associated-detail-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-associated-detail-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-association-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-association-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-association-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-association-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-association-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-association-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-attribute-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-attribute-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-attribute-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-attribute-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-attribute-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-attribute-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-attribute.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-attribute.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-attribute.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-attribute.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-attribute.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-attribute.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-base-association-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-base-association-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-base-association-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-base-association-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-base-association-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-base-association-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-base-association.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-base-association.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-base-association.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-base-association.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-base-association.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-base-association.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-class-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-class-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-class-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-class-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-class-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-class-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-control-type-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-control-type-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-control-type-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-control-type-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-control-type-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-control-type-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-control-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-control-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-control-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-control-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-control-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-control-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-diagram-link-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-diagram-link-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-diagram-link-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-diagram-link-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-diagram-link-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-diagram-link-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-diagram-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-diagram-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-diagram-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-diagram-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-diagram-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-diagram-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-filelink-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-filelink-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-filelink-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-filelink-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-filelink-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-filelink-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-filelink.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-filelink.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-filelink.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-filelink.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-filelink.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-filelink.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-form-control-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-form-control-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-form-control-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-form-control-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-form-control-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-form-control-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-form-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-form-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-form-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-form-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-form-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-form-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-form-view-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-form-view-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-form-view-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-form-view-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-form-view-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-form-view-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-form-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-form-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-form-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-form-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-form-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-form-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-inheritance-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-inheritance-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-inheritance-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-inheritance-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-inheritance-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-inheritance-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-inheritance.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-inheritance.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-inheritance.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-inheritance.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-inheritance.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-inheritance.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-method-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-method-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-method-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-method-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-method-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-method-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-method.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-method.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-method.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-method.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-method.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-method.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-module-setting-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-module-setting-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-module-setting-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-module-setting-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-module-setting-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-module-setting-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-module-setting-type-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-module-setting-type-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-module-setting-type-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-module-setting-type-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-module-setting-type-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-module-setting-type-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-module-setting-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-module-setting-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-module-setting-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-module-setting-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-module-setting-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-module-setting-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-module-setting.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-module-setting.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-module-setting.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-module-setting.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-module-setting.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-module-setting.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-parameter-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-parameter-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-parameter-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-parameter-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-parameter-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-parameter-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-parameter.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-parameter.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-parameter.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-parameter.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-parameter.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-parameter.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-process-status-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-process-status-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-process-status-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-process-status-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-process-status-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-process-status-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-process-status.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-process-status.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-process-status.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-process-status.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-process-status.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-process-status.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-stage-history-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-stage-history-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-stage-history-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-stage-history-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-stage-history-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-stage-history-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-stage-history.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-stage-history.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-stage-history.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-stage-history.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-stage-history.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-stage-history.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-stage-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-stage-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-stage-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-stage-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-stage-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-stage-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-stage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-stage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-stage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-stage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-stage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-stage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-system-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-system-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-system-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-system-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-system-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-system-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-system.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-system.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-system.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-system.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-system.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-system.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-task-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-task-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-task-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-task-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-task-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-task-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-task.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-task.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-task.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-task.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-task.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-task.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-type-definition-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-type-definition-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-type-definition-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-type-definition-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-type-definition-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-type-definition-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-type-definition.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-type-definition.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-type-definition.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-type-definition.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-type-definition.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-type-definition.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-ad-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-ad-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-ad-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-ad-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-ad-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-ad-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-ad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-ad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-ad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-ad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-ad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-ad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-cad-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-cad-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-cad-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-cad-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-cad-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-cad-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-cad.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-cad.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-cad.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-cad.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-cad.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-cad.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-cod-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-cod-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-cod-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-cod-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-cod-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-cod-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-cod.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-cod.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-cod.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-cod.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-cod.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-cod.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-dpd-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-dpd-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-dpd-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-dpd-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-dpd-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-dpd-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-dpd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-dpd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-dpd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-dpd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-dpd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-dpd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-sd-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-sd-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-sd-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-sd-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-sd-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-sd-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-sd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-sd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-sd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-sd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-sd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-sd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-std-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-std-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-std-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-std-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-std-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-std-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-std.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-std.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-std.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-std.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-std.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-std.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-ucd-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-ucd-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-ucd-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-ucd-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-ucd-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-ucd-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-ucd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-uml-ucd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-ucd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-uml-ucd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-uml-ucd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-uml-ucd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-view-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-view-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-view-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-view-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-view-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-view-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dev-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dev-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dev-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dev-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-diagram-link-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-diagram-link-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-diagram-link-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-diagram-link-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-diagram-link-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-diagram-link-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-diagram-link.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-diagram-link.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-diagram-link.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-diagram-link.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-diagram-link.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-diagram-link.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-diagram-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-diagram-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-diagram-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-diagram-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-diagram-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-diagram-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-diagram.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-diagram.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-diagram.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-diagram.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-diagram.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-diagram.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dpd-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dpd-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dpd-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dpd-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dpd-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dpd-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dpd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-dpd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-dpd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-dpd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-dpd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-dpd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-filelink-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-filelink-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-filelink-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-filelink-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-filelink-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-filelink-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-filelink.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-filelink.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-filelink.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-filelink.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-filelink.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-filelink.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-form-control-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-form-control-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-form-control-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-form-control-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-form-control-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-form-control-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-form-control.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-form-control.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-form-control.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-form-control.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-form-control.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-form-control.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-form-view-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-form-view-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-form-view-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-form-view-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-form-view-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-form-view-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-form-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-form-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-form-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-form-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-form-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-form-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-generation-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-generation-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-generation-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-generation-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-generation-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-generation-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-generation-step-log-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-generation-step-log-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-generation-step-log-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-generation-step-log-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-generation-step-log-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-generation-step-log-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-generation-step-log.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-generation-step-log.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-generation-step-log.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-generation-step-log.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-generation-step-log.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-generation-step-log.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-generation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-generation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-generation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-generation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-generation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-generation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-inheritance-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-inheritance-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-inheritance-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-inheritance-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-inheritance-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-inheritance-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-inheritance.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-inheritance.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-inheritance.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-inheritance.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-inheritance.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-inheritance.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-object-in-system-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-object-in-system-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-object-in-system-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-object-in-system-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-object-in-system-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-object-in-system-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-object-in-system.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-object-in-system.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-object-in-system.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-object-in-system.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-object-in-system.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-object-in-system.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-plugin-on-rep-object-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-plugin-on-rep-object-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-plugin-on-rep-object-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-plugin-on-rep-object-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-plugin-on-rep-object-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-plugin-on-rep-object-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-plugin-on-rep-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-plugin-on-rep-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-plugin-on-rep-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-plugin-on-rep-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-plugin-on-rep-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-plugin-on-rep-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-project-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-project-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-project-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-project-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-project-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-project-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-project.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-project.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-project.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-project.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-project.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-project.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-registered-plug-in-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-registered-plug-in-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-registered-plug-in-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-registered-plug-in-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-registered-plug-in-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-registered-plug-in-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-registered-plug-in.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-registered-plug-in.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-registered-plug-in.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-registered-plug-in.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-registered-plug-in.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-registered-plug-in.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-with-a-c-l-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-with-a-c-l-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-with-a-c-l-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-with-a-c-l-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-with-a-c-l-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-with-a-c-l-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-with-a-c-l.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-with-a-c-l.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-with-a-c-l.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-with-a-c-l.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-with-a-c-l.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object-with-a-c-l.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-browser-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-data-object-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-repository-data-object-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-data-object-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-data-object-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-repository-data-object-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-data-object-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-repository-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-repository-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-object-with-plugins-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-repository-object-with-plugins-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-object-with-plugins-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-object-with-plugins-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-repository-object-with-plugins-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-object-with-plugins-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-object-with-plugins.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-repository-object-with-plugins.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-object-with-plugins.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-object-with-plugins.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-repository-object-with-plugins.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-object-with-plugins.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-repository-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-repository-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-ref-data-object-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-repository-ref-data-object-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-ref-data-object-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-ref-data-object-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-repository-ref-data-object-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-ref-data-object-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-ref-data-object.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-repository-ref-data-object.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-ref-data-object.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository-ref-data-object.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-repository-ref-data-object.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository-ref-data-object.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-repository.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-repository.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-repository.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-repository.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-sd-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-sd-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-sd-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-sd-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-sd-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-sd-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-sd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-sd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-sd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-sd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-sd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-sd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-stage-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-stage-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-stage-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-stage-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-stage-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-stage-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-stage.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-stage.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-stage.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-stage.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-stage.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-stage.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-std-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-std-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-std-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-std-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-std-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-std-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-std.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-std.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-std.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-std.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-std.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-std.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-storage-type-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-storage-type-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-storage-type-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-storage-type-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-storage-type-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-storage-type-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-storage-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-storage-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-storage-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-storage-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-storage-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-storage-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-subsystem-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-subsystem-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-subsystem-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-subsystem-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-subsystem-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-subsystem-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-subsystem.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-subsystem.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-subsystem.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-subsystem.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-subsystem.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-subsystem.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-ucd-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-ucd-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-ucd-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-ucd-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-ucd-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-ucd-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-ucd.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-ucd.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-ucd.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-ucd.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-ucd.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-ucd.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-view-offline.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-view-offline.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-view-offline.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-view-offline.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-view-offline.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-view-offline.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-view.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/serializers');
  test('modules/ember-flexberry-designer/serializers/fd-view.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/serializers/fd-view.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/serializers/fd-view.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/serializers/fd-view.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/serializers/fd-view.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/services/fd-current-project-context.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/services');
  test('modules/ember-flexberry-designer/services/fd-current-project-context.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/services/fd-current-project-context.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/services/fd-current-project-context.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/services/fd-current-project-context.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/services/fd-current-project-context.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/services/fd-generation.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/services');
  test('modules/ember-flexberry-designer/services/fd-generation.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/services/fd-generation.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/services/fd-generation.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/services/fd-generation.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/services/fd-generation.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/containers-tree.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/transforms');
  test('modules/ember-flexberry-designer/transforms/containers-tree.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/transforms/containers-tree.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/containers-tree.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/transforms/containers-tree.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/transforms/containers-tree.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/fd-definition.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/transforms');
  test('modules/ember-flexberry-designer/transforms/fd-definition.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/transforms/fd-definition.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/fd-definition.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/transforms/fd-definition.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/transforms/fd-definition.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/fd-generation-state.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/transforms');
  test('modules/ember-flexberry-designer/transforms/fd-generation-state.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/transforms/fd-generation-state.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/fd-generation-state.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/transforms/fd-generation-state.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/transforms/fd-generation-state.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/fd-propertylookupstr.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/transforms');
  test('modules/ember-flexberry-designer/transforms/fd-propertylookupstr.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/transforms/fd-propertylookupstr.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/fd-propertylookupstr.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/transforms/fd-propertylookupstr.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/transforms/fd-propertylookupstr.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-access-type.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/transforms');
  test('modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-access-type.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-access-type.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-access-type.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-access-type.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-access-type.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/transforms');
  test('modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/transforms');
  test('modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/new-platform-flexberry-web-designer-business-server-class.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/transforms');
  test('modules/ember-flexberry-designer/transforms/new-platform-flexberry-web-designer-business-server-class.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/transforms/new-platform-flexberry-web-designer-business-server-class.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/new-platform-flexberry-web-designer-business-server-class.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/transforms/new-platform-flexberry-web-designer-business-server-class.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/transforms/new-platform-flexberry-web-designer-business-server-class.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-repository-access-modifier.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/transforms');
  test('modules/ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-repository-access-modifier.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-repository-access-modifier.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-repository-access-modifier.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-repository-access-modifier.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-repository-access-modifier.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/transforms');
  test('modules/ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/typemap.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/transforms');
  test('modules/ember-flexberry-designer/transforms/typemap.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/transforms/typemap.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/transforms/typemap.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/transforms/typemap.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/transforms/typemap.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-activity-diagram-primitives.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-activity-diagram-primitives.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-activity-diagram-primitives.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-activity-diagram-primitives.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-activity-diagram-primitives.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-activity-diagram-primitives.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-attributes-for-tree.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-attributes-for-tree.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-attributes-for-tree.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-attributes-for-tree.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-attributes-for-tree.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-attributes-for-tree.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-class-diagram-primitives.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-class-diagram-primitives.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-class-diagram-primitives.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-class-diagram-primitives.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-class-diagram-primitives.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-class-diagram-primitives.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-collaboration-diagram-primitives.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-collaboration-diagram-primitives.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-collaboration-diagram-primitives.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-collaboration-diagram-primitives.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-collaboration-diagram-primitives.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-collaboration-diagram-primitives.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-common-primitives.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-common-primitives.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-common-primitives.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-common-primitives.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-common-primitives.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-common-primitives.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-copy-view-definition.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-copy-view-definition.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-copy-view-definition.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-copy-view-definition.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-copy-view-definition.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-copy-view-definition.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-create-form-properties.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-create-form-properties.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-create-form-properties.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-create-form-properties.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-create-form-properties.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-create-form-properties.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-datatypes.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-datatypes.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-datatypes.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-datatypes.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-datatypes.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-datatypes.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-deployment-diagram-primitives.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-deployment-diagram-primitives.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-deployment-diagram-primitives.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-deployment-diagram-primitives.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-deployment-diagram-primitives.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-deployment-diagram-primitives.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-metods-for-tree.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-metods-for-tree.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-metods-for-tree.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-metods-for-tree.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-metods-for-tree.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-metods-for-tree.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-preload-stage-metadata.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-preload-stage-metadata.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-preload-stage-metadata.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-preload-stage-metadata.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-preload-stage-metadata.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-preload-stage-metadata.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-sequence-diagram-primitives.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-sequence-diagram-primitives.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-sequence-diagram-primitives.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-sequence-diagram-primitives.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-sequence-diagram-primitives.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-sequence-diagram-primitives.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-statechart-diagram-primitives.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-statechart-diagram-primitives.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-statechart-diagram-primitives.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-statechart-diagram-primitives.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-statechart-diagram-primitives.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-statechart-diagram-primitives.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-usecase-diagram-primitives.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-usecase-diagram-primitives.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-usecase-diagram-primitives.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-usecase-diagram-primitives.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-usecase-diagram-primitives.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-usecase-diagram-primitives.js should pass jshint.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-view-path-functions.jscs-test', ['exports'], function (exports) {
  module('JSCS - modules/ember-flexberry-designer/utils');
  test('modules/ember-flexberry-designer/utils/fd-view-path-functions.js should pass jscs', function () {
    ok(true, 'modules/ember-flexberry-designer/utils/fd-view-path-functions.js should pass jscs.');
  });
});
define('dummy/ember-flexberry-designer/tests/modules/ember-flexberry-designer/utils/fd-view-path-functions.jshint', ['exports'], function (exports) {
  QUnit.module('JSHint - modules/ember-flexberry-designer/utils/fd-view-path-functions.js');
  QUnit.test('should pass jshint', function (assert) {
    assert.expect(1);
    assert.ok(true, 'modules/ember-flexberry-designer/utils/fd-view-path-functions.js should pass jshint.');
  });
});
define('dummy/enums/fd-generation-state', ['exports', 'ember-flexberry-designer/enums/fd-generation-state'], function (exports, _emberFlexberryDesignerEnumsFdGenerationState) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerEnumsFdGenerationState['default'];
    }
  });
});
define('dummy/enums/i-c-s-soft-s-t-o-r-m-n-e-t-access-type', ['exports', 'ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-access-type'], function (exports, _emberFlexberryDesignerEnumsICSSoftSTORMNETAccessType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerEnumsICSSoftSTORMNETAccessType['default'];
    }
  });
});
define('dummy/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-execution-variant', ['exports', 'ember-flexberry-data/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-execution-variant'], function (exports, _emberFlexberryDataEnumsICSSoftSTORMNETBusinessAuditObjectsTExecutionVariant) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataEnumsICSSoftSTORMNETBusinessAuditObjectsTExecutionVariant['default'];
    }
  });
});
define('dummy/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-type-of-audit-operation', ['exports', 'ember-flexberry-data/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-type-of-audit-operation'], function (exports, _emberFlexberryDataEnumsICSSoftSTORMNETBusinessAuditObjectsTTypeOfAuditOperation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataEnumsICSSoftSTORMNETBusinessAuditObjectsTTypeOfAuditOperation['default'];
    }
  });
});
define('dummy/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode', ['exports', 'ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode'], function (exports, _emberFlexberryDesignerEnumsICSSoftSTORMNETBusinessAuditObjectsTWriteMode) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerEnumsICSSoftSTORMNETBusinessAuditObjectsTWriteMode['default'];
    }
  });
});
define('dummy/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events', ['exports', 'ember-flexberry-designer/enums/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events'], function (exports, _emberFlexberryDesignerEnumsICSSoftSTORMNETBusinessDataServiceObjectEvents) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerEnumsICSSoftSTORMNETBusinessDataServiceObjectEvents['default'];
    }
  });
});
define('dummy/enums/s-t-o-r-m-c-a-s-e-repository-access-modifier', ['exports', 'ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-repository-access-modifier'], function (exports, _emberFlexberryDesignerEnumsSTORMCASERepositoryAccessModifier) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerEnumsSTORMCASERepositoryAccessModifier['default'];
    }
  });
});
define('dummy/enums/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier', ['exports', 'ember-flexberry-designer/enums/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier'], function (exports, _emberFlexberryDesignerEnumsSTORMCASESTORMNETRepositoryParameterModifier) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerEnumsSTORMCASESTORMNETRepositoryParameterModifier['default'];
    }
  });
});
define('dummy/external/jointjs', ['exports', 'npm:jointjs'], function (exports, _npmJointjs) {
  exports['default'] = _npmJointjs['default'];
});
define('dummy/helpers/and', ['exports', 'ember', 'ember-truth-helpers/helpers/and'], function (exports, _ember, _emberTruthHelpersHelpersAnd) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersAnd.andHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersAnd.andHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/array-contains', ['exports', 'ember-flexberry/helpers/array-contains'], function (exports, _emberFlexberryHelpersArrayContains) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersArrayContains['default'];
    }
  });
  Object.defineProperty(exports, 'arrayContains', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersArrayContains.arrayContains;
    }
  });
});
define('dummy/helpers/array', ['exports', 'ember-flexberry/helpers/array'], function (exports, _emberFlexberryHelpersArray) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersArray['default'];
    }
  });
});
define('dummy/helpers/await', ['exports', 'ember-promise-helpers/helpers/await'], function (exports, _emberPromiseHelpersHelpersAwait) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersAwait['default'];
    }
  });
});
define('dummy/helpers/block-params', ['exports', 'ember-block-slots/helpers/block-params'], function (exports, _emberBlockSlotsHelpersBlockParams) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberBlockSlotsHelpersBlockParams['default'];
    }
  });
  Object.defineProperty(exports, 'blockParams', {
    enumerable: true,
    get: function get() {
      return _emberBlockSlotsHelpersBlockParams.blockParams;
    }
  });
});
define('dummy/helpers/eq', ['exports', 'ember', 'ember-truth-helpers/helpers/equal'], function (exports, _ember, _emberTruthHelpersHelpersEqual) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersEqual.equalHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersEqual.equalHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/flexberry-enum', ['exports', 'ember-flexberry/helpers/flexberry-enum'], function (exports, _emberFlexberryHelpersFlexberryEnum) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersFlexberryEnum['default'];
    }
  });
});
define('dummy/helpers/get-formatted', ['exports', 'ember'], function (exports, _ember) {

  /**
    Helper for get formatted value.
  
    @class EnumCaptionHelper
    @extends <a href="http://emberjs.com/api/classes/Ember.Helper.html">Ember.Helper</a>
    @public
  */
  exports['default'] = _ember['default'].Helper.extend({
    compute: function compute(args, hash) {
      var argFirst = args[0];
      var argSecond = args[1];

      var value = _ember['default'].get(argFirst, argSecond);
      var valueType = _ember['default'].typeOf(value);

      switch (valueType) {
        case 'date':

          // Convert date to string.
          // Locale is current 'locale' from i18n, format is current 'moment.defaultFormat' from config/environment).
          var moment = _ember['default'].get(hash, 'moment');
          var momentValue = moment.moment(value);
          var dateFormat = _ember['default'].get(hash, 'dateFormat');
          return dateFormat ? momentValue.format(dateFormat) : momentValue.format();
        case 'boolean':
          return value ? this.get('i18n').t('components.object-list-view-cell.boolean-true-caption') : this.get('i18n').t('components.object-list-view-cell.boolean-false-caption');
        default:
          return value;
      }
    }
  });
});
/**
  @module ember-flexberry
*/
define('dummy/helpers/get-with-dynamic-actions', ['exports', 'ember-flexberry/helpers/get-with-dynamic-actions'], function (exports, _emberFlexberryHelpersGetWithDynamicActions) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersGetWithDynamicActions['default'];
    }
  });
});
define('dummy/helpers/gt', ['exports', 'ember', 'ember-truth-helpers/helpers/gt'], function (exports, _ember, _emberTruthHelpersHelpersGt) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersGt.gtHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersGt.gtHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/gte', ['exports', 'ember', 'ember-truth-helpers/helpers/gte'], function (exports, _ember, _emberTruthHelpersHelpersGte) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersGte.gteHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersGte.gteHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/is-array', ['exports', 'ember', 'ember-truth-helpers/helpers/is-array'], function (exports, _ember, _emberTruthHelpersHelpersIsArray) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersIsArray.isArrayHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersIsArray.isArrayHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/is-fulfilled', ['exports', 'ember-promise-helpers/helpers/is-fulfilled'], function (exports, _emberPromiseHelpersHelpersIsFulfilled) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersIsFulfilled['default'];
    }
  });
  Object.defineProperty(exports, 'isFulfilled', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersIsFulfilled.isFulfilled;
    }
  });
});
define('dummy/helpers/is-pending', ['exports', 'ember-promise-helpers/helpers/is-pending'], function (exports, _emberPromiseHelpersHelpersIsPending) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersIsPending['default'];
    }
  });
  Object.defineProperty(exports, 'isPending', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersIsPending.isPending;
    }
  });
});
define('dummy/helpers/is-rejected', ['exports', 'ember-promise-helpers/helpers/is-rejected'], function (exports, _emberPromiseHelpersHelpersIsRejected) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersIsRejected['default'];
    }
  });
  Object.defineProperty(exports, 'isRejected', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersIsRejected.isRejected;
    }
  });
});
define('dummy/helpers/lt', ['exports', 'ember', 'ember-truth-helpers/helpers/lt'], function (exports, _ember, _emberTruthHelpersHelpersLt) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersLt.ltHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersLt.ltHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/lte', ['exports', 'ember', 'ember-truth-helpers/helpers/lte'], function (exports, _ember, _emberTruthHelpersHelpersLte) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersLte.lteHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersLte.lteHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/moment-calendar', ['exports', 'ember-moment/helpers/moment-calendar'], function (exports, _emberMomentHelpersMomentCalendar) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberMomentHelpersMomentCalendar['default'];
    }
  });
  Object.defineProperty(exports, 'momentCalendar', {
    enumerable: true,
    get: function get() {
      return _emberMomentHelpersMomentCalendar.momentCalendar;
    }
  });
});
define('dummy/helpers/moment-duration', ['exports', 'ember-moment/helpers/moment-duration'], function (exports, _emberMomentHelpersMomentDuration) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberMomentHelpersMomentDuration['default'];
    }
  });
});
define('dummy/helpers/moment-format', ['exports', 'ember', 'dummy/config/environment', 'ember-moment/helpers/moment-format'], function (exports, _ember, _dummyConfigEnvironment, _emberMomentHelpersMomentFormat) {
  exports['default'] = _emberMomentHelpersMomentFormat['default'].extend({
    globalAllowEmpty: !!_ember['default'].get(_dummyConfigEnvironment['default'], 'moment.allowEmpty')
  });
});
define('dummy/helpers/moment-from-now', ['exports', 'ember', 'dummy/config/environment', 'ember-moment/helpers/moment-from-now'], function (exports, _ember, _dummyConfigEnvironment, _emberMomentHelpersMomentFromNow) {
  exports['default'] = _emberMomentHelpersMomentFromNow['default'].extend({
    globalAllowEmpty: !!_ember['default'].get(_dummyConfigEnvironment['default'], 'moment.allowEmpty')
  });
});
define('dummy/helpers/moment-to-now', ['exports', 'ember', 'dummy/config/environment', 'ember-moment/helpers/moment-to-now'], function (exports, _ember, _dummyConfigEnvironment, _emberMomentHelpersMomentToNow) {
  exports['default'] = _emberMomentHelpersMomentToNow['default'].extend({
    globalAllowEmpty: !!_ember['default'].get(_dummyConfigEnvironment['default'], 'moment.allowEmpty')
  });
});
define('dummy/helpers/not-eq', ['exports', 'ember', 'ember-truth-helpers/helpers/not-equal'], function (exports, _ember, _emberTruthHelpersHelpersNotEqual) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersNotEqual.notEqualHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersNotEqual.notEqualHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/not', ['exports', 'ember', 'ember-truth-helpers/helpers/not'], function (exports, _ember, _emberTruthHelpersHelpersNot) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersNot.notHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersNot.notHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/or', ['exports', 'ember', 'ember-truth-helpers/helpers/or'], function (exports, _ember, _emberTruthHelpersHelpersOr) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersOr.orHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersOr.orHelper);
  }

  exports['default'] = forExport;
});
define('dummy/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _emberInflectorLibHelpersPluralize) {
  exports['default'] = _emberInflectorLibHelpersPluralize['default'];
});
define('dummy/helpers/promise-all', ['exports', 'ember-promise-helpers/helpers/promise-all'], function (exports, _emberPromiseHelpersHelpersPromiseAll) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersPromiseAll['default'];
    }
  });
  Object.defineProperty(exports, 'promiseAll', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersPromiseAll.promiseAll;
    }
  });
});
define('dummy/helpers/promise-hash', ['exports', 'ember-promise-helpers/helpers/promise-hash'], function (exports, _emberPromiseHelpersHelpersPromiseHash) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersPromiseHash['default'];
    }
  });
  Object.defineProperty(exports, 'promiseHash', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersPromiseHash.promiseHash;
    }
  });
});
define('dummy/helpers/promise-rejected-reason', ['exports', 'ember-promise-helpers/helpers/promise-rejected-reason'], function (exports, _emberPromiseHelpersHelpersPromiseRejectedReason) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPromiseHelpersHelpersPromiseRejectedReason['default'];
    }
  });
});
define('dummy/helpers/readonly-cell', ['exports', 'ember-flexberry/helpers/readonly-cell'], function (exports, _emberFlexberryHelpersReadonlyCell) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersReadonlyCell['default'];
    }
  });
  Object.defineProperty(exports, 'readonlyCell', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryHelpersReadonlyCell.readonlyCell;
    }
  });
});
define('dummy/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _emberInflectorLibHelpersSingularize) {
  exports['default'] = _emberInflectorLibHelpersSingularize['default'];
});
define('dummy/helpers/t', ['exports', 'ember-i18n/helper'], function (exports, _emberI18nHelper) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberI18nHelper['default'];
    }
  });
});
define('dummy/helpers/xor', ['exports', 'ember', 'ember-truth-helpers/helpers/xor'], function (exports, _ember, _emberTruthHelpersHelpersXor) {

  var forExport = null;

  if (_ember['default'].Helper) {
    forExport = _ember['default'].Helper.helper(_emberTruthHelpersHelpersXor.xorHelper);
  } else if (_ember['default'].HTMLBars.makeBoundHelper) {
    forExport = _ember['default'].HTMLBars.makeBoundHelper(_emberTruthHelpersHelpersXor.xorHelper);
  }

  exports['default'] = forExport;
});
define('dummy/initializers/allow-link-action', ['exports', 'ember-link-action/initializers/allow-link-action'], function (exports, _emberLinkActionInitializersAllowLinkAction) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberLinkActionInitializersAllowLinkAction['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberLinkActionInitializersAllowLinkAction.initialize;
    }
  });
});
define('dummy/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'dummy/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _dummyConfigEnvironment) {
  exports['default'] = {
    name: 'App Version',
    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(_dummyConfigEnvironment['default'].APP.name, _dummyConfigEnvironment['default'].APP.version)
  };
});
define('dummy/initializers/component-prop-types', ['exports', 'ember-prop-types/initializers/component-prop-types'], function (exports, _emberPropTypesInitializersComponentPropTypes) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberPropTypesInitializersComponentPropTypes['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberPropTypesInitializersComponentPropTypes.initialize;
    }
  });
});
define('dummy/initializers/container-debug-adapter', ['exports', 'ember-resolver/container-debug-adapter'], function (exports, _emberResolverContainerDebugAdapter) {
  exports['default'] = {
    name: 'container-debug-adapter',

    initialize: function initialize() {
      var app = arguments[1] || arguments[0];

      app.register('container-debug-adapter:main', _emberResolverContainerDebugAdapter['default']);
      app.inject('container-debug-adapter:main', 'namespace', 'application:main');
    }
  };
});
define('dummy/initializers/data-adapter', ['exports', 'ember'], function (exports, _ember) {

  /*
    This initializer is here to keep backwards compatibility with code depending
    on the `data-adapter` initializer (before Ember Data was an addon).
  
    Should be removed for Ember Data 3.x
  */

  exports['default'] = {
    name: 'data-adapter',
    before: 'store',
    initialize: function initialize() {}
  };
});
define('dummy/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data/-private/core'], function (exports, _emberDataSetupContainer, _emberDataPrivateCore) {

  /*
  
    This code initializes Ember-Data onto an Ember application.
  
    If an Ember.js developer defines a subclass of DS.Store on their application,
    as `App.StoreService` (or via a module system that resolves to `service:store`)
    this code will automatically instantiate it and make it available on the
    router.
  
    Additionally, after an application's controllers have been injected, they will
    each have the store made available to them.
  
    For example, imagine an Ember.js application with the following classes:
  
    App.StoreService = DS.Store.extend({
      adapter: 'custom'
    });
  
    App.PostsController = Ember.Controller.extend({
      // ...
    });
  
    When the application is initialized, `App.ApplicationStore` will automatically be
    instantiated, and the instance of `App.PostsController` will have its `store`
    property set to that instance.
  
    Note that this code will only be run if the `ember-application` package is
    loaded. If Ember Data is being used in an environment other than a
    typical application (e.g., node.js where only `ember-runtime` is available),
    this code will be ignored.
  */

  exports['default'] = {
    name: 'ember-data',
    initialize: _emberDataSetupContainer['default']
  };
});
define("dummy/initializers/ember-i18n", ["exports", "dummy/instance-initializers/ember-i18n"], function (exports, _dummyInstanceInitializersEmberI18n) {
  exports["default"] = {
    name: _dummyInstanceInitializersEmberI18n["default"].name,

    initialize: function initialize() {
      var application = arguments[1] || arguments[0]; // depending on Ember version
      if (application.instanceInitializer) {
        return;
      }

      _dummyInstanceInitializersEmberI18n["default"].initialize(application);
    }
  };
});
define('dummy/initializers/ember-run-after', ['exports', 'ember-flexberry/initializers/ember-run-after'], function (exports, _emberFlexberryInitializersEmberRunAfter) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersEmberRunAfter['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersEmberRunAfter.initialize;
    }
  });
});
define('dummy/initializers/export-application-global', ['exports', 'ember', 'dummy/config/environment'], function (exports, _ember, _dummyConfigEnvironment) {
  exports.initialize = initialize;

  function initialize() {
    var application = arguments[1] || arguments[0];
    if (_dummyConfigEnvironment['default'].exportApplicationGlobal !== false) {
      var theGlobal;
      if (typeof window !== 'undefined') {
        theGlobal = window;
      } else if (typeof global !== 'undefined') {
        theGlobal = global;
      } else if (typeof self !== 'undefined') {
        theGlobal = self;
      } else {
        // no reasonable global, just bail
        return;
      }

      var value = _dummyConfigEnvironment['default'].exportApplicationGlobal;
      var globalName;

      if (typeof value === 'string') {
        globalName = value;
      } else {
        globalName = _ember['default'].String.classify(_dummyConfigEnvironment['default'].modulePrefix);
      }

      if (!theGlobal[globalName]) {
        theGlobal[globalName] = application;

        application.reopen({
          willDestroy: function willDestroy() {
            this._super.apply(this, arguments);
            delete theGlobal[globalName];
          }
        });
      }
    }
  }

  exports['default'] = {
    name: 'export-application-global',

    initialize: initialize
  };
});
define('dummy/initializers/flexberry-enum', ['exports', 'ember-flexberry-data/initializers/flexberry-enum'], function (exports, _emberFlexberryDataInitializersFlexberryEnum) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInitializersFlexberryEnum['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInitializersFlexberryEnum.initialize;
    }
  });
});
define('dummy/initializers/i18n', ['exports', 'ember-flexberry/initializers/i18n'], function (exports, _emberFlexberryInitializersI18n) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersI18n['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersI18n.initialize;
    }
  });
});
define('dummy/initializers/injectStore', ['exports', 'ember'], function (exports, _ember) {

  /*
    This initializer is here to keep backwards compatibility with code depending
    on the `injectStore` initializer (before Ember Data was an addon).
  
    Should be removed for Ember Data 3.x
  */

  exports['default'] = {
    name: 'injectStore',
    before: 'store',
    initialize: function initialize() {}
  };
});
define('dummy/initializers/local-store', ['exports', 'ember-flexberry-data/initializers/local-store'], function (exports, _emberFlexberryDataInitializersLocalStore) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInitializersLocalStore['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInitializersLocalStore.initialize;
    }
  });
});
define('dummy/initializers/log', ['exports', 'ember-flexberry/initializers/log'], function (exports, _emberFlexberryInitializersLog) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersLog['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersLog.initialize;
    }
  });
});
define('dummy/initializers/moment', ['exports', 'ember-flexberry/initializers/moment'], function (exports, _emberFlexberryInitializersMoment) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersMoment['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersMoment.initialize;
    }
  });
});
define('dummy/initializers/offline-globals', ['exports', 'ember-flexberry-data/initializers/offline-globals'], function (exports, _emberFlexberryDataInitializersOfflineGlobals) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInitializersOfflineGlobals['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInitializersOfflineGlobals.initialize;
    }
  });
});
define('dummy/initializers/perf', ['exports', 'ember-flexberry/initializers/perf'], function (exports, _emberFlexberryInitializersPerf) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersPerf['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersPerf.initialize;
    }
  });
});
define('dummy/initializers/render-perf-logger', ['exports', 'ember-flexberry/initializers/render-perf-logger'], function (exports, _emberFlexberryInitializersRenderPerfLogger) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersRenderPerfLogger['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersRenderPerfLogger.initialize;
    }
  });
});
define('dummy/initializers/store', ['exports', 'ember'], function (exports, _ember) {

  /*
    This initializer is here to keep backwards compatibility with code depending
    on the `store` initializer (before Ember Data was an addon).
  
    Should be removed for Ember Data 3.x
  */

  exports['default'] = {
    name: 'store',
    after: 'ember-data',
    initialize: function initialize() {}
  };
});
define('dummy/initializers/transforms', ['exports', 'ember'], function (exports, _ember) {

  /*
    This initializer is here to keep backwards compatibility with code depending
    on the `transforms` initializer (before Ember Data was an addon).
  
    Should be removed for Ember Data 3.x
  */

  exports['default'] = {
    name: 'transforms',
    before: 'store',
    initialize: function initialize() {}
  };
});
define('dummy/initializers/truth-helpers', ['exports', 'ember', 'ember-truth-helpers/utils/register-helper', 'ember-truth-helpers/helpers/and', 'ember-truth-helpers/helpers/or', 'ember-truth-helpers/helpers/equal', 'ember-truth-helpers/helpers/not', 'ember-truth-helpers/helpers/is-array', 'ember-truth-helpers/helpers/not-equal', 'ember-truth-helpers/helpers/gt', 'ember-truth-helpers/helpers/gte', 'ember-truth-helpers/helpers/lt', 'ember-truth-helpers/helpers/lte'], function (exports, _ember, _emberTruthHelpersUtilsRegisterHelper, _emberTruthHelpersHelpersAnd, _emberTruthHelpersHelpersOr, _emberTruthHelpersHelpersEqual, _emberTruthHelpersHelpersNot, _emberTruthHelpersHelpersIsArray, _emberTruthHelpersHelpersNotEqual, _emberTruthHelpersHelpersGt, _emberTruthHelpersHelpersGte, _emberTruthHelpersHelpersLt, _emberTruthHelpersHelpersLte) {
  exports.initialize = initialize;

  function initialize() /* container, application */{

    // Do not register helpers from Ember 1.13 onwards, starting from 1.13 they
    // will be auto-discovered.
    if (_ember['default'].Helper) {
      return;
    }

    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('and', _emberTruthHelpersHelpersAnd.andHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('or', _emberTruthHelpersHelpersOr.orHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('eq', _emberTruthHelpersHelpersEqual.equalHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('not', _emberTruthHelpersHelpersNot.notHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('is-array', _emberTruthHelpersHelpersIsArray.isArrayHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('not-eq', _emberTruthHelpersHelpersNotEqual.notEqualHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('gt', _emberTruthHelpersHelpersGt.gtHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('gte', _emberTruthHelpersHelpersGte.gteHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('lt', _emberTruthHelpersHelpersLt.ltHelper);
    (0, _emberTruthHelpersUtilsRegisterHelper.registerHelper)('lte', _emberTruthHelpersHelpersLte.lteHelper);
  }

  exports['default'] = {
    name: 'truth-helpers',
    initialize: initialize
  };
});
define('dummy/initializers/user-settings', ['exports', 'ember-flexberry/initializers/user-settings'], function (exports, _emberFlexberryInitializersUserSettings) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersUserSettings['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInitializersUserSettings.initialize;
    }
  });
});
define('dummy/instance-initializers/block-slots', ['exports', 'ember-flexberry/instance-initializers/block-slots'], function (exports, _emberFlexberryInstanceInitializersBlockSlots) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersBlockSlots['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersBlockSlots.initialize;
    }
  });
});
define('dummy/instance-initializers/device', ['exports', 'ember-flexberry/instance-initializers/device'], function (exports, _emberFlexberryInstanceInitializersDevice) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersDevice['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersDevice.initialize;
    }
  });
});
define("dummy/instance-initializers/ember-data", ["exports", "ember-data/-private/instance-initializers/initialize-store-service"], function (exports, _emberDataPrivateInstanceInitializersInitializeStoreService) {
  exports["default"] = {
    name: "ember-data",
    initialize: _emberDataPrivateInstanceInitializersInitializeStoreService["default"]
  };
});
define("dummy/instance-initializers/ember-i18n", ["exports", "ember", "ember-i18n/stream", "ember-i18n/legacy-helper", "dummy/config/environment"], function (exports, _ember, _emberI18nStream, _emberI18nLegacyHelper, _dummyConfigEnvironment) {
  exports["default"] = {
    name: 'ember-i18n',

    initialize: function initialize(appOrAppInstance) {
      if (_emberI18nLegacyHelper["default"] != null) {
        (function () {
          // Used for Ember < 1.13
          var i18n = appOrAppInstance.container.lookup('service:i18n');

          i18n.localeStream = new _emberI18nStream["default"](function () {
            return i18n.get('locale');
          });

          _ember["default"].addObserver(i18n, 'locale', i18n, function () {
            this.localeStream.value(); // force the stream to be dirty
            this.localeStream.notify();
          });

          _ember["default"].HTMLBars._registerHelper('t', _emberI18nLegacyHelper["default"]);
        })();
      }
    }
  };
});
define('dummy/instance-initializers/i18n', ['exports', 'ember-flexberry/instance-initializers/moment'], function (exports, _emberFlexberryInstanceInitializersMoment) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersMoment['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersMoment.initialize;
    }
  });
});
define('dummy/instance-initializers/lock', ['exports', 'ember-flexberry/instance-initializers/lock'], function (exports, _emberFlexberryInstanceInitializersLock) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersLock['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersLock.initialize;
    }
  });
});
define('dummy/instance-initializers/log', ['exports', 'ember-flexberry/instance-initializers/log'], function (exports, _emberFlexberryInstanceInitializersLog) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersLog['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersLog.initialize;
    }
  });
});
define('dummy/instance-initializers/moment', ['exports', 'ember-flexberry/instance-initializers/i18n'], function (exports, _emberFlexberryInstanceInitializersI18n) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersI18n['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersI18n.initialize;
    }
  });
});
define('dummy/instance-initializers/perf', ['exports', 'ember-flexberry/instance-initializers/perf'], function (exports, _emberFlexberryInstanceInitializersPerf) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersPerf['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryInstanceInitializersPerf.initialize;
    }
  });
});
define('dummy/instance-initializers/set-singletons', ['exports', 'ember-flexberry-data/instance-initializers/set-singletons'], function (exports, _emberFlexberryDataInstanceInitializersSetSingletons) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInstanceInitializersSetSingletons['default'];
    }
  });
  Object.defineProperty(exports, 'initialize', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataInstanceInitializersSetSingletons.initialize;
    }
  });
});
define('dummy/locales/en/translations', ['exports', 'ember', 'ember-flexberry-designer/locales/en/translations'], function (exports, _ember, _emberFlexberryDesignerLocalesEnTranslations) {

  var translations = {};
  _ember['default'].$.extend(true, translations, _emberFlexberryDesignerLocalesEnTranslations['default']);

  _ember['default'].$.extend(true, translations, {

    'application-name': '',

    forms: {
      loading: {
        'spinner-caption': 'Loading stuff, please have a cold beer...'
      },
      index: {
        greeting: 'Welcome to ember-flexberry test stand!'
      },

      application: {
        header: {
          menu: {
            'sitemap-button': {
              caption: '',
              title: 'Menu'
            },
            'user-settings-service-checkbox': {
              caption: 'Use service to save user settings'
            },
            'show-menu': {
              caption: 'Show menu'
            },
            'hide-menu': {
              caption: 'Hide menu'
            },
            'language-dropdown': {
              caption: 'Application language',
              placeholder: 'Choose language'
            }
          },
          login: {
            caption: 'Login'
          },
          logout: {
            caption: 'Logout'
          }
        },

        footer: {
          'application-name': 'Application caption',
          'application-version': {
            caption: 'Addon version {{version}}',
            title: 'It is version of ember-flexberry addon, which uses in this dummy application ' + '(npm version + commit sha). ' + 'Click to open commit on GitHub.'
          }
        },

        sitemap: {
          'application-name': {
            caption: 'Application caption',
            title: 'Application title'
          },
          'application-version': {
            caption: 'Addon version {{version}}',
            title: 'It is version of ember-flexberry addon, which uses in this dummy application ' + '(npm version + commit sha). ' + 'Click to open commit on GitHub.'
          },
          index: {
            caption: 'Home',
            title: ''
          },
          'fd-visual-edit-form': {
            caption: 'Visual edit form',
            title: ''
          },
          root: {
            caption: 'root',
            title: 'root',

            'fd-appstruct-form': {
              caption: 'Application structure',
              title: ''
            },

            'fd-listform-constructor': {
              caption: 'List form constructor',
              title: ''
            },

            'fd-configuration-list-form': {
              caption: 'fd-configuration-list-form',
              title: 'fd-configuration-list-form'

            },
            'fd-stage-list-form': {
              caption: 'fd-stage-list-form',
              title: 'fd-stage-list-form'
            },
            'additional': {
              caption: 'Additional',
              title: ''
            },
            'fd-system-list-form': {
              caption: 'fd-system-list-form',
              title: 'fd-system-list-form'

            },
            'fd-diagram-list-form': {
              caption: 'fd-diagram-list-form',
              title: 'fd-diagram-list-form'

            },
            'fd-class-list-form': {
              caption: 'fd-class-list-form',
              title: 'fd-class-list-form'

            },
            'fd-association-list-form': {
              caption: 'fd-association-list-form',
              title: 'fd-association-list-form'

            },
            'fd-aggregation-list-form': {
              caption: 'fd-aggregation-list-form',
              title: 'fd-aggregation-list-form'

            },
            'fd-inheritance-list-form': {
              caption: 'fd-inheritance-list-form',
              title: 'fd-inheritance-list-form'

            },
            'fd-view-list-form': {
              caption: 'fd-view-list-form',
              title: 'fd-view-list-form'

            },
            'fd-generation-process-form': {
              caption: 'Generation',
              title: ''
            },
            'fd-generation-list-form': {
              caption: 'Generations list form',
              title: ''
            },
            'fd-uml-primitives': {
              caption: 'UML',
              title: ''
            },
            'class-diagram-primitives-demo': {
              caption: 'Class Diagram',
              title: ''
            },
            'activity-diagram-primitives-demo': {
              caption: 'Activity Diagram',
              title: ''
            },
            'deployment-diagram-primitives-demo': {
              caption: 'Deployment Diagram',
              title: ''
            },
            'statechart-diagram-primitives-demo': {
              caption: 'Statechart Diagram',
              title: ''
            },
            'usecase-diagram-primitives-demo': {
              caption: 'Usecase Diagram',
              title: ''
            },
            'sequence-diagram-primitives-demo': {
              caption: 'Sequence Diagram',
              title: ''
            },
            'collaboration-diagram-primitives-demo': {
              caption: 'Collaboration Diagram',
              title: ''
            }
          }
        }
      },

      'edit-form': {
        'save-success-message-caption': 'Save operation succeed',
        'save-success-message': 'Object saved',
        'save-error-message-caption': 'Save operation failed',
        'delete-success-message-caption': 'Delete operation succeed',
        'delete-success-message': 'Object deleted',
        'delete-error-message-caption': 'Delete operation failed'
      }
    }

  });

  exports['default'] = translations;
});
define('dummy/locales/ru/translations', ['exports', 'ember', 'ember-flexberry-designer/locales/ru/translations'], function (exports, _ember, _emberFlexberryDesignerLocalesRuTranslations) {

  var translations = {};
  _ember['default'].$.extend(true, translations, _emberFlexberryDesignerLocalesRuTranslations['default']);

  _ember['default'].$.extend(true, translations, {

    'application-name': '',

    forms: {
      loading: {
        'spinner-caption': 'Данные загружаются, пожалуйста подождите...'
      },
      index: {
        greeting: 'Добро пожаловать на тестовый стенд ember-flexberry!'
      },

      application: {
        header: {
          menu: {
            'sitemap-button': {
              caption: '',
              title: 'Меню'
            },
            'user-settings-service-checkbox': {
              caption: 'Использовать сервис сохранения пользовательских настроек'
            },
            'show-menu': {
              caption: 'Показать меню'
            },
            'hide-menu': {
              caption: 'Скрыть меню'
            },
            'language-dropdown': {
              caption: 'Язык приложения',
              placeholder: 'Выберите язык'
            }
          },
          login: {
            caption: 'Вход'
          },
          logout: {
            caption: 'Выход'
          }
        },

        footer: {
          'application-name': '',
          'application-version': {
            caption: 'Версия аддона {{version}}',
            title: 'Это версия аддона ember-flexberry, которая сейчас используется в этом тестовом приложении ' + '(версия npm-пакета + хэш коммита). ' + 'Кликните, чтобы перейти на GitHub.'
          }
        },

        sitemap: {
          'application-name': {
            caption: '',
            title: ''
          },
          'application-version': {
            caption: 'Версия аддона {{version}}',
            title: 'Это версия аддона ember-flexberry, которая сейчас используется в этом тестовом приложении ' + '(версия npm-пакета + хэш коммита). ' + 'Кликните, чтобы перейти на GitHub.'
          },
          index: {
            caption: 'Главная',
            title: ''
          },
          'fd-visual-edit-form': {
            caption: 'Конструктор формы редактирования',
            title: ''
          },
          root: {
            caption: 'Root',
            title: 'Root',

            'fd-appstruct-form': {
              caption: 'Структура приложения',
              title: ''

            },

            'fd-listform-constructor': {
              caption: 'Конструктор списковой формы',
              title: ''
            },

            'fd-configuration-list-form': {
              caption: 'Организации',
              title: ''

            },
            'fd-stage-list-form': {
              caption: 'Проекты',
              title: ''

            },
            'additional': {
              caption: 'Дополнительно',
              title: ''
            },
            'fd-system-list-form': {
              caption: 'Подсистемы',
              title: ''

            },
            'fd-diagram-list-form': {
              caption: 'Диаграммы',
              title: ''

            },
            'fd-class-list-form': {
              caption: 'Классы',
              title: ''

            },
            'fd-association-list-form': {
              caption: 'Ассоциации',
              title: ''

            },
            'fd-aggregation-list-form': {
              caption: 'Аггрегации',
              title: ''

            },
            'fd-inheritance-list-form': {
              caption: 'Наследование',
              title: ''

            },
            'fd-view-list-form': {
              caption: 'Представления',
              title: ''

            },
            'fd-generation-process-form': {
              caption: 'Генерация',
              title: ''
            },
            'fd-generation-list-form': {
              caption: 'Список генераций',
              title: ''
            },
            'fd-uml-primitives': {
              caption: 'UML',
              title: ''
            },
            'class-diagram-primitives-demo': {
              caption: 'Диаграмма классов',
              title: ''
            },
            'activity-diagram-primitives-demo': {
              caption: 'Диаграмма активностей',
              title: ''
            },
            'deployment-diagram-primitives-demo': {
              caption: 'Диаграмма развертывания',
              title: ''
            },
            'statechart-diagram-primitives-demo': {
              caption: 'Диаграмма состояний',
              title: ''
            },
            'usecase-diagram-primitives-demo': {
              caption: 'Диаграмма вариантов использования',
              title: ''
            },
            'sequence-diagram-primitives-demo': {
              caption: 'Диаграмма последовательности',
              title: ''
            },
            'collaboration-diagram-primitives-demo': {
              caption: 'Диаграмма сотрудничества',
              title: ''
            }
          }
        }
      },

      'edit-form': {
        'save-success-message-caption': 'Сохранение завершилось успешно',
        'save-success-message': 'Объект сохранен',
        'save-error-message-caption': 'Ошибка сохранения',
        'delete-success-message-caption': 'Удаление завершилось успешно',
        'delete-success-message': 'Объект удален',
        'delete-error-message-caption': 'Ошибка удаления'
      }
    }

  });

  exports['default'] = translations;
});
define('dummy/mixins/link-action', ['exports', 'ember-link-action/mixins/link-action'], function (exports, _emberLinkActionMixinsLinkAction) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberLinkActionMixinsLinkAction['default'];
    }
  });
});
define('dummy/models/custom-inflector-rules', ['exports', 'ember-inflector'], function (exports, _emberInflector) {

  var inflector = _emberInflector['default'].inflector;

  inflector.irregular('configuration', 'Configurations');
  inflector.irregular('association', 'Associations');
  inflector.irregular('aggregation', 'Aggregations');
  inflector.irregular('inheritance', 'Inheritances');
  inflector.irregular('definition', 'Definitions');
  inflector.irregular('generation', 'Generations');
  inflector.irregular('repository', 'Repositorys');
  inflector.irregular('subsystem', 'Subsystems');
  inflector.irregular('parameter', 'Parameters');
  inflector.irregular('attribute', 'Attributes');
  inflector.irregular('filelink', 'Filelinks');
  inflector.irregular('property', 'Propertys');
  inflector.irregular('history', 'Historys');
  inflector.irregular('setting', 'Settings');
  inflector.irregular('diagram', 'Diagrams');
  inflector.irregular('control', 'Controls');
  inflector.irregular('plugins', 'Pluginss');
  inflector.irregular('project', 'Projects');
  inflector.irregular('object', 'Objects');
  inflector.irregular('system', 'Systems');
  inflector.irregular('method', 'Methods');
  inflector.irregular('status', 'Statuss');
  inflector.irregular('stage', 'Stages');
  inflector.irregular('class', 'Classs');
  inflector.irregular('view', 'Views');
  inflector.irregular('link', 'Links');
  inflector.irregular('type', 'Types');
  inflector.irregular('task', 'Tasks');
  inflector.irregular('dpd', 'Dpds');
  inflector.irregular('ucd', 'Ucds');
  inflector.irregular('std', 'Stds');
  inflector.irregular('cad', 'Cads');
  inflector.irregular('cod', 'Cods');
  inflector.irregular('sd', 'Sds');
  inflector.irregular('ad', 'Ads');
  inflector.irregular('in', 'Ins');
  inflector.irregular('l', 'Ls');

  exports['default'] = {};
});
define('dummy/models/fd-ad', ['exports', 'ember-flexberry-designer/models/fd-ad'], function (exports, _emberFlexberryDesignerModelsFdAd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdAd['default'];
    }
  });
});
define('dummy/models/fd-aggregation', ['exports', 'ember-flexberry-designer/models/fd-aggregation'], function (exports, _emberFlexberryDesignerModelsFdAggregation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdAggregation['default'];
    }
  });
});
define('dummy/models/fd-association', ['exports', 'ember-flexberry-designer/models/fd-association'], function (exports, _emberFlexberryDesignerModelsFdAssociation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdAssociation['default'];
    }
  });
});
define('dummy/models/fd-base-association', ['exports', 'ember-flexberry-designer/models/fd-base-association'], function (exports, _emberFlexberryDesignerModelsFdBaseAssociation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdBaseAssociation['default'];
    }
  });
});
define('dummy/models/fd-cad', ['exports', 'ember-flexberry-designer/models/fd-cad'], function (exports, _emberFlexberryDesignerModelsFdCad) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdCad['default'];
    }
  });
});
define('dummy/models/fd-case-property', ['exports', 'ember-flexberry-designer/models/fd-case-property'], function (exports, _emberFlexberryDesignerModelsFdCaseProperty) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdCaseProperty['default'];
    }
  });
});
define('dummy/models/fd-class-storage-type', ['exports', 'ember-flexberry-designer/models/fd-class-storage-type'], function (exports, _emberFlexberryDesignerModelsFdClassStorageType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdClassStorageType['default'];
    }
  });
});
define('dummy/models/fd-class', ['exports', 'ember-flexberry-designer/models/fd-class'], function (exports, _emberFlexberryDesignerModelsFdClass) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdClass['default'];
    }
  });
});
define('dummy/models/fd-cod', ['exports', 'ember-flexberry-designer/models/fd-cod'], function (exports, _emberFlexberryDesignerModelsFdCod) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdCod['default'];
    }
  });
});
define('dummy/models/fd-configuration', ['exports', 'ember-flexberry-designer/models/fd-configuration'], function (exports, _emberFlexberryDesignerModelsFdConfiguration) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdConfiguration['default'];
    }
  });
});
define('dummy/models/fd-dev-aggregation', ['exports', 'ember-flexberry-designer/models/fd-dev-aggregation'], function (exports, _emberFlexberryDesignerModelsFdDevAggregation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevAggregation['default'];
    }
  });
});
define('dummy/models/fd-dev-associated-detail-view', ['exports', 'ember-flexberry-designer/models/fd-dev-associated-detail-view'], function (exports, _emberFlexberryDesignerModelsFdDevAssociatedDetailView) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevAssociatedDetailView['default'];
    }
  });
});
define('dummy/models/fd-dev-association', ['exports', 'ember-flexberry-designer/models/fd-dev-association'], function (exports, _emberFlexberryDesignerModelsFdDevAssociation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevAssociation['default'];
    }
  });
});
define('dummy/models/fd-dev-attribute', ['exports', 'ember-flexberry-designer/models/fd-dev-attribute'], function (exports, _emberFlexberryDesignerModelsFdDevAttribute) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevAttribute['default'];
    }
  });
});
define('dummy/models/fd-dev-base-association', ['exports', 'ember-flexberry-designer/models/fd-dev-base-association'], function (exports, _emberFlexberryDesignerModelsFdDevBaseAssociation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevBaseAssociation['default'];
    }
  });
});
define('dummy/models/fd-dev-class', ['exports', 'ember-flexberry-designer/models/fd-dev-class'], function (exports, _emberFlexberryDesignerModelsFdDevClass) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevClass['default'];
    }
  });
});
define('dummy/models/fd-dev-control-type', ['exports', 'ember-flexberry-designer/models/fd-dev-control-type'], function (exports, _emberFlexberryDesignerModelsFdDevControlType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevControlType['default'];
    }
  });
});
define('dummy/models/fd-dev-diagram-link', ['exports', 'ember-flexberry-designer/models/fd-dev-diagram-link'], function (exports, _emberFlexberryDesignerModelsFdDevDiagramLink) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevDiagramLink['default'];
    }
  });
});
define('dummy/models/fd-dev-filelink', ['exports', 'ember-flexberry-designer/models/fd-dev-filelink'], function (exports, _emberFlexberryDesignerModelsFdDevFilelink) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevFilelink['default'];
    }
  });
});
define('dummy/models/fd-dev-form-control', ['exports', 'ember-flexberry-designer/models/fd-dev-form-control'], function (exports, _emberFlexberryDesignerModelsFdDevFormControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevFormControl['default'];
    }
  });
});
define('dummy/models/fd-dev-form-view', ['exports', 'ember-flexberry-designer/models/fd-dev-form-view'], function (exports, _emberFlexberryDesignerModelsFdDevFormView) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevFormView['default'];
    }
  });
});
define('dummy/models/fd-dev-inheritance', ['exports', 'ember-flexberry-designer/models/fd-dev-inheritance'], function (exports, _emberFlexberryDesignerModelsFdDevInheritance) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevInheritance['default'];
    }
  });
});
define('dummy/models/fd-dev-method', ['exports', 'ember-flexberry-designer/models/fd-dev-method'], function (exports, _emberFlexberryDesignerModelsFdDevMethod) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevMethod['default'];
    }
  });
});
define('dummy/models/fd-dev-module-setting-type', ['exports', 'ember-flexberry-designer/models/fd-dev-module-setting-type'], function (exports, _emberFlexberryDesignerModelsFdDevModuleSettingType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevModuleSettingType['default'];
    }
  });
});
define('dummy/models/fd-dev-module-setting', ['exports', 'ember-flexberry-designer/models/fd-dev-module-setting'], function (exports, _emberFlexberryDesignerModelsFdDevModuleSetting) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevModuleSetting['default'];
    }
  });
});
define('dummy/models/fd-dev-parameter', ['exports', 'ember-flexberry-designer/models/fd-dev-parameter'], function (exports, _emberFlexberryDesignerModelsFdDevParameter) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevParameter['default'];
    }
  });
});
define('dummy/models/fd-dev-process-status', ['exports', 'ember-flexberry-designer/models/fd-dev-process-status'], function (exports, _emberFlexberryDesignerModelsFdDevProcessStatus) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevProcessStatus['default'];
    }
  });
});
define('dummy/models/fd-dev-stage-history', ['exports', 'ember-flexberry-designer/models/fd-dev-stage-history'], function (exports, _emberFlexberryDesignerModelsFdDevStageHistory) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevStageHistory['default'];
    }
  });
});
define('dummy/models/fd-dev-stage', ['exports', 'ember-flexberry-designer/models/fd-dev-stage'], function (exports, _emberFlexberryDesignerModelsFdDevStage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevStage['default'];
    }
  });
});
define('dummy/models/fd-dev-system', ['exports', 'ember-flexberry-designer/models/fd-dev-system'], function (exports, _emberFlexberryDesignerModelsFdDevSystem) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevSystem['default'];
    }
  });
});
define('dummy/models/fd-dev-task', ['exports', 'ember-flexberry-designer/models/fd-dev-task'], function (exports, _emberFlexberryDesignerModelsFdDevTask) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevTask['default'];
    }
  });
});
define('dummy/models/fd-dev-type-definition', ['exports', 'ember-flexberry-designer/models/fd-dev-type-definition'], function (exports, _emberFlexberryDesignerModelsFdDevTypeDefinition) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevTypeDefinition['default'];
    }
  });
});
define('dummy/models/fd-dev-uml-ad', ['exports', 'ember-flexberry-designer/models/fd-dev-uml-ad'], function (exports, _emberFlexberryDesignerModelsFdDevUmlAd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevUmlAd['default'];
    }
  });
});
define('dummy/models/fd-dev-uml-cad', ['exports', 'ember-flexberry-designer/models/fd-dev-uml-cad'], function (exports, _emberFlexberryDesignerModelsFdDevUmlCad) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevUmlCad['default'];
    }
  });
});
define('dummy/models/fd-dev-uml-cod', ['exports', 'ember-flexberry-designer/models/fd-dev-uml-cod'], function (exports, _emberFlexberryDesignerModelsFdDevUmlCod) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevUmlCod['default'];
    }
  });
});
define('dummy/models/fd-dev-uml-dpd', ['exports', 'ember-flexberry-designer/models/fd-dev-uml-dpd'], function (exports, _emberFlexberryDesignerModelsFdDevUmlDpd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevUmlDpd['default'];
    }
  });
});
define('dummy/models/fd-dev-uml-sd', ['exports', 'ember-flexberry-designer/models/fd-dev-uml-sd'], function (exports, _emberFlexberryDesignerModelsFdDevUmlSd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevUmlSd['default'];
    }
  });
});
define('dummy/models/fd-dev-uml-std', ['exports', 'ember-flexberry-designer/models/fd-dev-uml-std'], function (exports, _emberFlexberryDesignerModelsFdDevUmlStd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevUmlStd['default'];
    }
  });
});
define('dummy/models/fd-dev-uml-ucd', ['exports', 'ember-flexberry-designer/models/fd-dev-uml-ucd'], function (exports, _emberFlexberryDesignerModelsFdDevUmlUcd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevUmlUcd['default'];
    }
  });
});
define('dummy/models/fd-dev-view', ['exports', 'ember-flexberry-designer/models/fd-dev-view'], function (exports, _emberFlexberryDesignerModelsFdDevView) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDevView['default'];
    }
  });
});
define('dummy/models/fd-diagram-link', ['exports', 'ember-flexberry-designer/models/fd-diagram-link'], function (exports, _emberFlexberryDesignerModelsFdDiagramLink) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDiagramLink['default'];
    }
  });
});
define('dummy/models/fd-diagram', ['exports', 'ember-flexberry-designer/models/fd-diagram'], function (exports, _emberFlexberryDesignerModelsFdDiagram) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDiagram['default'];
    }
  });
});
define('dummy/models/fd-dpd', ['exports', 'ember-flexberry-designer/models/fd-dpd'], function (exports, _emberFlexberryDesignerModelsFdDpd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdDpd['default'];
    }
  });
});
define('dummy/models/fd-filelink', ['exports', 'ember-flexberry-designer/models/fd-filelink'], function (exports, _emberFlexberryDesignerModelsFdFilelink) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdFilelink['default'];
    }
  });
});
define('dummy/models/fd-form-control', ['exports', 'ember-flexberry-designer/models/fd-form-control'], function (exports, _emberFlexberryDesignerModelsFdFormControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdFormControl['default'];
    }
  });
});
define('dummy/models/fd-form-view', ['exports', 'ember-flexberry-designer/models/fd-form-view'], function (exports, _emberFlexberryDesignerModelsFdFormView) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdFormView['default'];
    }
  });
});
define('dummy/models/fd-generation-step-log', ['exports', 'ember-flexberry-designer/models/fd-generation-step-log'], function (exports, _emberFlexberryDesignerModelsFdGenerationStepLog) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdGenerationStepLog['default'];
    }
  });
});
define('dummy/models/fd-generation', ['exports', 'ember-flexberry-designer/models/fd-generation'], function (exports, _emberFlexberryDesignerModelsFdGeneration) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdGeneration['default'];
    }
  });
});
define('dummy/models/fd-inheritance', ['exports', 'ember-flexberry-designer/models/fd-inheritance'], function (exports, _emberFlexberryDesignerModelsFdInheritance) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdInheritance['default'];
    }
  });
});
define('dummy/models/fd-object-in-system', ['exports', 'ember-flexberry-designer/models/fd-object-in-system'], function (exports, _emberFlexberryDesignerModelsFdObjectInSystem) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdObjectInSystem['default'];
    }
  });
});
define('dummy/models/fd-plugin-on-rep-object', ['exports', 'ember-flexberry-designer/models/fd-plugin-on-rep-object'], function (exports, _emberFlexberryDesignerModelsFdPluginOnRepObject) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdPluginOnRepObject['default'];
    }
  });
});
define('dummy/models/fd-project', ['exports', 'ember-flexberry-designer/models/fd-project'], function (exports, _emberFlexberryDesignerModelsFdProject) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdProject['default'];
    }
  });
});
define('dummy/models/fd-registered-plug-in', ['exports', 'ember-flexberry-designer/models/fd-registered-plug-in'], function (exports, _emberFlexberryDesignerModelsFdRegisteredPlugIn) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdRegisteredPlugIn['default'];
    }
  });
});
define('dummy/models/fd-repository-browser-data-object-with-a-c-l', ['exports', 'ember-flexberry-designer/models/fd-repository-browser-data-object-with-a-c-l'], function (exports, _emberFlexberryDesignerModelsFdRepositoryBrowserDataObjectWithACL) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdRepositoryBrowserDataObjectWithACL['default'];
    }
  });
});
define('dummy/models/fd-repository-browser-data-object', ['exports', 'ember-flexberry-designer/models/fd-repository-browser-data-object'], function (exports, _emberFlexberryDesignerModelsFdRepositoryBrowserDataObject) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdRepositoryBrowserDataObject['default'];
    }
  });
});
define('dummy/models/fd-repository-data-object', ['exports', 'ember-flexberry-designer/models/fd-repository-data-object'], function (exports, _emberFlexberryDesignerModelsFdRepositoryDataObject) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdRepositoryDataObject['default'];
    }
  });
});
define('dummy/models/fd-repository-object-with-plugins', ['exports', 'ember-flexberry-designer/models/fd-repository-object-with-plugins'], function (exports, _emberFlexberryDesignerModelsFdRepositoryObjectWithPlugins) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdRepositoryObjectWithPlugins['default'];
    }
  });
});
define('dummy/models/fd-repository-ref-data-object', ['exports', 'ember-flexberry-designer/models/fd-repository-ref-data-object'], function (exports, _emberFlexberryDesignerModelsFdRepositoryRefDataObject) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdRepositoryRefDataObject['default'];
    }
  });
});
define('dummy/models/fd-repository', ['exports', 'ember-flexberry-designer/models/fd-repository'], function (exports, _emberFlexberryDesignerModelsFdRepository) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdRepository['default'];
    }
  });
});
define('dummy/models/fd-sd', ['exports', 'ember-flexberry-designer/models/fd-sd'], function (exports, _emberFlexberryDesignerModelsFdSd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdSd['default'];
    }
  });
});
define('dummy/models/fd-stage', ['exports', 'ember-flexberry-designer/models/fd-stage'], function (exports, _emberFlexberryDesignerModelsFdStage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdStage['default'];
    }
  });
});
define('dummy/models/fd-std', ['exports', 'ember-flexberry-designer/models/fd-std'], function (exports, _emberFlexberryDesignerModelsFdStd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdStd['default'];
    }
  });
});
define('dummy/models/fd-storage-type', ['exports', 'ember-flexberry-designer/models/fd-storage-type'], function (exports, _emberFlexberryDesignerModelsFdStorageType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdStorageType['default'];
    }
  });
});
define('dummy/models/fd-subsystem', ['exports', 'ember-flexberry-designer/models/fd-subsystem'], function (exports, _emberFlexberryDesignerModelsFdSubsystem) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdSubsystem['default'];
    }
  });
});
define('dummy/models/fd-ucd', ['exports', 'ember-flexberry-designer/models/fd-ucd'], function (exports, _emberFlexberryDesignerModelsFdUcd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdUcd['default'];
    }
  });
});
define('dummy/models/fd-view', ['exports', 'ember-flexberry-designer/models/fd-view'], function (exports, _emberFlexberryDesignerModelsFdView) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdView['default'];
    }
  });
});
define('dummy/models/fd-visual-edit-control', ['exports', 'ember-flexberry-designer/models/fd-visual-edit-control'], function (exports, _emberFlexberryDesignerModelsFdVisualEditControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdVisualEditControl['default'];
    }
  });
});
define('dummy/models/fd-visual-edit-form', ['exports', 'ember-flexberry-designer/models/fd-visual-edit-form'], function (exports, _emberFlexberryDesignerModelsFdVisualEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerModelsFdVisualEditForm['default'];
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity'], function (exports, _emberFlexberryDataModelsICSSoftSTORMNETBusinessAuditObjectsAuditEntity) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsICSSoftSTORMNETBusinessAuditObjectsAuditEntity['default'];
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field'], function (exports, _emberFlexberryDataModelsICSSoftSTORMNETBusinessAuditObjectsAuditField) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsICSSoftSTORMNETBusinessAuditObjectsAuditField['default'];
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type'], function (exports, _emberFlexberryDataModelsICSSoftSTORMNETBusinessAuditObjectsObjectType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsICSSoftSTORMNETBusinessAuditObjectsObjectType['default'];
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent'], function (exports, _emberFlexberryDataModelsICSSoftSTORMNETSecurityAgent) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsICSSoftSTORMNETSecurityAgent['default'];
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-link-group', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-link-group'], function (exports, _emberFlexberryDataModelsICSSoftSTORMNETSecurityLinkGroup) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsICSSoftSTORMNETSecurityLinkGroup['default'];
    }
  });
});
define('dummy/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-session', ['exports', 'ember-flexberry-data/models/i-c-s-soft-s-t-o-r-m-n-e-t-security-session'], function (exports, _emberFlexberryDataModelsICSSoftSTORMNETSecuritySession) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsICSSoftSTORMNETSecuritySession['default'];
    }
  });
});
define('dummy/models/i-i-s-caseberry-logging-objects-application-log', ['exports', 'ember-flexberry/models/i-i-s-caseberry-logging-objects-application-log'], function (exports, _emberFlexberryModelsIISCaseberryLoggingObjectsApplicationLog) {
  /**
   * @module ember-flexberry
   */
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryModelsIISCaseberryLoggingObjectsApplicationLog['default'];
    }
  });
});
define('dummy/models/model', ['exports', 'ember-flexberry-data/models/model'], function (exports, _emberFlexberryDataModelsModel) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsModel['default'];
    }
  });
});
define('dummy/models/new-platform-flexberry-flexberry-user-setting', ['exports', 'ember-flexberry/models/new-platform-flexberry-flexberry-user-setting'], function (exports, _emberFlexberryModelsNewPlatformFlexberryFlexberryUserSetting) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryModelsNewPlatformFlexberryFlexberryUserSetting['default'];
    }
  });
});
define('dummy/models/new-platform-flexberry-services-lock', ['exports', 'ember-flexberry/models/new-platform-flexberry-services-lock'], function (exports, _emberFlexberryModelsNewPlatformFlexberryServicesLock) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryModelsNewPlatformFlexberryServicesLock['default'];
    }
  });
});
define('dummy/models/offline-model', ['exports', 'ember-flexberry-data/models/offline-model'], function (exports, _emberFlexberryDataModelsOfflineModel) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataModelsOfflineModel['default'];
    }
  });
});
define('dummy/objects/new-platform-flexberry-web-designer-business-server-class', ['exports', 'ember-flexberry-designer/objects/new-platform-flexberry-web-designer-business-server-class'], function (exports, _emberFlexberryDesignerObjectsNewPlatformFlexberryWebDesignerBusinessServerClass) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerObjectsNewPlatformFlexberryWebDesignerBusinessServerClass['default'];
    }
  });
});
define('dummy/resolver', ['exports', 'ember-flexberry/resolver'], function (exports, _emberFlexberryResolver) {
  exports['default'] = _emberFlexberryResolver['default'];
});
define('dummy/router', ['exports', 'ember', 'ember-flexberry-designer/utils/fd-sequence-diagram-primitives', 'dummy/config/environment'], function (exports, _ember, _emberFlexberryDesignerUtilsFdSequenceDiagramPrimitives, _dummyConfigEnvironment) {

  var Router = _ember['default'].Router.extend({
    location: _dummyConfigEnvironment['default'].locationType
  });

  Router.map(function () {
    this.route('fd-appstruct-form');

    this.route('fd-application-edit-form', { path: 'fd-application-edit-form/:id' });
    this.route('fd-application-edit-form.new', { path: 'fd-application-edit-form/new' });
    this.route('fd-association-list-form');
    this.route('fd-association-edit-form', { path: 'fd-association-edit-form/:id' });
    this.route('fd-association-edit-form.new', { path: 'fd-association-edit-form/new' });
    this.route('fd-aggregation-list-form');
    this.route('fd-aggregation-edit-form', { path: 'fd-aggregation-edit-form/:id' });
    this.route('fd-aggregation-edit-form.new', { path: 'fd-aggregation-edit-form/new' });
    this.route('fd-business-server-edit-form', { path: 'fd-business-server-edit-form/:id' });
    this.route('fd-business-server-edit-form.new', { path: 'fd-business-server-edit-form/new' });
    this.route('fd-class-list-form');
    this.route('fd-class-edit-form', { path: 'fd-class-edit-form/:id' });
    this.route('fd-class-edit-form.new', { path: 'fd-class-edit-form/new' });
    this.route('fd-configuration-list-form');
    this.route('fd-configuration-edit-form', { path: 'fd-configuration-edit-form/:id' });
    this.route('fd-configuration-edit-form.new', { path: 'fd-configuration-edit-form/new' });
    this.route('fd-diagram-list-form');
    this.route('fd-diagram-edit-form', { path: 'fd-diagram-edit-form/:id' });
    this.route('fd-diagram-edit-form.new', { path: 'fd-diagram-edit-form/new' });
    this.route('fd-edit-form-edit-form', { path: 'fd-edit-form-edit-form/:id' });
    this.route('fd-edit-form-edit-form.new', { path: 'fd-edit-form-edit-form/new' });
    this.route('fd-enum-edit-form', { path: 'fd-enum-edit-form/:id' });
    this.route('fd-enum-edit-form.new', { path: 'fd-enum-edit-form/new' });
    this.route('fd-external-edit-form', { path: 'fd-external-edit-form/:id' });
    this.route('fd-external-edit-form.new', { path: 'fd-external-edit-form/new' });
    this.route('fd-inheritance-list-form');
    this.route('fd-inheritance-edit-form', { path: 'fd-inheritance-edit-form/:id' });
    this.route('fd-inheritance-edit-form.new', { path: 'fd-inheritance-edit-form/new' });
    this.route('fd-interface-edit-form', { path: 'fd-interface-edit-form/:id' });
    this.route('fd-interface-edit-form.new', { path: 'fd-interface-edit-form/new' });
    this.route('fd-list-form-edit-form', { path: 'fd-list-form-edit-form/:id' });
    this.route('fd-list-form-edit-form.new', { path: 'fd-list-form-edit-form/new' });
    this.route('fd-stage-list-form');
    this.route('fd-stage-edit-form', { path: 'fd-stage-edit-form/:id' });
    this.route('fd-stage-edit-form.new', { path: 'fd-stage-edit-form/new' });
    this.route('fd-system-list-form');
    this.route('fd-system-edit-form', { path: 'fd-system-edit-form/:id' });
    this.route('fd-system-edit-form.new', { path: 'fd-system-edit-form/new' });
    this.route('fd-type-edit-form', { path: 'fd-type-edit-form/:id' });
    this.route('fd-type-edit-form.new', { path: 'fd-type-edit-form/new' });
    this.route('fd-user-form-edit-form', { path: 'fd-user-form-edit-form/:id' });
    this.route('fd-user-form-edit-form.new', { path: 'fd-user-form-edit-form/new' });
    this.route('fd-view-list-form');
    this.route('fd-view-edit-form', { path: 'fd-view-edit-form/:id' });
    this.route('fd-view-edit-form.new', { path: 'fd-view-edit-form/new' });

    this.route('fd-visual-edit-form');
    this.route('fd-editform-constructor', { path: 'fd-editform-constructor/:id' }, function () {
      this.route('form-config-panel');
    });
    this.route('fd-editform-constructor.new', { path: 'fd-editform-constructor/new' });

    this.route('fd-listform-constructor');

    this.route('fd-generation-process-form.new', { path: 'fd-generation-process-form/new' });
    this.route('fd-generation-process-form', { path: 'fd-generation-process-form/:id' });
    this.route('fd-generation-list-form');
    this.route('fd-sequence-diagram-primitives-demo');
    this.route('class-diagram-primitives-demo');
    this.route('activity-diagram-primitives-demo');
    this.route('usecase-diagram-primitives-demo');
    this.route('deployment-diagram-primitives-demo');
    this.route('statechart-diagram-primitives-demo');
    this.route('collaboration-diagram-primitives-demo');
  });

  exports['default'] = Router;
});
define('dummy/routes/activity-diagram-primitives-demo', ['exports', 'ember', 'ember-flexberry-designer/utils/fd-activity-diagram-primitives'], function (exports, _ember, _emberFlexberryDesignerUtilsFdActivityDiagramPrimitives) {
  exports['default'] = _ember['default'].Route.extend({
    activate: function activate() {
      var _this = this;
      _ember['default'].run.schedule('afterRender', this, function () {
        _this.controller.send('printDiagram');
      });
    }
  });
});
define('dummy/routes/application', ['exports', 'ember', 'ember-flexberry/mixins/modal-application-route', 'ember-flexberry-designer/utils/fd-preload-stage-metadata', 'ember-flexberry-data'], function (exports, _ember, _emberFlexberryMixinsModalApplicationRoute, _emberFlexberryDesignerUtilsFdPreloadStageMetadata, _emberFlexberryData) {
  var Builder = _emberFlexberryData.Query.Builder;
  var FilterOperator = _emberFlexberryData.Query.FilterOperator;
  var SimplePredicate = _emberFlexberryData.Query.SimplePredicate;
  exports['default'] = _ember['default'].Route.extend(_emberFlexberryMixinsModalApplicationRoute['default'], {

    /**
     Service that triggers objectlistview events.
      @property objectlistviewEventsService
     @type {Class}
     @default Ember.inject.service()
     */
    objectlistviewEventsService: _ember['default'].inject.service('objectlistview-events'),

    /**
      Link to {{#crossLink "FdCurrentProjectContextService"}}FdCurrentProjectContextService{{/crossLink}}.
       @property currentContext
      @type FdCurrentProjectContextService
    */
    currentProjectContext: _ember['default'].inject.service('fd-current-project-context'),

    activate: function activate() {
      var _this = this;

      var context = this.get('currentProjectContext');

      if (context.singleStageMode) {
        (function () {
          var store = _this.get('store');
          var modelName = 'fd-dev-stage';

          var predicate = new SimplePredicate('id', FilterOperator.Eq, context.context.stage);

          var builder = new Builder(store).from(modelName).select('id,name,configuration.id').where(predicate);

          _this.get('objectlistviewEventsService').setLoadingState('loading');
          store.query(modelName, builder.build()).then(function (result) {
            if (result && result.get('length') !== undefined && result.get('length') === 1) {
              var stage = result.objectAt(0);
              context.setCurrentConfiguration(stage.get('configuration'));
              context.setCurrentStage(stage);
              _emberFlexberryDesignerUtilsFdPreloadStageMetadata['default'].call(_this, store, context.getCurrentStage()).then(function () {
                return context.getAutogeneratedSystemPromise();
              }).then(function () {
                if (_this.get('controller.currentRouteName') === 'fd-appstruct-form') {
                  _this.refresh();
                } else {
                  _this.transitionTo('fd-appstruct-form');
                }

                _this.get('objectlistviewEventsService').setLoadingState('');
              });
            }
          });
        })();
      } else {
        this.transitionTo('fd-configuration-list-form');
      }
    }
  });
});
define('dummy/routes/class-diagram-primitives-demo', ['exports', 'ember', 'ember-flexberry-designer/utils/fd-class-diagram-primitives'], function (exports, _ember, _emberFlexberryDesignerUtilsFdClassDiagramPrimitives) {
  exports['default'] = _ember['default'].Route.extend({
    activate: function activate() {
      var _this = this;
      _ember['default'].run.schedule('afterRender', this, function () {
        _this.controller.send('printDiagram');
      });
    }
  });
});
define('dummy/routes/collaboration-diagram-primitives-demo', ['exports', 'ember', 'ember-flexberry-designer/utils/fd-collaboration-diagram-primitives'], function (exports, _ember, _emberFlexberryDesignerUtilsFdCollaborationDiagramPrimitives) {
  exports['default'] = _ember['default'].Route.extend({
    activate: function activate() {
      var _this = this;
      _ember['default'].run.schedule('afterRender', this, function () {
        _this.controller.send('printDiagram');
      });
    }
  });
});
define('dummy/routes/deployment-diagram-primitives-demo', ['exports', 'ember', 'ember-flexberry-designer/utils/fd-deployment-diagram-primitives'], function (exports, _ember, _emberFlexberryDesignerUtilsFdDeploymentDiagramPrimitives) {
  exports['default'] = _ember['default'].Route.extend({
    activate: function activate() {
      var _this = this;
      _ember['default'].run.schedule('afterRender', this, function () {
        _this.controller.send('printDiagram');
      });
    }
  });
});
define('dummy/routes/edit-form', ['exports', 'ember-flexberry/routes/edit-form'], function (exports, _emberFlexberryRoutesEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryRoutesEditForm['default'];
    }
  });
});
define('dummy/routes/fd-aggregation-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-aggregation-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdAggregationEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdAggregationEditForm['default'];
    }
  });
});
define('dummy/routes/fd-aggregation-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-aggregation-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdAggregationEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdAggregationEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-aggregation-list-form', ['exports', 'ember-flexberry-designer/routes/fd-aggregation-list-form'], function (exports, _emberFlexberryDesignerRoutesFdAggregationListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdAggregationListForm['default'];
    }
  });
});
define('dummy/routes/fd-application-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-application-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdApplicationEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdApplicationEditForm['default'];
    }
  });
});
define('dummy/routes/fd-application-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-application-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdApplicationEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdApplicationEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-appstruct-form', ['exports', 'ember-flexberry-designer/routes/fd-appstruct-form'], function (exports, _emberFlexberryDesignerRoutesFdAppstructForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdAppstructForm['default'];
    }
  });
});
define('dummy/routes/fd-association-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-association-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdAssociationEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdAssociationEditForm['default'];
    }
  });
});
define('dummy/routes/fd-association-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-association-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdAssociationEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdAssociationEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-association-list-form', ['exports', 'ember-flexberry-designer/routes/fd-association-list-form'], function (exports, _emberFlexberryDesignerRoutesFdAssociationListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdAssociationListForm['default'];
    }
  });
});
define('dummy/routes/fd-business-server-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-business-server-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdBusinessServerEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdBusinessServerEditForm['default'];
    }
  });
});
define('dummy/routes/fd-business-server-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-business-server-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdBusinessServerEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdBusinessServerEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-class-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-class-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdClassEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdClassEditForm['default'];
    }
  });
});
define('dummy/routes/fd-class-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-class-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdClassEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdClassEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-class-list-form', ['exports', 'ember-flexberry-designer/routes/fd-class-list-form'], function (exports, _emberFlexberryDesignerRoutesFdClassListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdClassListForm['default'];
    }
  });
});
define('dummy/routes/fd-configuration-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-configuration-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdConfigurationEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdConfigurationEditForm['default'];
    }
  });
});
define('dummy/routes/fd-configuration-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-configuration-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdConfigurationEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdConfigurationEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-configuration-list-form', ['exports', 'ember-flexberry-designer/routes/fd-configuration-list-form'], function (exports, _emberFlexberryDesignerRoutesFdConfigurationListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdConfigurationListForm['default'];
    }
  });
});
define('dummy/routes/fd-diagram-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-diagram-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdDiagramEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdDiagramEditForm['default'];
    }
  });
});
define('dummy/routes/fd-diagram-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-diagram-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdDiagramEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdDiagramEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-diagram-list-form', ['exports', 'ember-flexberry-designer/routes/fd-diagram-list-form'], function (exports, _emberFlexberryDesignerRoutesFdDiagramListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdDiagramListForm['default'];
    }
  });
});
define('dummy/routes/fd-edit-form-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-edit-form-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdEditFormEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdEditFormEditForm['default'];
    }
  });
});
define('dummy/routes/fd-edit-form-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-edit-form-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdEditFormEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdEditFormEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-editform-constructor', ['exports', 'ember-flexberry-designer/routes/fd-editform-constructor'], function (exports, _emberFlexberryDesignerRoutesFdEditformConstructor) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdEditformConstructor['default'];
    }
  });
});
define('dummy/routes/fd-editform-constructor/form-config-panel', ['exports', 'ember-flexberry-designer/routes/fd-editform-constructor/form-config-panel'], function (exports, _emberFlexberryDesignerRoutesFdEditformConstructorFormConfigPanel) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdEditformConstructorFormConfigPanel['default'];
    }
  });
});
define('dummy/routes/fd-enum-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-enum-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdEnumEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdEnumEditForm['default'];
    }
  });
});
define('dummy/routes/fd-enum-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-enum-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdEnumEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdEnumEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-external-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-external-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdExternalEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdExternalEditForm['default'];
    }
  });
});
define('dummy/routes/fd-external-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-external-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdExternalEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdExternalEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-generation-list-form', ['exports', 'ember-flexberry-designer/routes/fd-generation-list-form'], function (exports, _emberFlexberryDesignerRoutesFdGenerationListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdGenerationListForm['default'];
    }
  });
});
define('dummy/routes/fd-generation-process-form', ['exports', 'ember-flexberry-designer/routes/fd-generation-process-form'], function (exports, _emberFlexberryDesignerRoutesFdGenerationProcessForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdGenerationProcessForm['default'];
    }
  });
});
define('dummy/routes/fd-generation-process-form/new', ['exports', 'ember-flexberry-designer/routes/fd-generation-process-form/new'], function (exports, _emberFlexberryDesignerRoutesFdGenerationProcessFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdGenerationProcessFormNew['default'];
    }
  });
});
define('dummy/routes/fd-inheritance-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-inheritance-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdInheritanceEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdInheritanceEditForm['default'];
    }
  });
});
define('dummy/routes/fd-inheritance-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-inheritance-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdInheritanceEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdInheritanceEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-inheritance-list-form', ['exports', 'ember-flexberry-designer/routes/fd-inheritance-list-form'], function (exports, _emberFlexberryDesignerRoutesFdInheritanceListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdInheritanceListForm['default'];
    }
  });
});
define('dummy/routes/fd-interface-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-interface-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdInterfaceEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdInterfaceEditForm['default'];
    }
  });
});
define('dummy/routes/fd-interface-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-interface-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdInterfaceEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdInterfaceEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-list-form-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-list-form-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdListFormEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdListFormEditForm['default'];
    }
  });
});
define('dummy/routes/fd-list-form-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-list-form-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdListFormEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdListFormEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-listform-constructor', ['exports', 'ember-flexberry-designer/routes/fd-listform-constructor'], function (exports, _emberFlexberryDesignerRoutesFdListformConstructor) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdListformConstructor['default'];
    }
  });
});
define('dummy/routes/fd-sequence-diagram-primitives-demo', ['exports', 'ember'], function (exports, _ember) {
  exports['default'] = _ember['default'].Route.extend({
    activate: function activate() {
      var _this = this;
      _ember['default'].run.schedule('afterRender', this, function () {
        _this.controller.send('printDiagram');
      });
    }
  });
});
define('dummy/routes/fd-stage-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-stage-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdStageEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdStageEditForm['default'];
    }
  });
});
define('dummy/routes/fd-stage-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-stage-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdStageEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdStageEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-stage-list-form', ['exports', 'ember-flexberry-designer/routes/fd-stage-list-form'], function (exports, _emberFlexberryDesignerRoutesFdStageListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdStageListForm['default'];
    }
  });
});
define('dummy/routes/fd-system-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-system-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdSystemEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdSystemEditForm['default'];
    }
  });
});
define('dummy/routes/fd-system-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-system-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdSystemEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdSystemEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-system-list-form', ['exports', 'ember-flexberry-designer/routes/fd-system-list-form'], function (exports, _emberFlexberryDesignerRoutesFdSystemListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdSystemListForm['default'];
    }
  });
});
define('dummy/routes/fd-type-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-type-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdTypeEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdTypeEditForm['default'];
    }
  });
});
define('dummy/routes/fd-type-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-type-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdTypeEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdTypeEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-user-form-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-user-form-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdUserFormEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdUserFormEditForm['default'];
    }
  });
});
define('dummy/routes/fd-user-form-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-user-form-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdUserFormEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdUserFormEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-view-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-view-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdViewEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdViewEditForm['default'];
    }
  });
});
define('dummy/routes/fd-view-edit-form/new', ['exports', 'ember-flexberry-designer/routes/fd-view-edit-form/new'], function (exports, _emberFlexberryDesignerRoutesFdViewEditFormNew) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdViewEditFormNew['default'];
    }
  });
});
define('dummy/routes/fd-view-list-form', ['exports', 'ember-flexberry-designer/routes/fd-view-list-form'], function (exports, _emberFlexberryDesignerRoutesFdViewListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdViewListForm['default'];
    }
  });
});
define('dummy/routes/fd-visual-edit-control', ['exports', 'ember-flexberry-designer/routes/fd-visual-edit-control'], function (exports, _emberFlexberryDesignerRoutesFdVisualEditControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdVisualEditControl['default'];
    }
  });
});
define('dummy/routes/fd-visual-edit-form', ['exports', 'ember-flexberry-designer/routes/fd-visual-edit-form'], function (exports, _emberFlexberryDesignerRoutesFdVisualEditForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerRoutesFdVisualEditForm['default'];
    }
  });
});
define('dummy/routes/i-i-s-caseberry-logging-objects-application-log-e', ['exports', 'ember-flexberry/routes/i-i-s-caseberry-logging-objects-application-log-e'], function (exports, _emberFlexberryRoutesIISCaseberryLoggingObjectsApplicationLogE) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryRoutesIISCaseberryLoggingObjectsApplicationLogE['default'];
    }
  });
});
define('dummy/routes/i-i-s-caseberry-logging-objects-application-log-l', ['exports', 'ember-flexberry/routes/i-i-s-caseberry-logging-objects-application-log-l'], function (exports, _emberFlexberryRoutesIISCaseberryLoggingObjectsApplicationLogL) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryRoutesIISCaseberryLoggingObjectsApplicationLogL['default'];
    }
  });
});
define('dummy/routes/list-form', ['exports', 'ember-flexberry/routes/list-form'], function (exports, _emberFlexberryRoutesListForm) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryRoutesListForm['default'];
    }
  });
});
define('dummy/routes/new-platform-flexberry-services-lock-list', ['exports', 'ember-flexberry/routes/new-platform-flexberry-services-lock-list'], function (exports, _emberFlexberryRoutesNewPlatformFlexberryServicesLockList) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryRoutesNewPlatformFlexberryServicesLockList['default'];
    }
  });
});
define('dummy/routes/statechart-diagram-primitives-demo', ['exports', 'ember', 'ember-flexberry-designer/utils/fd-statechart-diagram-primitives'], function (exports, _ember, _emberFlexberryDesignerUtilsFdStatechartDiagramPrimitives) {
  exports['default'] = _ember['default'].Route.extend({
    activate: function activate() {
      var _this = this;
      _ember['default'].run.schedule('afterRender', this, function () {
        _this.controller.send('printDiagram');
      });
    }
  });
});
define('dummy/routes/usecase-diagram-primitives-demo', ['exports', 'ember', 'ember-flexberry-designer/utils/fd-usecase-diagram-primitives'], function (exports, _ember, _emberFlexberryDesignerUtilsFdUsecaseDiagramPrimitives) {
  exports['default'] = _ember['default'].Route.extend({
    activate: function activate() {
      var _this = this;
      _ember['default'].run.schedule('afterRender', this, function () {
        _this.controller.send('printDiagram');
      });
    }
  });
});
define('dummy/serializers/base', ['exports', 'ember-flexberry-data/serializers/base'], function (exports, _emberFlexberryDataSerializersBase) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersBase['default'];
    }
  });
});
define('dummy/serializers/fd-ad', ['exports', 'ember-flexberry-designer/serializers/fd-ad'], function (exports, _emberFlexberryDesignerSerializersFdAd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdAd['default'];
    }
  });
});
define('dummy/serializers/fd-aggregation', ['exports', 'ember-flexberry-designer/serializers/fd-aggregation'], function (exports, _emberFlexberryDesignerSerializersFdAggregation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdAggregation['default'];
    }
  });
});
define('dummy/serializers/fd-association', ['exports', 'ember-flexberry-designer/serializers/fd-association'], function (exports, _emberFlexberryDesignerSerializersFdAssociation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdAssociation['default'];
    }
  });
});
define('dummy/serializers/fd-base-association', ['exports', 'ember-flexberry-designer/serializers/fd-base-association'], function (exports, _emberFlexberryDesignerSerializersFdBaseAssociation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdBaseAssociation['default'];
    }
  });
});
define('dummy/serializers/fd-cad', ['exports', 'ember-flexberry-designer/serializers/fd-cad'], function (exports, _emberFlexberryDesignerSerializersFdCad) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdCad['default'];
    }
  });
});
define('dummy/serializers/fd-case-property', ['exports', 'ember-flexberry-designer/serializers/fd-case-property'], function (exports, _emberFlexberryDesignerSerializersFdCaseProperty) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdCaseProperty['default'];
    }
  });
});
define('dummy/serializers/fd-class-storage-type', ['exports', 'ember-flexberry-designer/serializers/fd-class-storage-type'], function (exports, _emberFlexberryDesignerSerializersFdClassStorageType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdClassStorageType['default'];
    }
  });
});
define('dummy/serializers/fd-class', ['exports', 'ember-flexberry-designer/serializers/fd-class'], function (exports, _emberFlexberryDesignerSerializersFdClass) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdClass['default'];
    }
  });
});
define('dummy/serializers/fd-cod', ['exports', 'ember-flexberry-designer/serializers/fd-cod'], function (exports, _emberFlexberryDesignerSerializersFdCod) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdCod['default'];
    }
  });
});
define('dummy/serializers/fd-configuration', ['exports', 'ember-flexberry-designer/serializers/fd-configuration'], function (exports, _emberFlexberryDesignerSerializersFdConfiguration) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdConfiguration['default'];
    }
  });
});
define('dummy/serializers/fd-dev-aggregation', ['exports', 'ember-flexberry-designer/serializers/fd-dev-aggregation'], function (exports, _emberFlexberryDesignerSerializersFdDevAggregation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevAggregation['default'];
    }
  });
});
define('dummy/serializers/fd-dev-associated-detail-view', ['exports', 'ember-flexberry-designer/serializers/fd-dev-associated-detail-view'], function (exports, _emberFlexberryDesignerSerializersFdDevAssociatedDetailView) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevAssociatedDetailView['default'];
    }
  });
});
define('dummy/serializers/fd-dev-association', ['exports', 'ember-flexberry-designer/serializers/fd-dev-association'], function (exports, _emberFlexberryDesignerSerializersFdDevAssociation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevAssociation['default'];
    }
  });
});
define('dummy/serializers/fd-dev-attribute', ['exports', 'ember-flexberry-designer/serializers/fd-dev-attribute'], function (exports, _emberFlexberryDesignerSerializersFdDevAttribute) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevAttribute['default'];
    }
  });
});
define('dummy/serializers/fd-dev-base-association', ['exports', 'ember-flexberry-designer/serializers/fd-dev-base-association'], function (exports, _emberFlexberryDesignerSerializersFdDevBaseAssociation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevBaseAssociation['default'];
    }
  });
});
define('dummy/serializers/fd-dev-class', ['exports', 'ember-flexberry-designer/serializers/fd-dev-class'], function (exports, _emberFlexberryDesignerSerializersFdDevClass) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevClass['default'];
    }
  });
});
define('dummy/serializers/fd-dev-control-type', ['exports', 'ember-flexberry-designer/serializers/fd-dev-control-type'], function (exports, _emberFlexberryDesignerSerializersFdDevControlType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevControlType['default'];
    }
  });
});
define('dummy/serializers/fd-dev-diagram-link', ['exports', 'ember-flexberry-designer/serializers/fd-dev-diagram-link'], function (exports, _emberFlexberryDesignerSerializersFdDevDiagramLink) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevDiagramLink['default'];
    }
  });
});
define('dummy/serializers/fd-dev-filelink', ['exports', 'ember-flexberry-designer/serializers/fd-dev-filelink'], function (exports, _emberFlexberryDesignerSerializersFdDevFilelink) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevFilelink['default'];
    }
  });
});
define('dummy/serializers/fd-dev-form-control', ['exports', 'ember-flexberry-designer/serializers/fd-dev-form-control'], function (exports, _emberFlexberryDesignerSerializersFdDevFormControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevFormControl['default'];
    }
  });
});
define('dummy/serializers/fd-dev-form-view', ['exports', 'ember-flexberry-designer/serializers/fd-dev-form-view'], function (exports, _emberFlexberryDesignerSerializersFdDevFormView) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevFormView['default'];
    }
  });
});
define('dummy/serializers/fd-dev-inheritance', ['exports', 'ember-flexberry-designer/serializers/fd-dev-inheritance'], function (exports, _emberFlexberryDesignerSerializersFdDevInheritance) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevInheritance['default'];
    }
  });
});
define('dummy/serializers/fd-dev-method', ['exports', 'ember-flexberry-designer/serializers/fd-dev-method'], function (exports, _emberFlexberryDesignerSerializersFdDevMethod) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevMethod['default'];
    }
  });
});
define('dummy/serializers/fd-dev-module-setting-type', ['exports', 'ember-flexberry-designer/serializers/fd-dev-module-setting-type'], function (exports, _emberFlexberryDesignerSerializersFdDevModuleSettingType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevModuleSettingType['default'];
    }
  });
});
define('dummy/serializers/fd-dev-module-setting', ['exports', 'ember-flexberry-designer/serializers/fd-dev-module-setting'], function (exports, _emberFlexberryDesignerSerializersFdDevModuleSetting) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevModuleSetting['default'];
    }
  });
});
define('dummy/serializers/fd-dev-parameter', ['exports', 'ember-flexberry-designer/serializers/fd-dev-parameter'], function (exports, _emberFlexberryDesignerSerializersFdDevParameter) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevParameter['default'];
    }
  });
});
define('dummy/serializers/fd-dev-process-status', ['exports', 'ember-flexberry-designer/serializers/fd-dev-process-status'], function (exports, _emberFlexberryDesignerSerializersFdDevProcessStatus) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevProcessStatus['default'];
    }
  });
});
define('dummy/serializers/fd-dev-stage-history', ['exports', 'ember-flexberry-designer/serializers/fd-dev-stage-history'], function (exports, _emberFlexberryDesignerSerializersFdDevStageHistory) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevStageHistory['default'];
    }
  });
});
define('dummy/serializers/fd-dev-stage', ['exports', 'ember-flexberry-designer/serializers/fd-dev-stage'], function (exports, _emberFlexberryDesignerSerializersFdDevStage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevStage['default'];
    }
  });
});
define('dummy/serializers/fd-dev-system', ['exports', 'ember-flexberry-designer/serializers/fd-dev-system'], function (exports, _emberFlexberryDesignerSerializersFdDevSystem) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevSystem['default'];
    }
  });
});
define('dummy/serializers/fd-dev-task', ['exports', 'ember-flexberry-designer/serializers/fd-dev-task'], function (exports, _emberFlexberryDesignerSerializersFdDevTask) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevTask['default'];
    }
  });
});
define('dummy/serializers/fd-dev-type-definition', ['exports', 'ember-flexberry-designer/serializers/fd-dev-type-definition'], function (exports, _emberFlexberryDesignerSerializersFdDevTypeDefinition) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevTypeDefinition['default'];
    }
  });
});
define('dummy/serializers/fd-dev-uml-ad', ['exports', 'ember-flexberry-designer/serializers/fd-dev-uml-ad'], function (exports, _emberFlexberryDesignerSerializersFdDevUmlAd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevUmlAd['default'];
    }
  });
});
define('dummy/serializers/fd-dev-uml-cad', ['exports', 'ember-flexberry-designer/serializers/fd-dev-uml-cad'], function (exports, _emberFlexberryDesignerSerializersFdDevUmlCad) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevUmlCad['default'];
    }
  });
});
define('dummy/serializers/fd-dev-uml-cod', ['exports', 'ember-flexberry-designer/serializers/fd-dev-uml-cod'], function (exports, _emberFlexberryDesignerSerializersFdDevUmlCod) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevUmlCod['default'];
    }
  });
});
define('dummy/serializers/fd-dev-uml-dpd', ['exports', 'ember-flexberry-designer/serializers/fd-dev-uml-dpd'], function (exports, _emberFlexberryDesignerSerializersFdDevUmlDpd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevUmlDpd['default'];
    }
  });
});
define('dummy/serializers/fd-dev-uml-sd', ['exports', 'ember-flexberry-designer/serializers/fd-dev-uml-sd'], function (exports, _emberFlexberryDesignerSerializersFdDevUmlSd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevUmlSd['default'];
    }
  });
});
define('dummy/serializers/fd-dev-uml-std', ['exports', 'ember-flexberry-designer/serializers/fd-dev-uml-std'], function (exports, _emberFlexberryDesignerSerializersFdDevUmlStd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevUmlStd['default'];
    }
  });
});
define('dummy/serializers/fd-dev-uml-ucd', ['exports', 'ember-flexberry-designer/serializers/fd-dev-uml-ucd'], function (exports, _emberFlexberryDesignerSerializersFdDevUmlUcd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevUmlUcd['default'];
    }
  });
});
define('dummy/serializers/fd-dev-view', ['exports', 'ember-flexberry-designer/serializers/fd-dev-view'], function (exports, _emberFlexberryDesignerSerializersFdDevView) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDevView['default'];
    }
  });
});
define('dummy/serializers/fd-diagram-link', ['exports', 'ember-flexberry-designer/serializers/fd-diagram-link'], function (exports, _emberFlexberryDesignerSerializersFdDiagramLink) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDiagramLink['default'];
    }
  });
});
define('dummy/serializers/fd-diagram', ['exports', 'ember-flexberry-designer/serializers/fd-diagram'], function (exports, _emberFlexberryDesignerSerializersFdDiagram) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDiagram['default'];
    }
  });
});
define('dummy/serializers/fd-dpd', ['exports', 'ember-flexberry-designer/serializers/fd-dpd'], function (exports, _emberFlexberryDesignerSerializersFdDpd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdDpd['default'];
    }
  });
});
define('dummy/serializers/fd-filelink', ['exports', 'ember-flexberry-designer/serializers/fd-filelink'], function (exports, _emberFlexberryDesignerSerializersFdFilelink) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdFilelink['default'];
    }
  });
});
define('dummy/serializers/fd-form-control', ['exports', 'ember-flexberry-designer/serializers/fd-form-control'], function (exports, _emberFlexberryDesignerSerializersFdFormControl) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdFormControl['default'];
    }
  });
});
define('dummy/serializers/fd-form-view', ['exports', 'ember-flexberry-designer/serializers/fd-form-view'], function (exports, _emberFlexberryDesignerSerializersFdFormView) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdFormView['default'];
    }
  });
});
define('dummy/serializers/fd-generation-step-log', ['exports', 'ember-flexberry-designer/serializers/fd-generation-step-log'], function (exports, _emberFlexberryDesignerSerializersFdGenerationStepLog) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdGenerationStepLog['default'];
    }
  });
});
define('dummy/serializers/fd-generation', ['exports', 'ember-flexberry-designer/serializers/fd-generation'], function (exports, _emberFlexberryDesignerSerializersFdGeneration) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdGeneration['default'];
    }
  });
});
define('dummy/serializers/fd-inheritance', ['exports', 'ember-flexberry-designer/serializers/fd-inheritance'], function (exports, _emberFlexberryDesignerSerializersFdInheritance) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdInheritance['default'];
    }
  });
});
define('dummy/serializers/fd-object-in-system', ['exports', 'ember-flexberry-designer/serializers/fd-object-in-system'], function (exports, _emberFlexberryDesignerSerializersFdObjectInSystem) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdObjectInSystem['default'];
    }
  });
});
define('dummy/serializers/fd-plugin-on-rep-object', ['exports', 'ember-flexberry-designer/serializers/fd-plugin-on-rep-object'], function (exports, _emberFlexberryDesignerSerializersFdPluginOnRepObject) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdPluginOnRepObject['default'];
    }
  });
});
define('dummy/serializers/fd-project', ['exports', 'ember-flexberry-designer/serializers/fd-project'], function (exports, _emberFlexberryDesignerSerializersFdProject) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdProject['default'];
    }
  });
});
define('dummy/serializers/fd-registered-plug-in', ['exports', 'ember-flexberry-designer/serializers/fd-registered-plug-in'], function (exports, _emberFlexberryDesignerSerializersFdRegisteredPlugIn) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdRegisteredPlugIn['default'];
    }
  });
});
define('dummy/serializers/fd-repository-browser-data-object-with-a-c-l', ['exports', 'ember-flexberry-designer/serializers/fd-repository-browser-data-object-with-a-c-l'], function (exports, _emberFlexberryDesignerSerializersFdRepositoryBrowserDataObjectWithACL) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdRepositoryBrowserDataObjectWithACL['default'];
    }
  });
});
define('dummy/serializers/fd-repository-browser-data-object', ['exports', 'ember-flexberry-designer/serializers/fd-repository-browser-data-object'], function (exports, _emberFlexberryDesignerSerializersFdRepositoryBrowserDataObject) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdRepositoryBrowserDataObject['default'];
    }
  });
});
define('dummy/serializers/fd-repository-data-object', ['exports', 'ember-flexberry-designer/serializers/fd-repository-data-object'], function (exports, _emberFlexberryDesignerSerializersFdRepositoryDataObject) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdRepositoryDataObject['default'];
    }
  });
});
define('dummy/serializers/fd-repository-object-with-plugins', ['exports', 'ember-flexberry-designer/serializers/fd-repository-object-with-plugins'], function (exports, _emberFlexberryDesignerSerializersFdRepositoryObjectWithPlugins) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdRepositoryObjectWithPlugins['default'];
    }
  });
});
define('dummy/serializers/fd-repository-ref-data-object', ['exports', 'ember-flexberry-designer/serializers/fd-repository-ref-data-object'], function (exports, _emberFlexberryDesignerSerializersFdRepositoryRefDataObject) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdRepositoryRefDataObject['default'];
    }
  });
});
define('dummy/serializers/fd-repository', ['exports', 'ember-flexberry-designer/serializers/fd-repository'], function (exports, _emberFlexberryDesignerSerializersFdRepository) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdRepository['default'];
    }
  });
});
define('dummy/serializers/fd-sd', ['exports', 'ember-flexberry-designer/serializers/fd-sd'], function (exports, _emberFlexberryDesignerSerializersFdSd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdSd['default'];
    }
  });
});
define('dummy/serializers/fd-stage', ['exports', 'ember-flexberry-designer/serializers/fd-stage'], function (exports, _emberFlexberryDesignerSerializersFdStage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdStage['default'];
    }
  });
});
define('dummy/serializers/fd-std', ['exports', 'ember-flexberry-designer/serializers/fd-std'], function (exports, _emberFlexberryDesignerSerializersFdStd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdStd['default'];
    }
  });
});
define('dummy/serializers/fd-storage-type', ['exports', 'ember-flexberry-designer/serializers/fd-storage-type'], function (exports, _emberFlexberryDesignerSerializersFdStorageType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdStorageType['default'];
    }
  });
});
define('dummy/serializers/fd-subsystem', ['exports', 'ember-flexberry-designer/serializers/fd-subsystem'], function (exports, _emberFlexberryDesignerSerializersFdSubsystem) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdSubsystem['default'];
    }
  });
});
define('dummy/serializers/fd-ucd', ['exports', 'ember-flexberry-designer/serializers/fd-ucd'], function (exports, _emberFlexberryDesignerSerializersFdUcd) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdUcd['default'];
    }
  });
});
define('dummy/serializers/fd-view', ['exports', 'ember-flexberry-designer/serializers/fd-view'], function (exports, _emberFlexberryDesignerSerializersFdView) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerSerializersFdView['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity-offline', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity-offline'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditEntityOffline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditEntityOffline['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-entity'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditEntity) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditEntity['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field-offline', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field-offline'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditFieldOffline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditFieldOffline['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-audit-field'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditField) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsAuditField['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type-offline', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type-offline'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsObjectTypeOffline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsObjectTypeOffline['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-object-type'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsObjectType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETBusinessAuditObjectsObjectType['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent-offline', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent-offline'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETSecurityAgentOffline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETSecurityAgentOffline['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-agent'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETSecurityAgent) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETSecurityAgent['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-link-group', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-link-group'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETSecurityLinkGroup) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETSecurityLinkGroup['default'];
    }
  });
});
define('dummy/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-session', ['exports', 'ember-flexberry-data/serializers/i-c-s-soft-s-t-o-r-m-n-e-t-security-session'], function (exports, _emberFlexberryDataSerializersICSSoftSTORMNETSecuritySession) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersICSSoftSTORMNETSecuritySession['default'];
    }
  });
});
define('dummy/serializers/i-i-s-caseberry-logging-objects-application-log', ['exports', 'ember-flexberry/serializers/i-i-s-caseberry-logging-objects-application-log'], function (exports, _emberFlexberrySerializersIISCaseberryLoggingObjectsApplicationLog) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberrySerializersIISCaseberryLoggingObjectsApplicationLog['default'];
    }
  });
});
define('dummy/serializers/new-platform-flexberry-flexberry-user-setting', ['exports', 'ember-flexberry/serializers/new-platform-flexberry-flexberry-user-setting'], function (exports, _emberFlexberrySerializersNewPlatformFlexberryFlexberryUserSetting) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberrySerializersNewPlatformFlexberryFlexberryUserSetting['default'];
    }
  });
});
define('dummy/serializers/new-platform-flexberry-services-lock', ['exports', 'ember-flexberry/serializers/new-platform-flexberry-services-lock'], function (exports, _emberFlexberrySerializersNewPlatformFlexberryServicesLock) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberrySerializersNewPlatformFlexberryServicesLock['default'];
    }
  });
});
define('dummy/serializers/odata', ['exports', 'ember-flexberry-data/serializers/odata'], function (exports, _emberFlexberryDataSerializersOdata) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersOdata['default'];
    }
  });
});
define('dummy/serializers/offline', ['exports', 'ember-flexberry-data/serializers/offline'], function (exports, _emberFlexberryDataSerializersOffline) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataSerializersOffline['default'];
    }
  });
});
define('dummy/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _emberAjaxServicesAjax) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberAjaxServicesAjax['default'];
    }
  });
});
define('dummy/services/cols-config-menu', ['exports', 'ember', 'ember-flexberry/services/cols-config-menu', 'dummy/config/environment'], function (exports, _ember, _emberFlexberryServicesColsConfigMenu, _dummyConfigEnvironment) {

  var environment = _ember['default'].get(_dummyConfigEnvironment['default'], 'environment');
  _emberFlexberryServicesColsConfigMenu['default'].reopen({
    environment: environment
  });

  exports['default'] = _emberFlexberryServicesColsConfigMenu['default'];

  // export { default } from 'ember-flexberry/services/cols-config-menu';
});
define('dummy/services/detail-interaction', ['exports', 'ember-flexberry/services/detail-interaction'], function (exports, _emberFlexberryServicesDetailInteraction) {
  exports['default'] = _emberFlexberryServicesDetailInteraction['default'];
});
define('dummy/services/device', ['exports', 'ember-flexberry/services/device'], function (exports, _emberFlexberryServicesDevice) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryServicesDevice['default'];
    }
  });
});
define('dummy/services/dexie', ['exports', 'ember-flexberry-data/services/dexie'], function (exports, _emberFlexberryDataServicesDexie) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataServicesDexie['default'];
    }
  });
});
define('dummy/services/fd-current-project-context', ['exports', 'ember', 'ember-flexberry-designer/services/fd-current-project-context', 'dummy/config/environment'], function (exports, _ember, _emberFlexberryDesignerServicesFdCurrentProjectContext, _dummyConfigEnvironment) {

  var singleModeStageId = _ember['default'].get(_dummyConfigEnvironment['default'], 'APP.fdCurrentProjectContext.singleModeStageId');
  _emberFlexberryDesignerServicesFdCurrentProjectContext['default'].reopen({
    context: {
      stage: singleModeStageId
    },
    singleStageMode: singleModeStageId !== undefined
  });

  exports['default'] = _emberFlexberryDesignerServicesFdCurrentProjectContext['default'];
});
define('dummy/services/fd-generation', ['exports', 'ember-flexberry-designer/services/fd-generation'], function (exports, _emberFlexberryDesignerServicesFdGeneration) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerServicesFdGeneration['default'];
    }
  });
});
define('dummy/services/form-load-time-tracker', ['exports', 'ember-flexberry/services/form-load-time-tracker'], function (exports, _emberFlexberryServicesFormLoadTimeTracker) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryServicesFormLoadTimeTracker['default'];
    }
  });
});
define('dummy/services/i18n', ['exports', 'ember-i18n/services/i18n'], function (exports, _emberI18nServicesI18n) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberI18nServicesI18n['default'];
    }
  });
});
define('dummy/services/log', ['exports', 'ember', 'ember-flexberry/services/log', 'dummy/config/environment'], function (exports, _ember, _emberFlexberryServicesLog, _dummyConfigEnvironment) {

  var enabled = _ember['default'].get(_dummyConfigEnvironment['default'], 'APP.log.enabled');
  if (_ember['default'].typeOf(enabled) === 'boolean') {
    _emberFlexberryServicesLog['default'].reopen({
      enabled: enabled
    });
  }

  var storeErrorMessages = _ember['default'].get(_dummyConfigEnvironment['default'], 'APP.log.storeErrorMessages');
  if (_ember['default'].typeOf(storeErrorMessages) === 'boolean') {
    _emberFlexberryServicesLog['default'].reopen({
      storeErrorMessages: storeErrorMessages
    });
  }

  var storeWarnMessages = _ember['default'].get(_dummyConfigEnvironment['default'], 'APP.log.storeWarnMessages');
  if (_ember['default'].typeOf(storeWarnMessages) === 'boolean') {
    _emberFlexberryServicesLog['default'].reopen({
      storeWarnMessages: storeWarnMessages
    });
  }

  var storeLogMessages = _ember['default'].get(_dummyConfigEnvironment['default'], 'APP.log.storeLogMessages');
  if (_ember['default'].typeOf(storeLogMessages) === 'boolean') {
    _emberFlexberryServicesLog['default'].reopen({
      storeLogMessages: storeLogMessages
    });
  }

  var storeInfoMessages = _ember['default'].get(_dummyConfigEnvironment['default'], 'APP.log.storeInfoMessages');
  if (_ember['default'].typeOf(storeInfoMessages) === 'boolean') {
    _emberFlexberryServicesLog['default'].reopen({
      storeInfoMessages: storeInfoMessages
    });
  }

  var storeDebugMessages = _ember['default'].get(_dummyConfigEnvironment['default'], 'APP.log.storeDebugMessages');
  if (_ember['default'].typeOf(storeDebugMessages) === 'boolean') {
    _emberFlexberryServicesLog['default'].reopen({
      storeDebugMessages: storeDebugMessages
    });
  }

  var storeDeprecationMessages = _ember['default'].get(_dummyConfigEnvironment['default'], 'APP.log.storeDeprecationMessages');
  if (_ember['default'].typeOf(storeDeprecationMessages) === 'boolean') {
    _emberFlexberryServicesLog['default'].reopen({
      storeDeprecationMessages: storeDeprecationMessages
    });
  }

  var storePromiseErrors = _ember['default'].get(_dummyConfigEnvironment['default'], 'APP.log.storePromiseErrors');
  if (_ember['default'].typeOf(storePromiseErrors) === 'boolean') {
    _emberFlexberryServicesLog['default'].reopen({
      storePromiseErrors: storePromiseErrors
    });
  }

  var showPromiseErrors = _ember['default'].get(_dummyConfigEnvironment['default'], 'APP.log.showPromiseErrors');
  if (_ember['default'].typeOf(showPromiseErrors) === 'boolean') {
    _emberFlexberryServicesLog['default'].reopen({
      showPromiseErrors: showPromiseErrors
    });
  }

  exports['default'] = _emberFlexberryServicesLog['default'];
});
define('dummy/services/lookup-events', ['exports', 'ember-flexberry/services/lookup-events'], function (exports, _emberFlexberryServicesLookupEvents) {
  exports['default'] = _emberFlexberryServicesLookupEvents['default'];
});
define('dummy/services/moment', ['exports', 'ember', 'dummy/config/environment', 'ember-moment/services/moment'], function (exports, _ember, _dummyConfigEnvironment, _emberMomentServicesMoment) {
  exports['default'] = _emberMomentServicesMoment['default'].extend({
    defaultFormat: _ember['default'].get(_dummyConfigEnvironment['default'], 'moment.outputFormat')
  });
});
define('dummy/services/objectlistview-events', ['exports', 'ember-flexberry/services/objectlistview-events'], function (exports, _emberFlexberryServicesObjectlistviewEvents) {
  exports['default'] = _emberFlexberryServicesObjectlistviewEvents['default'];
});
define('dummy/services/offline-globals', ['exports', 'ember-flexberry-data/services/offline-globals'], function (exports, _emberFlexberryDataServicesOfflineGlobals) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataServicesOfflineGlobals['default'];
    }
  });
});
define('dummy/services/perf', ['exports', 'ember', 'ember-flexberry/services/perf', 'dummy/config/environment'], function (exports, _ember, _emberFlexberryServicesPerf, _dummyConfigEnvironment) {

  var enabled = _ember['default'].get(_dummyConfigEnvironment['default'], 'APP.perf.enabled');
  if (_ember['default'].typeOf(enabled) === 'boolean') {
    _emberFlexberryServicesPerf['default'].reopen({
      enabled: enabled
    });
  }

  exports['default'] = _emberFlexberryServicesPerf['default'];
});
define('dummy/services/store', ['exports', 'ember-flexberry-data', 'dummy/config/environment'], function (exports, _emberFlexberryData, _dummyConfigEnvironment) {
  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

  exports['default'] = _emberFlexberryData.Offline.Store.reopen(_emberFlexberryData.Projection.StoreMixin, {
    init: function init() {
      this.set('offlineSchema', _defineProperty({}, _dummyConfigEnvironment['default'].APP.offline.dbName, {
        // Paste your offline scheme here.
      }));
      return this._super.apply(this, arguments);
    }
  });
});
define('dummy/services/syncer', ['exports', 'ember-flexberry-data/services/syncer'], function (exports, _emberFlexberryDataServicesSyncer) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataServicesSyncer['default'];
    }
  });
});
define('dummy/services/user-settings', ['exports', 'ember-flexberry/services/user-settings'], function (exports, _emberFlexberryServicesUserSettings) {
  exports['default'] = _emberFlexberryServicesUserSettings['default'].extend({
    getCurrentUser: function getCurrentUser() {
      return 'admin';
    }
  });
});
define('dummy/services/user', ['exports', 'ember-flexberry-data/services/user'], function (exports, _emberFlexberryDataServicesUser) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataServicesUser['default'];
    }
  });
});
define('dummy/services/validations', ['exports', 'ember'], function (exports, _ember) {

  var set = _ember['default'].set;

  exports['default'] = _ember['default'].Service.extend({
    init: function init() {
      set(this, 'cache', {});
    }
  });
});
define("dummy/templates/activity-diagram-primitives-demo", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 22
          }
        },
        "moduleName": "dummy/templates/activity-diagram-primitives-demo.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "paper");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/application-with-submenu", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["multiple-nodes", "wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/application-with-submenu.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "header item");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("a");
          dom.setAttribute(el2, "class", "brand");
          dom.setAttribute(el2, "href", "#");
          var el3 = dom.createTextNode("Flexberry Ember Demo");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          return morphs;
        },
        statements: [["inline", "render", ["sitemap", ["get", "sitemap", ["loc", [null, [5, 21], [5, 28]]]]], [], ["loc", [null, [5, 2], [5, 30]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/application-with-submenu.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "example-with-submenu");
        dom.setAttribute(el1, "class", "pusher");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "full height");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "ui fixed main menu");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui container");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("a");
        dom.setAttribute(el5, "class", "launch icon item");
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "sidebar icon");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "right menu");
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "ui main container segment flexberry-content");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui close left rail");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "ui sticky transition visible");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("div");
        dom.setAttribute(el6, "class", "flexberry-submenu ui large violet pointing secondary vertical following fluid menu");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "ui main container");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [1, 1]);
        var element1 = dom.childAt(element0, [1, 1, 1]);
        var element2 = dom.childAt(element0, [3]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createElementMorph(element1);
        morphs[2] = dom.createMorphAt(dom.childAt(element2, [1, 1, 1]), 1, 1);
        morphs[3] = dom.createMorphAt(element2, 3, 3);
        morphs[4] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "ui-sidebar", [], ["class", "inverted vertical main menu"], 0, null, ["loc", [null, [1, 0], [6, 15]]]], ["element", "action", ["toggleSidebar"], [], ["loc", [null, [11, 11], [11, 39]]]], ["inline", "render", ["sitemap", ["get", "sitemap", ["loc", [null, [20, 31], [20, 38]]]]], [], ["loc", [null, [20, 12], [20, 40]]]], ["content", "outlet", ["loc", [null, [24, 6], [24, 16]]]], ["inline", "outlet", ["modal"], [], ["loc", [null, [29, 2], [29, 20]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/application", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type", "multiple-nodes"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 4,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/application.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          return morphs;
        },
        statements: [["content", "outlet", ["loc", [null, [2, 2], [2, 12]]]], ["inline", "outlet", ["modal"], [], ["loc", [null, [3, 2], [3, 20]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 7,
                "column": 0
              }
            },
            "moduleName": "dummy/templates/application.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("  ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "render", ["sitemap", ["get", "sitemap", ["loc", [null, [6, 21], [6, 28]]]]], [], ["loc", [null, [6, 2], [6, 30]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 71,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/application.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "bgw-fix");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "background-logo");
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "ui top attached");
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4, "class", "ui attached menu");
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("div");
          dom.setAttribute(el5, "class", "ui container flex-container");
          var el6 = dom.createTextNode("\n          ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("a");
          dom.setAttribute(el6, "class", "launch icon item");
          var el7 = dom.createTextNode("\n            ");
          dom.appendChild(el6, el7);
          var el7 = dom.createComment("");
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n            ");
          dom.appendChild(el6, el7);
          var el7 = dom.createElement("i");
          dom.setAttribute(el7, "class", "sidebar icon text-menu-show");
          var el8 = dom.createElement("span");
          dom.setAttribute(el8, "class", "text_menu ");
          var el9 = dom.createComment("");
          dom.appendChild(el8, el9);
          dom.appendChild(el7, el8);
          var el8 = dom.createElement("span");
          dom.setAttribute(el8, "class", "text_menu hidden text-menu-hide");
          var el9 = dom.createComment("");
          dom.appendChild(el8, el9);
          dom.appendChild(el7, el8);
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n            ");
          dom.appendChild(el6, el7);
          var el7 = dom.createElement("i");
          dom.setAttribute(el7, "class", "sidebar icon hidden text-menu-hide hidden-text");
          var el8 = dom.createElement("span");
          dom.setAttribute(el8, "class", "text_menu hidden-text");
          var el9 = dom.createComment("");
          dom.appendChild(el8, el9);
          dom.appendChild(el7, el8);
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n          ");
          dom.appendChild(el6, el7);
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n        ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n      ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n    ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("a");
          dom.setAttribute(el3, "class", "item logo");
          dom.setAttribute(el3, "href", "https://github.com/flexberry");
          dom.setAttribute(el3, "target", "_blank");
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("img");
          dom.setAttribute(el4, "class", "ui centered image");
          dom.setAttribute(el4, "src", "assets/images/flexberry-logo.png");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n    ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "page-header-caption");
          var el4 = dom.createElement("a");
          dom.setAttribute(el4, "href", "https://github.com/flexberry");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "page-header-userbar");
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("span");
          dom.setAttribute(el4, "id", "fio");
          dom.setAttribute(el4, "class", "hidden");
          var el5 = dom.createTextNode("ICS_HOME\\login");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("a");
          dom.setAttribute(el4, "id", "ExitButton");
          dom.setAttribute(el4, "class", "exit-btn");
          dom.setAttribute(el4, "href", "javascript:void(0)");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n    ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n  ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "id", "example");
          dom.setAttribute(el1, "class", "pusher");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "full height");
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4, "class", "flexberry-content ui attached segment");
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("div");
          dom.setAttribute(el5, "class", "ui main container");
          var el6 = dom.createTextNode("\n          ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("div");
          dom.setAttribute(el6, "class", "stackable grid container");
          var el7 = dom.createTextNode("\n            ");
          dom.appendChild(el6, el7);
          var el7 = dom.createComment("");
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n          ");
          dom.appendChild(el6, el7);
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n        ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n      ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n    ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n  ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui main container");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui vertical footer segment");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui container flex-container");
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "ui text menu");
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("a");
          dom.setAttribute(el4, "class", "brand item");
          dom.setAttribute(el4, "href", "#");
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n      ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4, "class", "right menu");
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n      ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n    ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n  ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [3, 1]);
          var element1 = dom.childAt(element0, [1, 1, 1, 1]);
          var element2 = dom.childAt(element1, [3]);
          var element3 = dom.childAt(element0, [3]);
          var element4 = dom.childAt(fragment, [5, 1]);
          var element5 = dom.childAt(fragment, [9, 1, 1]);
          var morphs = new Array(16);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[2] = dom.createAttrMorph(element1, 'title');
          morphs[3] = dom.createElementMorph(element1);
          morphs[4] = dom.createMorphAt(element1, 1, 1);
          morphs[5] = dom.createMorphAt(dom.childAt(element2, [0]), 0, 0);
          morphs[6] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
          morphs[7] = dom.createMorphAt(dom.childAt(element1, [5, 0]), 0, 0);
          morphs[8] = dom.createAttrMorph(element3, 'title');
          morphs[9] = dom.createMorphAt(dom.childAt(element0, [5, 0]), 0, 0);
          morphs[10] = dom.createMorphAt(dom.childAt(element0, [7, 3]), 0, 0);
          morphs[11] = dom.createAttrMorph(element4, 'class');
          morphs[12] = dom.createMorphAt(dom.childAt(element4, [1, 1, 1, 1]), 1, 1);
          morphs[13] = dom.createMorphAt(dom.childAt(fragment, [7]), 1, 1);
          morphs[14] = dom.createMorphAt(dom.childAt(element5, [1]), 1, 1);
          morphs[15] = dom.createMorphAt(dom.childAt(element5, [3]), 1, 1);
          dom.insertBoundary(fragment, 0);
          return morphs;
        },
        statements: [["block", "ui-sidebar", [], ["class", "inverted vertical main menu"], 0, null, ["loc", [null, [5, 0], [7, 15]]]], ["inline", "outlet", ["right-sidebar"], [], ["loc", [null, [8, 0], [8, 26]]]], ["attribute", "title", ["subexpr", "t", ["forms.application.header.menu.sitemap-button.title"], [], ["loc", [null, [16, 18], [16, 76]]]]], ["element", "action", ["toggleSidebar"], [], ["loc", [null, [14, 13], [14, 39]]]], ["inline", "t", ["forms.application.header.menu.sitemap-button.caption"], [], ["loc", [null, [17, 12], [17, 72]]]], ["inline", "t", ["forms.application.header.menu.show-menu.caption"], [], ["loc", [null, [18, 76], [18, 131]]]], ["inline", "t", ["forms.application.header.menu.hide-menu.caption"], [], ["loc", [null, [18, 184], [18, 239]]]], ["inline", "t", ["forms.application.header.menu.hide-menu.caption"], [], ["loc", [null, [19, 106], [19, 161]]]], ["attribute", "title", ["subexpr", "t", ["forms.application.sitemap.application-name.title"], [], ["loc", [null, [27, 12], [27, 68]]]]], ["inline", "t", ["application-name"], [], ["loc", [null, [30, 76], [30, 100]]]], ["inline", "t", ["forms.application.header.logout.caption"], [], ["loc", [null, [33, 68], [33, 115]]]], ["attribute", "class", ["concat", ["ui form ", ["get", "objectlistviewEventsService.loadingState", ["loc", [null, [38, 24], [38, 64]]]]]]], ["content", "outlet", ["loc", [null, [43, 12], [43, 22]]]], ["inline", "outlet", ["modal"], [], ["loc", [null, [51, 2], [51, 20]]]], ["inline", "t", ["forms.application.footer.application-name"], [], ["loc", [null, [57, 8], [57, 57]]]], ["inline", "flexberry-dropdown", [], ["class", "compact", "items", ["subexpr", "@mut", [["get", "locales", ["loc", [null, [62, 16], [62, 23]]]]], [], []], "value", ["subexpr", "@mut", [["get", "i18n.locale", ["loc", [null, [63, 16], [63, 27]]]]], [], []], "placeholder", ["subexpr", "t", ["forms.application.header.menu.language-dropdown.placeholder"], [], ["loc", [null, [64, 22], [64, 87]]]], "direction", "upward"], ["loc", [null, [60, 8], [66, 10]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 72,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/application.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "isInAcceptanceTestMode", ["loc", [null, [1, 6], [1, 28]]]]], [], 0, 1, ["loc", [null, [1, 0], [71, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/class-diagram-primitives-demo", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 22
          }
        },
        "moduleName": "dummy/templates/class-diagram-primitives-demo.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "paper");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/collaboration-diagram-primitives-demo", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 22
          }
        },
        "moduleName": "dummy/templates/collaboration-diagram-primitives-demo.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "paper");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/colsconfig-dialog-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/colsconfig-dialog-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "colsconfig-dialog-content", [], ["model", ["subexpr", "@mut", [["get", "model", ["loc", [null, [2, 8], [2, 13]]]]], [], []], "close", "sortByColumnsConfig", "type", ["subexpr", "@mut", [["get", "message.type", ["loc", [null, [4, 7], [4, 19]]]]], [], []], "closeable", true, "visible", ["subexpr", "@mut", [["get", "message.visible", ["loc", [null, [6, 10], [6, 25]]]]], [], []], "caption", ["subexpr", "@mut", [["get", "message.caption", ["loc", [null, [7, 10], [7, 25]]]]], [], []], "message", ["subexpr", "@mut", [["get", "message.message", ["loc", [null, [8, 10], [8, 25]]]]], [], []]], ["loc", [null, [1, 0], [9, 2]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/colsconfig-dialog", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/colsconfig-dialog.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "outlet", ["modal-content"], [], ["loc", [null, [9, 2], [9, 28]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/colsconfig-dialog.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "modal-dialog", [], ["title", ["subexpr", "@mut", [["get", "title", ["loc", [null, [2, 8], [2, 13]]]]], [], []], "sizeClass", "small", "close", "removeModalDialog", "created", "createdModalDialog", "useOkButton", false, "useCloseButton", false], 0, null, ["loc", [null, [1, 0], [10, 17]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/colsconfig-dialog-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 15,
              "column": 0
            },
            "end": {
              "line": 47,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/colsconfig-dialog-content.hbs"
        },
        isEmpty: false,
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createElement("td");
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "colsConfigHidden", "false");
          dom.setAttribute(el3, "style", "cursor:pointer");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n              ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("button");
          dom.setAttribute(el3, "class", "ui icon tiny button");
          var el4 = dom.createTextNode("\n                ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("i");
          dom.setAttribute(el4, "class", "chevron up icon");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("button");
          dom.setAttribute(el3, "class", "ui icon tiny button no-margin");
          var el4 = dom.createTextNode("\n                ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("i");
          dom.setAttribute(el4, "class", "chevron down icon");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "class", "sort-direction-cell");
          var el3 = dom.createElement("select");
          var el4 = dom.createTextNode("\n                ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("option");
          dom.setAttribute(el4, "value", "0");
          var el5 = dom.createTextNode("-");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n                ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("option");
          dom.setAttribute(el4, "value", "1");
          var el5 = dom.createTextNode("▲");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n                ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("option");
          dom.setAttribute(el4, "value", "-1");
          var el5 = dom.createTextNode("▼");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n              ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          var el4 = dom.createTextNode("\n                ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("input");
          dom.setAttribute(el4, "size", "2");
          dom.setAttribute(el4, "type", "input");
          dom.setAttribute(el4, "style", "");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n              ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          var el4 = dom.createTextNode("\n                ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("input");
          dom.setAttribute(el4, "size", "2");
          dom.setAttribute(el4, "class", "columnWidth");
          dom.setAttribute(el4, "type", "input");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n              ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var element2 = dom.childAt(element1, [0, 0]);
          var element3 = dom.childAt(element1, [1]);
          var element4 = dom.childAt(element3, [1]);
          var element5 = dom.childAt(element3, [2]);
          var element6 = dom.childAt(element1, [2]);
          var element7 = dom.childAt(element1, [3, 0]);
          var element8 = dom.childAt(element7, [1]);
          var element9 = dom.childAt(element7, [3]);
          var element10 = dom.childAt(element7, [5]);
          var element11 = dom.childAt(element1, [4]);
          var element12 = dom.childAt(element11, [1]);
          var element13 = dom.childAt(element12, [1]);
          var element14 = dom.childAt(element1, [5]);
          var element15 = dom.childAt(element14, [1]);
          var element16 = dom.childAt(element15, [1]);
          var morphs = new Array(32);
          morphs[0] = dom.createAttrMorph(element1, 'id');
          morphs[1] = dom.createAttrMorph(element1, 'propName');
          morphs[2] = dom.createAttrMorph(element2, 'id');
          morphs[3] = dom.createAttrMorph(element2, 'class');
          morphs[4] = dom.createElementMorph(element2);
          morphs[5] = dom.createAttrMorph(element3, 'class');
          morphs[6] = dom.createAttrMorph(element4, 'id');
          morphs[7] = dom.createElementMorph(element4);
          morphs[8] = dom.createAttrMorph(element5, 'id');
          morphs[9] = dom.createElementMorph(element5);
          morphs[10] = dom.createAttrMorph(element6, 'class');
          morphs[11] = dom.createMorphAt(element6, 0, 0);
          morphs[12] = dom.createAttrMorph(element7, 'class');
          morphs[13] = dom.createAttrMorph(element7, 'id');
          morphs[14] = dom.createAttrMorph(element7, 'name');
          morphs[15] = dom.createElementMorph(element7);
          morphs[16] = dom.createAttrMorph(element8, 'selected');
          morphs[17] = dom.createAttrMorph(element9, 'selected');
          morphs[18] = dom.createAttrMorph(element10, 'selected');
          morphs[19] = dom.createAttrMorph(element11, 'class');
          morphs[20] = dom.createAttrMorph(element12, 'class');
          morphs[21] = dom.createAttrMorph(element13, 'id');
          morphs[22] = dom.createAttrMorph(element13, 'class');
          morphs[23] = dom.createAttrMorph(element13, 'disabled');
          morphs[24] = dom.createAttrMorph(element13, 'value');
          morphs[25] = dom.createAttrMorph(element13, 'prevValue');
          morphs[26] = dom.createElementMorph(element13);
          morphs[27] = dom.createAttrMorph(element14, 'class');
          morphs[28] = dom.createAttrMorph(element15, 'class');
          morphs[29] = dom.createAttrMorph(element16, 'id');
          morphs[30] = dom.createAttrMorph(element16, 'value');
          morphs[31] = dom.createElementMorph(element16);
          return morphs;
        },
        statements: [["attribute", "id", ["concat", [["get", "colDesc.trId", ["loc", [null, [16, 20], [16, 32]]]]]]], ["attribute", "propName", ["concat", [["get", "colDesc.propName", ["loc", [null, [16, 48], [16, 64]]]]]]], ["attribute", "id", ["concat", [["get", "colDesc.hideId", ["loc", [null, [17, 26], [17, 40]]]]]]], ["attribute", "class", ["concat", ["large ", ["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [17, 62], [17, 74]]]], "hide", "unhide"], [], ["loc", [null, [17, 57], [17, 92]]]], " icon"]]], ["element", "action", ["invertVisibility", ["get", "n", ["loc", [null, [17, 150], [17, 151]]]]], [], ["loc", [null, [17, 122], [17, 153]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [18, 29], [18, 41]]]], "disabled", ""], [], ["loc", [null, [18, 24], [18, 57]]]]]]], ["attribute", "id", ["concat", [["get", "colDesc.rowUpId", ["loc", [null, [19, 49], [19, 64]]]]]]], ["element", "action", ["rowUp", ["get", "n", ["loc", [null, [19, 39], [19, 40]]]]], [], ["loc", [null, [19, 22], [19, 42]]]], ["attribute", "id", ["concat", [["get", "colDesc.rowDownId", ["loc", [null, [22, 53], [22, 70]]]]]]], ["element", "action", ["rowDown", ["get", "n", ["loc", [null, [22, 42], [22, 43]]]]], [], ["loc", [null, [22, 23], [22, 45]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [26, 29], [26, 41]]]], "disabled", ""], [], ["loc", [null, [26, 24], [26, 57]]]]]]], ["content", "colDesc.name", ["loc", [null, [26, 59], [26, 75]]]], ["attribute", "class", ["concat", ["ui compact dropdown selection sort-direction-dropdown ", ["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [28, 89], [28, 101]]]], "disabled", ""], [], ["loc", [null, [28, 84], [28, 117]]]], " ", ["subexpr", "if", [["get", "colDesc.isHasMany", ["loc", [null, [28, 123], [28, 140]]]], "hidden", ""], [], ["loc", [null, [28, 118], [28, 154]]]]]]], ["attribute", "id", ["concat", [["get", "colDesc.sortOrderId", ["loc", [null, [28, 163], [28, 182]]]]]]], ["attribute", "name", ["concat", ["sortorder[", ["get", "colDesc.name", ["loc", [null, [28, 204], [28, 216]]]], "]"]]], ["element", "action", ["setSortOrder", ["get", "n", ["loc", [null, [28, 245], [28, 246]]]]], ["on", "change"], ["loc", [null, [28, 221], [28, 260]]]], ["attribute", "selected", ["concat", [["get", "colDesc.sortOrderNot", ["loc", [null, [29, 36], [29, 56]]]]]]], ["attribute", "selected", ["concat", [["get", "colDesc.sortOrderAsc", ["loc", [null, [30, 36], [30, 56]]]]]]], ["attribute", "selected", ["concat", [["get", "colDesc.sortOrderDesc", ["loc", [null, [31, 36], [31, 57]]]]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [34, 29], [34, 41]]]], "disabled", ""], [], ["loc", [null, [34, 24], [34, 57]]]]]]], ["attribute", "class", ["concat", ["ui input ", ["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [35, 40], [35, 52]]]], "disabled", ""], [], ["loc", [null, [35, 35], [35, 68]]]]]]], ["attribute", "id", ["concat", [["get", "colDesc.sortPriorityId", ["loc", [null, [36, 29], [36, 51]]]]]]], ["attribute", "class", ["concat", ["sortPriority ", ["subexpr", "if", [["get", "colDesc.sortOrder", ["loc", [null, [36, 89], [36, 106]]]], "", "hidden"], [], ["loc", [null, [36, 84], [36, 120]]]]]]], ["attribute", "disabled", ["concat", [["subexpr", "if", [["get", "colDesc.sortOrder", ["loc", [null, [36, 137], [36, 154]]]], "", "disabled"], [], ["loc", [null, [36, 132], [36, 170]]]]]]], ["attribute", "value", ["concat", [["get", "colDesc.sortPriority", ["loc", [null, [36, 181], [36, 201]]]]]]], ["attribute", "prevValue", ["concat", [["get", "colDesc.sortPriority", ["loc", [null, [37, 76], [37, 96]]]]]]], ["element", "action", ["setSortPriority", ["get", "n", ["loc", [null, [37, 45], [37, 46]]]]], ["on", "focusOut"], ["loc", [null, [37, 18], [37, 62]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "colDesc.hide", ["loc", [null, [40, 29], [40, 41]]]], "disabled", ""], [], ["loc", [null, [40, 24], [40, 57]]]]]]], ["attribute", "class", ["concat", ["ui input ", ["subexpr", "if", [["subexpr", "or", [["get", "colDesc.hide", ["loc", [null, [41, 44], [41, 56]]]], ["subexpr", "or", [["get", "exportParams.isExportExcel", ["loc", [null, [41, 61], [41, 87]]]], ["subexpr", "or", [["get", "colDesc.fixed", ["loc", [null, [41, 92], [41, 105]]]], ["subexpr", "not", [["get", "saveColWidthState", ["loc", [null, [41, 111], [41, 128]]]]], [], ["loc", [null, [41, 106], [41, 129]]]]], [], ["loc", [null, [41, 88], [41, 130]]]]], [], ["loc", [null, [41, 57], [41, 131]]]]], [], ["loc", [null, [41, 40], [41, 132]]]], "disabled", ""], [], ["loc", [null, [41, 35], [41, 148]]]]]]], ["attribute", "id", ["concat", [["get", "colDesc.columnWidthId", ["loc", [null, [42, 29], [42, 50]]]]]]], ["attribute", "value", ["concat", [["get", "colDesc.columnWidth", ["loc", [null, [42, 92], [42, 111]]]]]]], ["element", "action", ["widthChanged"], ["on", "focusOut"], ["loc", [null, [42, 128], [42, 168]]]]],
        locals: ["colDesc", "n"],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 50,
              "column": 10
            },
            "end": {
              "line": 65,
              "column": 10
            }
          },
          "moduleName": "dummy/templates/components/colsconfig-dialog-content.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createElement("th");
          dom.setAttribute(el2, "colspan", "6");
          var el3 = dom.createTextNode("\n              ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n              ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1, 0]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element0, 1, 1);
          morphs[1] = dom.createMorphAt(element0, 3, 3);
          return morphs;
        },
        statements: [["inline", "flexberry-checkbox", [], ["label", ["subexpr", "t", ["components.colsconfig-dialog-content.det-separate-cols"], [], ["loc", [null, [54, 22], [54, 82]]]], "value", ["subexpr", "@mut", [["get", "exportParams.detSeparateCols", ["loc", [null, [55, 22], [55, 50]]]]], [], []], "onChange", ["subexpr", "action", ["detSeparateColsChange"], [], ["loc", [null, [56, 25], [56, 57]]]]], ["loc", [null, [53, 14], [57, 16]]]], ["inline", "flexberry-checkbox", [], ["label", ["subexpr", "t", ["components.colsconfig-dialog-content.det-separate-rows"], [], ["loc", [null, [59, 22], [59, 82]]]], "value", ["subexpr", "@mut", [["get", "exportParams.detSeparateRows", ["loc", [null, [60, 22], [60, 50]]]]], [], []], "onChange", ["subexpr", "action", ["detSeparateRowsChange"], [], ["loc", [null, [61, 25], [61, 57]]]]], ["loc", [null, [58, 14], [62, 16]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 109,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/colsconfig-dialog-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "flexberry-colsconfig content");
        var el3 = dom.createTextNode("\n      ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("table");
        dom.setAttribute(el3, "class", "ui unstackable fixed selectable celled table");
        var el4 = dom.createElement("thead");
        var el5 = dom.createElement("tr");
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "class", "show-columns");
        dom.setAttribute(el6, "style", "cursor:default");
        var el7 = dom.createElement("i");
        dom.setAttribute(el7, "class", "large hide icon");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "class", "columns-order");
        dom.setAttribute(el6, "style", "cursor:default");
        var el7 = dom.createElement("i");
        dom.setAttribute(el7, "class", "large sort icon");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "style", "cursor:default");
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "class", "sort-direction");
        dom.setAttribute(el6, "style", "cursor:default");
        var el7 = dom.createElement("nobr");
        var el8 = dom.createElement("i");
        dom.setAttribute(el8, "class", "large sort content ascending icon");
        dom.appendChild(el7, el8);
        var el8 = dom.createElement("i");
        dom.setAttribute(el8, "class", "large sort content descending icon");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "class", "sort-priority");
        dom.setAttribute(el6, "style", "cursor:default");
        var el7 = dom.createElement("i");
        dom.setAttribute(el7, "class", "large ordered list icon");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "class", "column-width");
        dom.setAttribute(el6, "style", "cursor:default");
        var el7 = dom.createElement("i");
        dom.setAttribute(el7, "class", "large text width icon");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("tbody");
        dom.setAttribute(el4, "id", "colsConfigtableRows");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("        ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("tfoot");
        dom.setAttribute(el4, "class", "full-width");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("          ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("tr");
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "colspan", "5");
        dom.setAttribute(el6, "style", "text-align:right");
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        var el7 = dom.createTextNode("\n              ");
        dom.appendChild(el6, el7);
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("tr");
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "colspan", "5");
        dom.setAttribute(el6, "style", "text-align:right");
        var el7 = dom.createComment("");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("th");
        var el7 = dom.createTextNode("\n              ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("div");
        dom.setAttribute(el7, "class", "ui input");
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        var el8 = dom.createElement("input");
        dom.setAttribute(el8, "id", "perPageValueInput");
        dom.setAttribute(el8, "size", "2");
        dom.setAttribute(el8, "class", "perPage");
        dom.setAttribute(el8, "type", "input");
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n                ");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("tr");
        var el6 = dom.createElement("th");
        dom.setAttribute(el6, "colspan", "6");
        var el7 = dom.createTextNode("\n              ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("div");
        dom.setAttribute(el7, "class", "ui action input");
        var el8 = dom.createTextNode("\n                ");
        dom.appendChild(el7, el8);
        var el8 = dom.createElement("input");
        dom.setAttribute(el8, "id", "columnConfigurtionSettingName");
        dom.setAttribute(el8, "type", "input");
        dom.setAttribute(el8, "name", "configName");
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n                ");
        dom.appendChild(el7, el8);
        var el8 = dom.createElement("div");
        dom.setAttribute(el8, "id", "columnConfigurtionButtonSave");
        dom.setAttribute(el8, "class", "ui small button disabled");
        var el9 = dom.createTextNode("\n                  ");
        dom.appendChild(el8, el9);
        var el9 = dom.createComment("");
        dom.appendChild(el8, el9);
        var el9 = dom.createTextNode("\n                ");
        dom.appendChild(el8, el9);
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n                ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("div");
        dom.setAttribute(el7, "id", "columnConfigurtionButtonUse");
        dom.setAttribute(el7, "class", "ui right floated button");
        var el8 = dom.createComment("");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n      ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n      ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("a");
        dom.setAttribute(el3, "class", "hidden download-anchor");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element17 = dom.childAt(fragment, [0]);
        var element18 = dom.childAt(element17, [1]);
        var element19 = dom.childAt(element18, [1]);
        var element20 = dom.childAt(element19, [0, 0]);
        var element21 = dom.childAt(element20, [0]);
        var element22 = dom.childAt(element20, [1, 0]);
        var element23 = dom.childAt(element20, [2]);
        var element24 = dom.childAt(element20, [3]);
        var element25 = dom.childAt(element20, [4]);
        var element26 = dom.childAt(element20, [5]);
        var element27 = dom.childAt(element19, [2]);
        var element28 = dom.childAt(element27, [3]);
        var element29 = dom.childAt(element27, [4]);
        var element30 = dom.childAt(element29, [1, 1, 1]);
        var element31 = dom.childAt(element27, [5, 0]);
        var element32 = dom.childAt(element31, [1]);
        var element33 = dom.childAt(element32, [1]);
        var element34 = dom.childAt(element32, [3]);
        var element35 = dom.childAt(element31, [3]);
        var morphs = new Array(25);
        morphs[0] = dom.createAttrMorph(element17, 'class');
        morphs[1] = dom.createAttrMorph(element21, 'title');
        morphs[2] = dom.createAttrMorph(element22, 'title');
        morphs[3] = dom.createAttrMorph(element23, 'title');
        morphs[4] = dom.createMorphAt(element23, 0, 0);
        morphs[5] = dom.createAttrMorph(element24, 'title');
        morphs[6] = dom.createAttrMorph(element25, 'title');
        morphs[7] = dom.createAttrMorph(element26, 'title');
        morphs[8] = dom.createMorphAt(dom.childAt(element19, [1]), 1, 1);
        morphs[9] = dom.createMorphAt(element27, 1, 1);
        morphs[10] = dom.createAttrMorph(element28, 'class');
        morphs[11] = dom.createMorphAt(dom.childAt(element28, [0]), 0, 0);
        morphs[12] = dom.createMorphAt(dom.childAt(element28, [1]), 1, 1);
        morphs[13] = dom.createAttrMorph(element29, 'class');
        morphs[14] = dom.createMorphAt(dom.childAt(element29, [0]), 0, 0);
        morphs[15] = dom.createAttrMorph(element30, 'value');
        morphs[16] = dom.createElementMorph(element30);
        morphs[17] = dom.createAttrMorph(element33, 'placeholder');
        morphs[18] = dom.createAttrMorph(element33, 'value');
        morphs[19] = dom.createElementMorph(element33);
        morphs[20] = dom.createElementMorph(element34);
        morphs[21] = dom.createMorphAt(element34, 1, 1);
        morphs[22] = dom.createElementMorph(element35);
        morphs[23] = dom.createMorphAt(element35, 0, 0);
        morphs[24] = dom.createMorphAt(element18, 3, 3);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["ui form ", ["get", "objectlistviewEventsService.loadingState", ["loc", [null, [1, 22], [1, 62]]]]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["components.colsconfig-dialog-content.dont-show-columns"], [], ["loc", [null, [6, 43], [6, 105]]]]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["components.colsconfig-dialog-content.columns-order"], [], ["loc", [null, [7, 94], [7, 152]]]]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["components.colsconfig-dialog-content.column-name"], [], ["loc", [null, [8, 22], [8, 78]]]]]]], ["inline", "t", ["components.colsconfig-dialog-content.column-name"], [], ["loc", [null, [8, 103], [8, 159]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["components.colsconfig-dialog-content.sort-direction"], [], ["loc", [null, [9, 45], [9, 104]]]]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["components.colsconfig-dialog-content.sort-priority"], [], ["loc", [null, [10, 44], [10, 102]]]]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["components.colsconfig-dialog-content.column-width"], [], ["loc", [null, [11, 43], [11, 100]]]]]]], ["block", "each", [["get", "modelForDOM", ["loc", [null, [15, 8], [15, 19]]]]], [], 0, null, ["loc", [null, [15, 0], [47, 9]]]], ["block", "if", [["get", "exportParams.isExportExcel", ["loc", [null, [50, 16], [50, 42]]]]], [], 1, null, ["loc", [null, [50, 10], [65, 17]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "exportParams.isExportExcel", ["loc", [null, [66, 26], [66, 52]]]], "hidden", ""], [], ["loc", [null, [66, 21], [66, 66]]]]]]], ["inline", "t", ["components.colsconfig-dialog-content.col-width-on"], [], ["loc", [null, [67, 52], [67, 109]]]], ["inline", "flexberry-checkbox", [], ["class", "toggle", "value", ["subexpr", "@mut", [["get", "saveColWidthState", ["loc", [null, [71, 22], [71, 39]]]]], [], []]], ["loc", [null, [69, 14], [72, 16]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "exportParams.isExportExcel", ["loc", [null, [75, 27], [75, 53]]]], "hidden", ""], [], ["loc", [null, [75, 22], [75, 67]]]]]]], ["inline", "t", ["components.colsconfig-dialog-content.per-page"], [], ["loc", [null, [76, 52], [76, 105]]]], ["attribute", "value", ["concat", [["get", "perPageValue", ["loc", [null, [79, 78], [79, 90]]]]]]], ["element", "action", ["perPageChanged"], ["on", "focusOut"], ["loc", [null, [79, 107], [79, 149]]]], ["attribute", "placeholder", ["concat", [["subexpr", "t", ["components.colsconfig-dialog-content.enter-setting-name"], [], ["loc", [null, [88, 31], [88, 94]]]]]]], ["attribute", "value", ["concat", [["get", "settingName", ["loc", [null, [88, 105], [88, 116]]]]]]], ["element", "action", ["setConfigName", ["get", "n", ["loc", [null, [89, 43], [89, 44]]]]], ["on", "change"], ["loc", [null, [89, 18], [89, 58]]]], ["element", "action", ["saveColsSetting"], [], ["loc", [null, [90, 88], [90, 116]]]], ["inline", "t", ["components.colsconfig-dialog-content.save"], [], ["loc", [null, [91, 18], [91, 67]]]], ["element", "action", ["apply"], [], ["loc", [null, [94, 86], [94, 104]]]], ["inline", "if", [["get", "exportParams.isExportExcel", ["loc", [null, [94, 110], [94, 136]]]], ["subexpr", "t", ["components.colsconfig-dialog-content.export"], [], ["loc", [null, [94, 137], [94, 186]]]], ["subexpr", "t", ["components.colsconfig-dialog-content.use"], [], ["loc", [null, [94, 187], [94, 233]]]]], [], ["loc", [null, [94, 105], [94, 235]]]], ["inline", "ui-message", [], ["type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [100, 13], [100, 17]]]]], [], []], "closeable", ["subexpr", "@mut", [["get", "closeable", ["loc", [null, [101, 18], [101, 27]]]]], [], []], "visible", ["subexpr", "@mut", [["get", "visible", ["loc", [null, [102, 16], [102, 23]]]]], [], []], "caption", ["subexpr", "@mut", [["get", "caption", ["loc", [null, [103, 16], [103, 23]]]]], [], []], "message", ["subexpr", "@mut", [["get", "message", ["loc", [null, [104, 16], [104, 23]]]]], [], []]], ["loc", [null, [99, 6], [105, 8]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/ember-jstree", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 9
          }
        },
        "moduleName": "dummy/templates/components/ember-jstree.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/fd-editform-control", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/fd-editform-control.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("label");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          return morphs;
        },
        statements: [["content", "control.caption", ["loc", [null, [4, 9], [4, 28]]]], ["inline", "component", [["get", "_componentName", ["loc", [null, [5, 14], [5, 28]]]]], ["items", ["subexpr", "@mut", [["get", "_componentProperties.items", ["loc", [null, [6, 10], [6, 36]]]]], [], []], "types", ["subexpr", "@mut", [["get", "_componentProperties.types", ["loc", [null, [7, 10], [7, 36]]]]], [], []], "view", ["subexpr", "@mut", [["get", "_componentProperties.view", ["loc", [null, [8, 9], [8, 34]]]]], [], []], "showLookupAction", ["subexpr", "@mut", [["get", "showLookupAction", ["loc", [null, [9, 21], [9, 37]]]]], [], []], "caption", ["subexpr", "@mut", [["get", "control.caption", ["loc", [null, [10, 12], [10, 27]]]]], [], []]], ["loc", [null, [5, 2], [11, 4]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 14,
                    "column": 4
                  },
                  "end": {
                    "line": 25,
                    "column": 4
                  }
                },
                "moduleName": "dummy/templates/components/fd-editform-control.hbs"
              },
              isEmpty: false,
              arity: 1,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("      ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "fd-editform-row", [], ["row", ["subexpr", "@mut", [["get", "row", ["loc", [null, [16, 12], [16, 15]]]]], [], []], "selectedItem", ["subexpr", "@mut", [["get", "selectedItem", ["loc", [null, [17, 21], [17, 33]]]]], [], []], "selectItemAction", ["subexpr", "@mut", [["get", "selectItemAction", ["loc", [null, [18, 25], [18, 41]]]]], [], []], "setDragItemAction", ["subexpr", "@mut", [["get", "setDragItemAction", ["loc", [null, [19, 26], [19, 43]]]]], [], []], "getDragItemAction", ["subexpr", "@mut", [["get", "getDragItemAction", ["loc", [null, [20, 26], [20, 43]]]]], [], []], "moveDragItemAction", ["subexpr", "@mut", [["get", "moveDragItemAction", ["loc", [null, [21, 27], [21, 45]]]]], [], []], "getComponentPropertiesAction", ["subexpr", "@mut", [["get", "getComponentPropertiesAction", ["loc", [null, [22, 37], [22, 65]]]]], [], []], "showLookupAction", ["subexpr", "@mut", [["get", "showLookupAction", ["loc", [null, [23, 25], [23, 41]]]]], [], []]], ["loc", [null, [15, 6], [24, 8]]]]],
              locals: ["row"],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 13,
                  "column": 2
                },
                "end": {
                  "line": 26,
                  "column": 2
                }
              },
              "moduleName": "dummy/templates/components/fd-editform-control.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "each", [["get", "control.rows", ["loc", [null, [14, 12], [14, 24]]]]], [], 0, null, ["loc", [null, [14, 4], [25, 13]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 12,
                "column": 0
              },
              "end": {
                "line": 27,
                "column": 0
              }
            },
            "moduleName": "dummy/templates/components/fd-editform-control.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "flexberry-toggler", [], ["caption", ["subexpr", "@mut", [["get", "control.caption", ["loc", [null, [13, 31], [13, 46]]]]], [], []], "expanded", true], 0, null, ["loc", [null, [13, 2], [26, 24]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 29,
                    "column": 4
                  },
                  "end": {
                    "line": 31,
                    "column": 4
                  }
                },
                "moduleName": "dummy/templates/components/fd-editform-control.hbs"
              },
              isEmpty: false,
              arity: 2,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("      ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("a");
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element1 = dom.childAt(fragment, [1]);
                var morphs = new Array(3);
                morphs[0] = dom.createAttrMorph(element1, 'class');
                morphs[1] = dom.createElementMorph(element1);
                morphs[2] = dom.createMorphAt(element1, 0, 0);
                return morphs;
              },
              statements: [["attribute", "class", ["concat", ["item ", ["subexpr", "if", [["subexpr", "eq", [["get", "tab", ["loc", [null, [30, 30], [30, 33]]]], ["get", "selectedItem", ["loc", [null, [30, 34], [30, 46]]]]], [], ["loc", [null, [30, 26], [30, 47]]]], "selected"], [], ["loc", [null, [30, 21], [30, 60]]]], " ", ["subexpr", "if", [["subexpr", "eq", [["get", "tab", ["loc", [null, [30, 70], [30, 73]]]], ["get", "activeTab", ["loc", [null, [30, 74], [30, 83]]]]], [], ["loc", [null, [30, 66], [30, 84]]]], "active"], [], ["loc", [null, [30, 61], [30, 95]]]]]]], ["element", "action", ["changeTab", ["get", "tab", ["loc", [null, [30, 118], [30, 121]]]]], ["bubbles", false], ["loc", [null, [30, 97], [30, 137]]]], ["content", "tab.caption", ["loc", [null, [30, 138], [30, 153]]]]],
              locals: ["tab", "index"],
              templates: []
            };
          })();
          var child1 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 35,
                      "column": 6
                    },
                    "end": {
                      "line": 46,
                      "column": 6
                    }
                  },
                  "moduleName": "dummy/templates/components/fd-editform-control.hbs"
                },
                isEmpty: false,
                arity: 1,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("        ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "fd-editform-row", [], ["row", ["subexpr", "@mut", [["get", "row", ["loc", [null, [37, 14], [37, 17]]]]], [], []], "selectedItem", ["subexpr", "@mut", [["get", "selectedItem", ["loc", [null, [38, 23], [38, 35]]]]], [], []], "selectItemAction", ["subexpr", "@mut", [["get", "selectItemAction", ["loc", [null, [39, 27], [39, 43]]]]], [], []], "setDragItemAction", ["subexpr", "@mut", [["get", "setDragItemAction", ["loc", [null, [40, 28], [40, 45]]]]], [], []], "getDragItemAction", ["subexpr", "@mut", [["get", "getDragItemAction", ["loc", [null, [41, 28], [41, 45]]]]], [], []], "moveDragItemAction", ["subexpr", "@mut", [["get", "moveDragItemAction", ["loc", [null, [42, 29], [42, 47]]]]], [], []], "getComponentPropertiesAction", ["subexpr", "@mut", [["get", "getComponentPropertiesAction", ["loc", [null, [43, 39], [43, 67]]]]], [], []], "showLookupAction", ["subexpr", "@mut", [["get", "showLookupAction", ["loc", [null, [44, 27], [44, 43]]]]], [], []]], ["loc", [null, [36, 8], [45, 10]]]]],
                locals: ["row"],
                templates: []
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 33,
                    "column": 2
                  },
                  "end": {
                    "line": 48,
                    "column": 2
                  }
                },
                "moduleName": "dummy/templates/components/fd-editform-control.hbs"
              },
              isEmpty: false,
              arity: 2,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("    ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                var el2 = dom.createTextNode("\n");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("    ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element0 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createAttrMorph(element0, 'class');
                morphs[1] = dom.createMorphAt(element0, 1, 1);
                return morphs;
              },
              statements: [["attribute", "class", ["concat", ["ui bottom attached tab segment ", ["subexpr", "if", [["subexpr", "eq", [["get", "tab", ["loc", [null, [34, 56], [34, 59]]]], ["get", "selectedItem", ["loc", [null, [34, 60], [34, 72]]]]], [], ["loc", [null, [34, 52], [34, 73]]]], "selected"], [], ["loc", [null, [34, 47], [34, 86]]]], " ", ["subexpr", "if", [["subexpr", "eq", [["get", "tab", ["loc", [null, [34, 96], [34, 99]]]], ["get", "activeTab", ["loc", [null, [34, 100], [34, 109]]]]], [], ["loc", [null, [34, 92], [34, 110]]]], "active"], [], ["loc", [null, [34, 87], [34, 121]]]]]]], ["block", "each", [["get", "tab.rows", ["loc", [null, [35, 14], [35, 22]]]]], [], 0, null, ["loc", [null, [35, 6], [46, 15]]]]],
              locals: ["tab", "index"],
              templates: [child0]
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 27,
                  "column": 0
                },
                "end": {
                  "line": 49,
                  "column": 0
                }
              },
              "moduleName": "dummy/templates/components/fd-editform-control.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("  ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui top attached tabular menu");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("  ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "each", [["get", "control.tabs", ["loc", [null, [29, 12], [29, 24]]]]], [], 0, null, ["loc", [null, [29, 4], [31, 13]]]], ["block", "each", [["get", "control.tabs", ["loc", [null, [33, 10], [33, 22]]]]], [], 1, null, ["loc", [null, [33, 2], [48, 11]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 0
              },
              "end": {
                "line": 49,
                "column": 0
              }
            },
            "moduleName": "dummy/templates/components/fd-editform-control.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "_isTab", ["loc", [null, [27, 10], [27, 16]]]]], [], 0, null, ["loc", [null, [27, 0], [49, 0]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 0
            },
            "end": {
              "line": 49,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/fd-editform-control.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "_isGroup", ["loc", [null, [12, 10], [12, 18]]]]], [], 0, 1, ["loc", [null, [12, 0], [49, 0]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 49,
            "column": 7
          }
        },
        "moduleName": "dummy/templates/components/fd-editform-control.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "ui inverted simple dimmer");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "drag-anchor");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var morphs = new Array(3);
        morphs[0] = dom.createElementMorph(element2);
        morphs[1] = dom.createElementMorph(element2);
        morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["element", "action", [["get", "set", ["loc", [null, [2, 34], [2, 37]]]], "draggable", true], ["on", "mouseEnter"], ["loc", [null, [2, 25], [2, 72]]]], ["element", "action", [["get", "set", ["loc", [null, [2, 82], [2, 85]]]], "draggable", false], ["on", "mouseLeave"], ["loc", [null, [2, 73], [2, 121]]]], ["block", "if", [["get", "_isControl", ["loc", [null, [3, 6], [3, 16]]]]], [], 0, 1, ["loc", [null, [3, 0], [49, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/fd-editform-row", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 14,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/fd-editform-row.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "fd-editform-control", [], ["control", ["subexpr", "@mut", [["get", "control", ["loc", [null, [5, 12], [5, 19]]]]], [], []], "selectedItem", ["subexpr", "@mut", [["get", "selectedItem", ["loc", [null, [6, 17], [6, 29]]]]], [], []], "selectItemAction", ["subexpr", "@mut", [["get", "selectItemAction", ["loc", [null, [7, 21], [7, 37]]]]], [], []], "setDragItemAction", ["subexpr", "@mut", [["get", "setDragItemAction", ["loc", [null, [8, 22], [8, 39]]]]], [], []], "getDragItemAction", ["subexpr", "@mut", [["get", "getDragItemAction", ["loc", [null, [9, 22], [9, 39]]]]], [], []], "moveDragItemAction", ["subexpr", "@mut", [["get", "moveDragItemAction", ["loc", [null, [10, 23], [10, 41]]]]], [], []], "getComponentPropertiesAction", ["subexpr", "@mut", [["get", "getComponentPropertiesAction", ["loc", [null, [11, 33], [11, 61]]]]], [], []], "showLookupAction", ["subexpr", "@mut", [["get", "showLookupAction", ["loc", [null, [12, 21], [12, 37]]]]], [], []]], ["loc", [null, [4, 2], [13, 4]]]]],
        locals: ["control"],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 9
          }
        },
        "moduleName": "dummy/templates/components/fd-editform-row.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "ui inverted simple dimmer");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "drag-anchor");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [2]);
        var morphs = new Array(3);
        morphs[0] = dom.createElementMorph(element0);
        morphs[1] = dom.createElementMorph(element0);
        morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["element", "action", [["get", "set", ["loc", [null, [2, 34], [2, 37]]]], "draggable", true], ["on", "mouseEnter"], ["loc", [null, [2, 25], [2, 72]]]], ["element", "action", [["get", "set", ["loc", [null, [2, 82], [2, 85]]]], "draggable", false], ["on", "mouseLeave"], ["loc", [null, [2, 73], [2, 121]]]], ["block", "each", [["get", "row.controls", ["loc", [null, [3, 8], [3, 20]]]]], [], 0, null, ["loc", [null, [3, 0], [14, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/fd-file", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 15,
            "column": 6
          }
        },
        "moduleName": "dummy/templates/components/fd-file.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "ui action input");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("input");
        dom.setAttribute(el2, "type", "text");
        dom.setAttribute(el2, "readonly", "");
        dom.setAttribute(el2, "class", "flexberry-file-filename-input");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("label");
        dom.setAttribute(el2, "class", "flexberry-file-add-button ui icon button");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("i");
        dom.setAttribute(el3, "class", "add outline square icon");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("label");
        dom.setAttribute(el2, "class", "flexberry-file-remove-button ui icon disabled button");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("i");
        dom.setAttribute(el3, "class", "trash outline icon");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("label");
        dom.setAttribute(el2, "class", "flexberry-file-upload-button ui icon disabled button");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("i");
        dom.setAttribute(el3, "class", "upload outline icon");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("label");
        dom.setAttribute(el2, "class", "flexberry-file-download-button ui icon disabled button");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("i");
        dom.setAttribute(el3, "class", "download outline icon");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(element0, [3]);
        var element3 = dom.childAt(element0, [5]);
        var element4 = dom.childAt(element0, [7]);
        var element5 = dom.childAt(element0, [9]);
        var morphs = new Array(5);
        morphs[0] = dom.createAttrMorph(element1, 'placeholder');
        morphs[1] = dom.createAttrMorph(element2, 'title');
        morphs[2] = dom.createAttrMorph(element3, 'title');
        morphs[3] = dom.createAttrMorph(element4, 'title');
        morphs[4] = dom.createAttrMorph(element5, 'title');
        return morphs;
      },
      statements: [["attribute", "placeholder", ["subexpr", "t", ["components.flexberry-file.placeholder"], [], ["loc", [null, [2, 80], [2, 125]]]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.add-button-title"], [], ["loc", [null, [3, 64], [3, 114]]]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.remove-button-title"], [], ["loc", [null, [6, 76], [6, 129]]]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.upload-button-title"], [], ["loc", [null, [9, 76], [9, 129]]]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.download-button-title"], [], ["loc", [null, [12, 78], [12, 133]]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/fd-groupedit", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 2
          }
        },
        "moduleName": "dummy/templates/components/fd-groupedit.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("button");
        dom.setAttribute(el1, "type", "button");
        dom.setAttribute(el1, "class", "ui ui-add button");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("i");
        dom.setAttribute(el2, "class", "plus icon");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("button");
        dom.setAttribute(el1, "type", "button");
        dom.setAttribute(el1, "class", "ui ui-delete button");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("i");
        dom.setAttribute(el2, "class", "minus icon");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(fragment, [2]);
        var morphs = new Array(3);
        morphs[0] = dom.createAttrMorph(element0, 'title');
        morphs[1] = dom.createAttrMorph(element1, 'title');
        morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["attribute", "title", ["subexpr", "t", ["components.groupedit-toolbar.add-button-text"], [], ["loc", [null, [1, 53], [1, 105]]]]], ["attribute", "title", ["subexpr", "t", ["components.groupedit-toolbar.delete-button-text"], [], ["loc", [null, [4, 56], [4, 111]]]]], ["inline", "fd-object-list-view", [], ["headers", ["subexpr", "@mut", [["get", "_headers", ["loc", [null, [8, 10], [8, 18]]]]], [], []], "rows", ["subexpr", "@mut", [["get", "_rows", ["loc", [null, [9, 7], [9, 12]]]]], [], []]], ["loc", [null, [7, 0], [10, 2]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/fd-lookup", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 6
          }
        },
        "moduleName": "dummy/templates/components/fd-lookup.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "ui fluid action input");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("input");
        dom.setAttribute(el2, "type", "text");
        dom.setAttribute(el2, "readonly", "");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("button");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("i");
        dom.setAttribute(el3, "class", "change icon");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("button");
        dom.setAttribute(el2, "type", "button");
        dom.setAttribute(el2, "class", "ui button ui-clear");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("i");
        dom.setAttribute(el3, "class", "remove icon");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(element0, [3]);
        var element3 = dom.childAt(element0, [5]);
        var morphs = new Array(5);
        morphs[0] = dom.createAttrMorph(element1, 'placeholder');
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createAttrMorph(element2, 'title');
        morphs[3] = dom.createElementMorph(element2);
        morphs[4] = dom.createAttrMorph(element3, 'title');
        return morphs;
      },
      statements: [["attribute", "placeholder", ["subexpr", "t", ["components.flexberry-lookup.placeholder"], [], ["loc", [null, [2, 42], [2, 89]]]]], ["attribute", "class", ["concat", ["ui button ui-change ", ["subexpr", "unless", [["get", "view", ["loc", [null, [4, 40], [4, 44]]]], "disabled"], [], ["loc", [null, [4, 31], [4, 57]]]]]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-lookup.choose-button-text"], [], ["loc", [null, [5, 10], [5, 64]]]]], ["element", "action", [["get", "showLookupAction", ["loc", [null, [6, 13], [6, 29]]]], ["get", "caption", ["loc", [null, [6, 30], [6, 37]]]], ["get", "view", ["loc", [null, [6, 38], [6, 42]]]], ["get", "types", ["loc", [null, [6, 43], [6, 48]]]]], [], ["loc", [null, [6, 4], [6, 50]]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-lookup.remove-button-text"], [], ["loc", [null, [10, 57], [10, 111]]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/fd-object-list-view", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 4
            },
            "end": {
              "line": 5,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/fd-object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "collapsing");
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "sort icon");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 4
            },
            "end": {
              "line": 8,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/fd-object-list-view.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["content", "header", ["loc", [null, [7, 10], [7, 20]]]]],
        locals: ["header"],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 14,
                "column": 6
              },
              "end": {
                "line": 16,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/fd-object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "ui checkbox");
            var el3 = dom.createElement("label");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 17,
                "column": 6
              },
              "end": {
                "line": 19,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/fd-object-list-view.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "cell", ["loc", [null, [18, 12], [18, 20]]]]],
          locals: ["cell"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 2
            },
            "end": {
              "line": 21,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/components/fd-object-list-view.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element0, 1, 1);
          morphs[1] = dom.createMorphAt(element0, 2, 2);
          return morphs;
        },
        statements: [["block", "if", [["get", "showCheckBoxInRow", ["loc", [null, [14, 12], [14, 29]]]]], [], 0, null, ["loc", [null, [14, 6], [16, 13]]]], ["block", "each", [["get", "row", ["loc", [null, [17, 14], [17, 17]]]]], [], 1, null, ["loc", [null, [17, 6], [19, 15]]]]],
        locals: ["row"],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 22,
            "column": 8
          }
        },
        "moduleName": "dummy/templates/components/fd-object-list-view.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("thead");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("tr");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("tbody");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0, 1]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(element1, 1, 1);
        morphs[1] = dom.createMorphAt(element1, 2, 2);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);
        return morphs;
      },
      statements: [["block", "if", [["get", "showCheckBoxInRow", ["loc", [null, [3, 10], [3, 27]]]]], [], 0, null, ["loc", [null, [3, 4], [5, 11]]]], ["block", "each", [["get", "headers", ["loc", [null, [6, 12], [6, 19]]]]], [], 1, null, ["loc", [null, [6, 4], [8, 13]]]], ["block", "each", [["get", "rows", ["loc", [null, [12, 10], [12, 14]]]]], [], 2, null, ["loc", [null, [12, 2], [21, 11]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define("dummy/templates/components/fd-objectlistview", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 10,
                "column": 8
              },
              "end": {
                "line": 12,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/fd-objectlistview.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            dom.setAttribute(el1, "class", "ui active button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "p", ["loc", [null, [11, 57], [11, 62]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 12,
                "column": 8
              },
              "end": {
                "line": 14,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/fd-objectlistview.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "class", "ui button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 0, 0);
            return morphs;
          },
          statements: [["element", "action", [["get", "set", ["loc", [null, [13, 45], [13, 48]]]], "page", ["get", "p", ["loc", [null, [13, 56], [13, 57]]]]], [], ["loc", [null, [13, 36], [13, 59]]]], ["content", "p", ["loc", [null, [13, 60], [13, 65]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 9,
              "column": 6
            },
            "end": {
              "line": 15,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/components/fd-objectlistview.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["subexpr", "eq", [["get", "p", ["loc", [null, [10, 18], [10, 19]]]], ["get", "page", ["loc", [null, [10, 20], [10, 24]]]]], [], ["loc", [null, [10, 14], [10, 25]]]]], [], 0, 1, ["loc", [null, [10, 8], [14, 15]]]]],
        locals: ["p"],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 6
          }
        },
        "moduleName": "dummy/templates/components/fd-objectlistview.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "ui secondary menu no-margin nav-bar");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui basic buttons");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "right menu");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "showing-entries");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [2]);
        var element2 = dom.childAt(element1, [1]);
        var element3 = dom.childAt(element2, [1]);
        var element4 = dom.childAt(element2, [5]);
        var element5 = dom.childAt(element1, [3]);
        var morphs = new Array(8);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createAttrMorph(element3, 'class');
        morphs[2] = dom.createElementMorph(element3);
        morphs[3] = dom.createMorphAt(element2, 3, 3);
        morphs[4] = dom.createAttrMorph(element4, 'class');
        morphs[5] = dom.createElementMorph(element4);
        morphs[6] = dom.createMorphAt(dom.childAt(element5, [1]), 1, 1);
        morphs[7] = dom.createMorphAt(element5, 3, 3);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "fd-object-list-view", [], ["showCheckBoxInRow", false, "headers", ["subexpr", "@mut", [["get", "_headers", ["loc", [null, [3, 10], [3, 18]]]]], [], []], "rows", ["subexpr", "@mut", [["get", "_rowsOnPage", ["loc", [null, [4, 7], [4, 18]]]]], [], []]], ["loc", [null, [1, 0], [5, 2]]]], ["attribute", "class", ["concat", ["ui ", ["subexpr", "if", [["subexpr", "eq", [["get", "page", ["loc", [null, [8, 31], [8, 35]]]], ["get", "_pages.firstObject", ["loc", [null, [8, 36], [8, 54]]]]], [], ["loc", [null, [8, 27], [8, 55]]]], "disabled"], [], ["loc", [null, [8, 22], [8, 68]]]], " button prev-page-button"]]], ["element", "action", [["get", "decrementProperty", ["loc", [null, [8, 103], [8, 120]]]], "page"], [], ["loc", [null, [8, 94], [8, 129]]]], ["block", "each", [["get", "_pages", ["loc", [null, [9, 14], [9, 20]]]]], [], 0, null, ["loc", [null, [9, 6], [15, 15]]]], ["attribute", "class", ["concat", ["ui ", ["subexpr", "if", [["subexpr", "eq", [["get", "page", ["loc", [null, [16, 31], [16, 35]]]], ["get", "_pages.lastObject", ["loc", [null, [16, 36], [16, 53]]]]], [], ["loc", [null, [16, 27], [16, 54]]]], "disabled"], [], ["loc", [null, [16, 22], [16, 67]]]], " button next-page-button"]]], ["element", "action", [["get", "incrementProperty", ["loc", [null, [16, 102], [16, 119]]]], "page"], [], ["loc", [null, [16, 93], [16, 128]]]], ["inline", "concat", [["subexpr", "t", ["components.flexberry-objectlistview.showing-entries.showing"], [], ["loc", [null, [21, 8], [21, 73]]]], ["get", "perPage", ["loc", [null, [22, 8], [22, 15]]]], ["subexpr", "t", ["components.flexberry-objectlistview.showing-entries.of"], [], ["loc", [null, [23, 8], [23, 68]]]], ["get", "rowsCount", ["loc", [null, [24, 8], [24, 17]]]], ["subexpr", "t", ["components.flexberry-objectlistview.showing-entries.entries"], [], ["loc", [null, [25, 8], [25, 73]]]]], [], ["loc", [null, [20, 6], [26, 8]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "array", [5, 10, 20, 50], [], ["loc", [null, [29, 12], [29, 30]]]], "value", ["subexpr", "@mut", [["get", "perPage", ["loc", [null, [30, 12], [30, 19]]]]], [], []], "onChange", ["subexpr", "action", [["get", "set", ["loc", [null, [31, 23], [31, 26]]]], "page", 1], [], ["loc", [null, [31, 15], [31, 36]]]], "class", "compact selection", "direction", "upward"], ["loc", [null, [28, 4], [34, 6]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/fd-uml-diagram", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 9
          }
        },
        "moduleName": "dummy/templates/components/fd-uml-diagram.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/fd-visual-edit-control", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["multiple-nodes"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 26,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/fd-visual-edit-control.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [1]);
          var element3 = dom.childAt(fragment, [3]);
          var element4 = dom.childAt(fragment, [5]);
          var morphs = new Array(6);
          morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
          morphs[1] = dom.createMorphAt(element2, 3, 3);
          morphs[2] = dom.createMorphAt(dom.childAt(element3, [1]), 0, 0);
          morphs[3] = dom.createMorphAt(element3, 3, 3);
          morphs[4] = dom.createMorphAt(dom.childAt(element4, [1]), 0, 0);
          morphs[5] = dom.createMorphAt(element4, 3, 3);
          return morphs;
        },
        statements: [["inline", "t", ["components.fd-visual-control.name"], [], ["loc", [null, [3, 11], [3, 52]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "selectedControl.caption", ["loc", [null, [5, 12], [5, 35]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "_readonly", ["loc", [null, [6, 15], [6, 24]]]]], [], []]], ["loc", [null, [4, 4], [7, 6]]]], ["inline", "t", ["components.fd-visual-control.type"], [], ["loc", [null, [10, 11], [10, 52]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "@mut", [["get", "typesAsStrings", ["loc", [null, [12, 12], [12, 26]]]]], [], []], "value", ["subexpr", "@mut", [["get", "selectedType", ["loc", [null, [13, 12], [13, 24]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "_readonly", ["loc", [null, [14, 15], [14, 24]]]]], [], []], "onChange", ["subexpr", "action", ["onDropDownSelectionChanged"], [], ["loc", [null, [15, 15], [15, 52]]]]], ["loc", [null, [11, 4], [16, 6]]]], ["inline", "t", ["components.fd-visual-control.isNull"], [], ["loc", [null, [19, 11], [19, 54]]]], ["inline", "flexberry-checkbox", [], ["class", "fluid", "value", ["subexpr", "@mut", [["get", "allowNull", ["loc", [null, [22, 12], [22, 21]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "_readonly", ["loc", [null, [23, 15], [23, 24]]]]], [], []]], ["loc", [null, [20, 4], [24, 6]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 26,
                "column": 0
              },
              "end": {
                "line": 31,
                "column": 0
              }
            },
            "moduleName": "dummy/templates/components/fd-visual-edit-control.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("  ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "field");
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("label");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n  ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 0, 0);
            morphs[1] = dom.createMorphAt(element1, 3, 3);
            return morphs;
          },
          statements: [["inline", "t", ["forms.fd-editform-constructor.form-config-panel.group-caption"], [], ["loc", [null, [28, 11], [28, 80]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "selectedControl.caption", ["loc", [null, [29, 30], [29, 53]]]]], [], []]], ["loc", [null, [29, 4], [29, 55]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 31,
                  "column": 0
                },
                "end": {
                  "line": 36,
                  "column": 0
                }
              },
              "moduleName": "dummy/templates/components/fd-visual-edit-control.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("  ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n    ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("label");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n    ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n  ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
              morphs[1] = dom.createMorphAt(element0, 3, 3);
              return morphs;
            },
            statements: [["inline", "t", ["forms.fd-editform-constructor.form-config-panel.tab-caption"], [], ["loc", [null, [33, 11], [33, 78]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "selectedControl.caption", ["loc", [null, [34, 30], [34, 53]]]]], [], []]], ["loc", [null, [34, 4], [34, 55]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 36,
                  "column": 0
                },
                "end": {
                  "line": 40,
                  "column": 0
                }
              },
              "moduleName": "dummy/templates/components/fd-visual-edit-control.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("  ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n    ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("label");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n  ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]), 0, 0);
              return morphs;
            },
            statements: [["inline", "t", ["forms.fd-editform-constructor.form-config-panel.control-not-selected"], [], ["loc", [null, [38, 11], [38, 87]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 31,
                "column": 0
              },
              "end": {
                "line": 40,
                "column": 0
              }
            },
            "moduleName": "dummy/templates/components/fd-visual-edit-control.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "_selectedIsTab", ["loc", [null, [31, 10], [31, 24]]]]], [], 0, 1, ["loc", [null, [31, 0], [40, 0]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 26,
              "column": 0
            },
            "end": {
              "line": 40,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/fd-visual-edit-control.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "_selectedIsGroup", ["loc", [null, [26, 10], [26, 26]]]]], [], 0, 1, ["loc", [null, [26, 0], [40, 0]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 7
          }
        },
        "moduleName": "dummy/templates/components/fd-visual-edit-control.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "_selectedIsControl", ["loc", [null, [1, 6], [1, 24]]]]], [], 0, 1, ["loc", [null, [1, 0], [40, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/fd-visual-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 24,
              "column": 8
            },
            "end": {
              "line": 32,
              "column": 8
            }
          },
          "moduleName": "dummy/templates/components/fd-visual-edit-form.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          var el2 = dom.createTextNode("\n            ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n            ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createAttrMorph(element0, 'onclick');
          morphs[2] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
          morphs[3] = dom.createMorphAt(element0, 3, 3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["field control-field ", ["subexpr", "if", [["get", "control.isSelected", ["loc", [null, [25, 47], [25, 65]]]], "selected-field"], [], ["loc", [null, [25, 42], [25, 84]]]]]]], ["attribute", "onclick", ["subexpr", "action", ["controlClick", ["get", "control", ["loc", [null, [25, 118], [25, 125]]]]], [], ["loc", [null, [25, 94], [25, 128]]]]], ["content", "control.name", ["loc", [null, [26, 19], [26, 35]]]], ["inline", "component", [["get", "control.controlType", ["loc", [null, [27, 24], [27, 43]]]]], ["value", ["subexpr", "@mut", [["get", "control.value", ["loc", [null, [28, 20], [28, 33]]]]], [], []], "readonly", true], ["loc", [null, [27, 12], [30, 14]]]]],
        locals: ["control"],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/fd-visual-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "ui grid row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field eight wide column");
        var el3 = dom.createTextNode("\n      ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n      ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "ui segment grid");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "ten wide column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "field");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "class", "ui ui-add button");
        dom.setAttribute(el5, "title", "Добавить");
        var el6 = dom.createTextNode("\n            ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "plus icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "class", "ui ui-delete button");
        dom.setAttribute(el5, "title", "Удалить");
        var el6 = dom.createTextNode("\n            ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "minus icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "six wide column");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui segment");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [0, 1]);
        var element2 = dom.childAt(fragment, [2, 1]);
        var element3 = dom.childAt(element2, [1]);
        var element4 = dom.childAt(element3, [1]);
        var element5 = dom.childAt(element4, [1]);
        var element6 = dom.childAt(element4, [3]);
        var morphs = new Array(6);
        morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 0, 0);
        morphs[1] = dom.createMorphAt(element1, 3, 3);
        morphs[2] = dom.createElementMorph(element5);
        morphs[3] = dom.createElementMorph(element6);
        morphs[4] = dom.createMorphAt(element3, 3, 3);
        morphs[5] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-visual-edit-form.name"], [], ["loc", [null, [3, 13], [3, 51]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [5, 14], [5, 24]]]]], [], []]], ["loc", [null, [4, 6], [6, 8]]]], ["element", "action", ["addControl"], [], ["loc", [null, [13, 16], [13, 39]]]], ["element", "action", ["deleteControl"], [], ["loc", [null, [18, 16], [18, 42]]]], ["block", "each", [["get", "controls", ["loc", [null, [24, 16], [24, 24]]]]], [], 0, null, ["loc", [null, [24, 8], [32, 17]]]], ["inline", "fd-visual-edit-control", [], ["model", ["subexpr", "@mut", [["get", "selectedControl", ["loc", [null, [36, 39], [36, 54]]]]], [], []], "controls", ["subexpr", "@mut", [["get", "model.controls", ["loc", [null, [36, 64], [36, 78]]]]], [], []]], ["loc", [null, [36, 8], [36, 80]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-button", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "triple-curlies"
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-button.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["get", "iconClass", ["loc", [null, [2, 14], [2, 23]]]]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-button.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "caption", ["loc", [null, [5, 2], [5, 13]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-button.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "_hasIcon", ["loc", [null, [1, 6], [1, 14]]]]], [], 0, null, ["loc", [null, [1, 0], [3, 7]]]], ["block", "if", [["get", "_hasCaption", ["loc", [null, [4, 6], [4, 17]]]]], [], 1, null, ["loc", [null, [4, 0], [6, 7]]]], ["content", "yield", ["loc", [null, [7, 0], [7, 9]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/flexberry-checkbox", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-checkbox.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("input");
        dom.setAttribute(el1, "type", "checkbox");
        dom.setAttribute(el1, "class", "flexberry-checkbox-input");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("label");
        dom.setAttribute(el1, "class", "flexberry-checkbox-label");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        if (this.cachedFragment) {
          dom.repairClonedNode(dom.childAt(fragment, [0]), [], true);
        }
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createAttrMorph(element0, 'checked');
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        return morphs;
      },
      statements: [["attribute", "checked", ["subexpr", "get", [["get", "this", ["loc", [null, [1, 70], [1, 74]]]], "value"], [], ["loc", [null, [1, 64], [1, 84]]]]], ["content", "label", ["loc", [null, [2, 40], [2, 49]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-colorpicker", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 11,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-colorpicker.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "input", [], ["class", ["subexpr", "@mut", [["get", "flexberryClassNames.input", ["loc", [null, [7, 8], [7, 33]]]]], [], []], "type", "hidden", "value", ["subexpr", "get", [["get", "this", ["loc", [null, [9, 13], [9, 17]]]], "value"], [], ["loc", [null, [9, 8], [9, 26]]]]], ["loc", [null, [6, 0], [10, 2]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-datepicker", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-datepicker.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("i");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [2]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createAttrMorph(element0, 'class');
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "input", [], ["type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [2, 7], [2, 11]]]]], [], []], "class", ["subexpr", "@mut", [["get", "classes", ["loc", [null, [3, 8], [3, 15]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [4, 11], [4, 19]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [5, 11], [5, 19]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [6, 14], [6, 25]]]]], [], []]], ["loc", [null, [1, 0], [7, 2]]]], ["attribute", "class", ["concat", ["calendar ", ["subexpr", "unless", [["get", "readonly", ["loc", [null, [8, 28], [8, 36]]]], "link"], [], ["loc", [null, [8, 19], [8, 45]]]], " icon"]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-ddau-checkbox", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-ddau-checkbox.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("label");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [2]);
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createAttrMorph(element0, 'class');
        morphs[2] = dom.createMorphAt(element0, 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "input", [], ["class", ["subexpr", "@mut", [["get", "flexberryClassNames.checkboxInput", ["loc", [null, [7, 8], [7, 41]]]]], [], []], "type", "checkbox", "checked", ["subexpr", "get", [["get", "this", ["loc", [null, [9, 15], [9, 19]]]], "value"], [], ["loc", [null, [9, 10], [9, 28]]]]], ["loc", [null, [6, 0], [10, 2]]]], ["attribute", "class", ["get", "flexberryClassNames.checkboxCaption", ["loc", [null, [11, 15], [11, 50]]]]], ["content", "caption", ["loc", [null, [12, 2], [12, 13]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-ddau-slider", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-ddau-slider.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "ui-slider", [], ["value", ["subexpr", "get", [["get", "this", ["loc", [null, [7, 13], [7, 17]]]], "value"], [], ["loc", [null, [7, 8], [7, 26]]]], "defaultValue", ["subexpr", "@mut", [["get", "defaultValue", ["loc", [null, [8, 15], [8, 27]]]]], [], []], "min", ["subexpr", "@mut", [["get", "min", ["loc", [null, [9, 6], [9, 9]]]]], [], []], "max", ["subexpr", "@mut", [["get", "max", ["loc", [null, [10, 6], [10, 9]]]]], [], []], "step", ["subexpr", "@mut", [["get", "step", ["loc", [null, [11, 7], [11, 11]]]]], [], []], "disabled", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [12, 11], [12, 19]]]]], [], []], "immediateResponse", false, "tooltip", "hide"], ["loc", [null, [6, 0], [15, 2]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-dialog", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-dialog.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("i");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(fragment, [2]);
        var element2 = dom.childAt(fragment, [4]);
        var element3 = dom.childAt(fragment, [6]);
        var morphs = new Array(9);
        morphs[0] = dom.createAttrMorph(element0, 'class');
        morphs[1] = dom.createAttrMorph(element1, 'class');
        morphs[2] = dom.createMorphAt(element1, 1, 1);
        morphs[3] = dom.createAttrMorph(element2, 'class');
        morphs[4] = dom.createMorphAt(element2, 1, 1);
        morphs[5] = dom.createMorphAt(element2, 3, 3);
        morphs[6] = dom.createAttrMorph(element3, 'class');
        morphs[7] = dom.createMorphAt(element3, 1, 1);
        morphs[8] = dom.createMorphAt(element3, 3, 3);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", [["get", "flexberryClassNames.closeButton", ["loc", [null, [1, 12], [1, 43]]]], " close icon"]]], ["attribute", "class", ["concat", [["get", "flexberryClassNames.header", ["loc", [null, [2, 14], [2, 40]]]], " header"]]], ["content", "caption", ["loc", [null, [3, 2], [3, 13]]]], ["attribute", "class", ["concat", [["get", "flexberryClassNames.content", ["loc", [null, [5, 14], [5, 41]]]], " content ", ["get", "contentClass", ["loc", [null, [5, 54], [5, 66]]]]]]], ["content", "content", ["loc", [null, [6, 2], [6, 13]]]], ["content", "yield", ["loc", [null, [7, 2], [7, 11]]]], ["attribute", "class", ["concat", [["get", "flexberryClassNames.toolbar", ["loc", [null, [9, 14], [9, 41]]]], " actions"]]], ["inline", "flexberry-button", [], ["class", ["subexpr", "concat", [["get", "flexberryClassNames.approveButton", ["loc", [null, [11, 18], [11, 51]]]], " approve positive"], [], ["loc", [null, [11, 10], [11, 72]]]], "caption", ["subexpr", "@mut", [["get", "approveButtonCaption", ["loc", [null, [12, 12], [12, 32]]]]], [], []]], ["loc", [null, [10, 2], [13, 4]]]], ["inline", "flexberry-button", [], ["class", ["subexpr", "concat", [["get", "flexberryClassNames.cancelButton", ["loc", [null, [15, 18], [15, 50]]]], " deny negative"], [], ["loc", [null, [15, 10], [15, 68]]]], "caption", ["subexpr", "@mut", [["get", "denyButtonCaption", ["loc", [null, [16, 12], [16, 29]]]]], [], []]], ["loc", [null, [14, 2], [17, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-dropdown", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 2
              },
              "end": {
                "line": 29,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("input");
            dom.setAttribute(el1, "class", "search");
            dom.setAttribute(el1, "autocomplete", "off");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 31,
                "column": 2
              },
              "end": {
                "line": 33,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("input");
            dom.setAttribute(el1, "class", "search");
            dom.setAttribute(el1, "autocomplete", "off");
            dom.setAttribute(el1, "readonly", "");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 36,
                "column": 2
              },
              "end": {
                "line": 38,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "default text");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "placeholder", ["loc", [null, [37, 30], [37, 45]]]]],
          locals: [],
          templates: []
        };
      })();
      var child3 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 38,
                "column": 2
              },
              "end": {
                "line": 40,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "text");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "text", ["loc", [null, [39, 22], [39, 30]]]]],
          locals: [],
          templates: []
        };
      })();
      var child4 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 44,
                  "column": 6
                },
                "end": {
                  "line": 46,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "item");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createAttrMorph(element0, 'data-value');
              morphs[1] = dom.createMorphAt(element0, 0, 0);
              return morphs;
            },
            statements: [["attribute", "data-value", ["concat", [["get", "value", ["loc", [null, [45, 40], [45, 45]]]]]]], ["content", "value", ["loc", [null, [45, 49], [45, 58]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 46,
                  "column": 6
                },
                "end": {
                  "line": 48,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "item");
              dom.setAttribute(el1, "data-value", "_");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
              return morphs;
            },
            statements: [["content", "value", ["loc", [null, [47, 41], [47, 50]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 43,
                "column": 4
              },
              "end": {
                "line": 49,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
          },
          isEmpty: false,
          arity: 2,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "value", ["loc", [null, [44, 12], [44, 17]]]]], [], 0, 1, ["loc", [null, [44, 6], [48, 13]]]]],
          locals: ["key", "value"],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type", "multiple-nodes"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 51,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1, "class", "dropdown icon");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "menu");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [8]);
          var morphs = new Array(5);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 6, 6, contextualElement);
          morphs[3] = dom.createMorphAt(element1, 1, 1);
          morphs[4] = dom.createMorphAt(element1, 3, 3);
          dom.insertBoundary(fragment, 0);
          return morphs;
        },
        statements: [["block", "if", [["subexpr", "and", [["get", "isSearch", ["loc", [null, [27, 13], [27, 21]]]], ["get", "isSearchReadOnly", ["loc", [null, [27, 22], [27, 38]]]]], [], ["loc", [null, [27, 8], [27, 39]]]]], [], 0, null, ["loc", [null, [27, 2], [29, 9]]]], ["block", "if", [["subexpr", "and", [["get", "isSearch", ["loc", [null, [31, 13], [31, 21]]]], ["subexpr", "not", [["get", "isSearchReadOnly", ["loc", [null, [31, 27], [31, 43]]]]], [], ["loc", [null, [31, 22], [31, 44]]]]], [], ["loc", [null, [31, 8], [31, 45]]]]], [], 1, null, ["loc", [null, [31, 2], [33, 9]]]], ["block", "if", [["get", "showPlaceholder", ["loc", [null, [36, 8], [36, 23]]]]], [], 2, 3, ["loc", [null, [36, 2], [40, 9]]]], ["content", "yield", ["loc", [null, [42, 4], [42, 13]]]], ["block", "each-in", [["get", "_items", ["loc", [null, [43, 15], [43, 21]]]]], [], 4, null, ["loc", [null, [43, 4], [49, 16]]]]],
        locals: [],
        templates: [child0, child1, child2, child3, child4]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-dropdown.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "ui-dropdown", [], ["class", ["subexpr", "concat", ["flexberry-dropdown ", ["get", "class", ["loc", [null, [2, 38], [2, 43]]]], " selection", ["subexpr", "if", [["get", "readonly", ["loc", [null, [2, 61], [2, 69]]]], " disabled", ""], [], ["loc", [null, [2, 57], [2, 85]]]]], [], ["loc", [null, [2, 8], [2, 86]]]], "onChange", ["subexpr", "action", ["onChange"], [], ["loc", [null, [3, 11], [3, 30]]]], "onHide", ["subexpr", "action", ["onShowHide"], [], ["loc", [null, [4, 9], [4, 30]]]], "onShow", ["subexpr", "action", ["onShowHide"], [], ["loc", [null, [5, 9], [5, 30]]]], "on", ["subexpr", "@mut", [["get", "on", ["loc", [null, [6, 5], [6, 7]]]]], [], []], "allowReselection", ["subexpr", "@mut", [["get", "allowReselection", ["loc", [null, [7, 19], [7, 35]]]]], [], []], "allowAdditions", ["subexpr", "@mut", [["get", "allowAdditions", ["loc", [null, [8, 17], [8, 31]]]]], [], []], "hideAdditions", ["subexpr", "@mut", [["get", "hideAdditions", ["loc", [null, [9, 16], [9, 29]]]]], [], []], "minCharacters", ["subexpr", "@mut", [["get", "minCharacters", ["loc", [null, [10, 16], [10, 29]]]]], [], []], "match", ["subexpr", "@mut", [["get", "match", ["loc", [null, [11, 8], [11, 13]]]]], [], []], "selectOnKeydown", ["subexpr", "@mut", [["get", "selectOnKeydown", ["loc", [null, [12, 18], [12, 33]]]]], [], []], "forceSelection", ["subexpr", "@mut", [["get", "forceSelection", ["loc", [null, [13, 17], [13, 31]]]]], [], []], "allowCategorySelection", ["subexpr", "@mut", [["get", "allowCategorySelection", ["loc", [null, [14, 25], [14, 47]]]]], [], []], "direction", ["subexpr", "@mut", [["get", "direction", ["loc", [null, [15, 12], [15, 21]]]]], [], []], "keepOnScreen", ["subexpr", "@mut", [["get", "keepOnScreen", ["loc", [null, [16, 15], [16, 27]]]]], [], []], "context", ["subexpr", "@mut", [["get", "context", ["loc", [null, [17, 10], [17, 17]]]]], [], []], "fullTextSearch", ["subexpr", "@mut", [["get", "fullTextSearch", ["loc", [null, [18, 17], [18, 31]]]]], [], []], "preserveHTML", ["subexpr", "@mut", [["get", "preserveHTML", ["loc", [null, [19, 15], [19, 27]]]]], [], []], "sortSelect", ["subexpr", "@mut", [["get", "sortSelect", ["loc", [null, [20, 13], [20, 23]]]]], [], []], "showOnFocus", ["subexpr", "@mut", [["get", "showOnFocus", ["loc", [null, [21, 14], [21, 25]]]]], [], []], "allowTab", ["subexpr", "@mut", [["get", "allowTab", ["loc", [null, [22, 11], [22, 19]]]]], [], []], "transition", ["subexpr", "@mut", [["get", "transition", ["loc", [null, [23, 13], [23, 23]]]]], [], []], "duration", ["subexpr", "@mut", [["get", "duration", ["loc", [null, [24, 11], [24, 19]]]]], [], []], "action", ["subexpr", "@mut", [["get", "action", ["loc", [null, [25, 9], [25, 15]]]]], [], []]], 0, null, ["loc", [null, [1, 0], [51, 16]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-error", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 10,
                    "column": 8
                  },
                  "end": {
                    "line": 12,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-error.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["content", "error.message", ["loc", [null, [11, 10], [11, 27]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 12,
                    "column": 8
                  },
                  "end": {
                    "line": 14,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-error.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "t", ["components.flexberry-error.unknown-error"], [], ["loc", [null, [13, 10], [13, 58]]]]],
              locals: [],
              templates: []
            };
          })();
          var child2 = (function () {
            var child0 = (function () {
              var child0 = (function () {
                return {
                  meta: {
                    "fragmentReason": false,
                    "revision": "Ember@2.4.6",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 20,
                        "column": 10
                      },
                      "end": {
                        "line": 23,
                        "column": 10
                      }
                    },
                    "moduleName": "dummy/templates/components/flexberry-error.hbs"
                  },
                  isEmpty: false,
                  arity: 1,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createTextNode("            ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createElement("h3");
                    dom.setAttribute(el1, "class", "ui header");
                    var el2 = dom.createComment("");
                    dom.appendChild(el1, el2);
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n            ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createElement("pre");
                    var el2 = dom.createComment("");
                    dom.appendChild(el1, el2);
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(2);
                    morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
                    morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
                    return morphs;
                  },
                  statements: [["content", "e.message", ["loc", [null, [21, 34], [21, 47]]]], ["content", "e.stack", ["loc", [null, [22, 17], [22, 28]]]]],
                  locals: ["e"],
                  templates: []
                };
              })();
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 17,
                      "column": 8
                    },
                    "end": {
                      "line": 24,
                      "column": 8
                    }
                  },
                  "moduleName": "dummy/templates/components/flexberry-error.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                  dom.insertBoundary(fragment, 0);
                  dom.insertBoundary(fragment, null);
                  return morphs;
                },
                statements: [["block", "each", [["get", "error.errors", ["loc", [null, [20, 18], [20, 30]]]]], [], 0, null, ["loc", [null, [20, 10], [23, 19]]]]],
                locals: [],
                templates: [child0]
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 16,
                    "column": 6
                  },
                  "end": {
                    "line": 25,
                    "column": 6
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-error.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "flexberry-toggler", [], ["caption", ["subexpr", "t", ["components.flexberry-error.show-more"], [], ["loc", [null, [18, 18], [18, 60]]]]], 0, null, ["loc", [null, [17, 8], [24, 30]]]]],
              locals: [],
              templates: [child0]
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 3,
                  "column": 4
                },
                "end": {
                  "line": 26,
                  "column": 4
                }
              },
              "moduleName": "dummy/templates/components/flexberry-error.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("h2");
              dom.setAttribute(el1, "class", "ui header");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("      ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "error.message", ["loc", [null, [10, 14], [10, 27]]]]], [], 0, 1, ["loc", [null, [10, 8], [14, 15]]]], ["block", "if", [["get", "error.errors", ["loc", [null, [16, 12], [16, 24]]]]], [], 2, null, ["loc", [null, [16, 6], [25, 13]]]]],
            locals: [],
            templates: [child0, child1, child2]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 27,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-error.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "modal-dialog", [], ["title", ["subexpr", "t", ["components.flexberry-error.caption"], [], ["loc", [null, [4, 12], [4, 52]]]], "close", "close", "useOkButton", false, "settings", ["subexpr", "hash", [], ["context", ["get", "modalContext", ["loc", [null, [7, 29], [7, 41]]]]], ["loc", [null, [7, 15], [7, 42]]]]], 0, null, ["loc", [null, [3, 4], [26, 21]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 34,
                    "column": 8
                  },
                  "end": {
                    "line": 36,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-error.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["content", "error.message", ["loc", [null, [35, 10], [35, 27]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 36,
                    "column": 8
                  },
                  "end": {
                    "line": 38,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-error.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                return morphs;
              },
              statements: [["inline", "t", ["components.flexberry-error.unknown-error"], [], ["loc", [null, [37, 10], [37, 58]]]]],
              locals: [],
              templates: []
            };
          })();
          var child2 = (function () {
            var child0 = (function () {
              var child0 = (function () {
                return {
                  meta: {
                    "fragmentReason": false,
                    "revision": "Ember@2.4.6",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 44,
                        "column": 10
                      },
                      "end": {
                        "line": 47,
                        "column": 10
                      }
                    },
                    "moduleName": "dummy/templates/components/flexberry-error.hbs"
                  },
                  isEmpty: false,
                  arity: 1,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createTextNode("            ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createElement("h3");
                    dom.setAttribute(el1, "class", "ui header");
                    var el2 = dom.createComment("");
                    dom.appendChild(el1, el2);
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n            ");
                    dom.appendChild(el0, el1);
                    var el1 = dom.createElement("pre");
                    var el2 = dom.createComment("");
                    dom.appendChild(el1, el2);
                    dom.appendChild(el0, el1);
                    var el1 = dom.createTextNode("\n");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(2);
                    morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
                    morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
                    return morphs;
                  },
                  statements: [["content", "e.message", ["loc", [null, [45, 34], [45, 47]]]], ["content", "e.stack", ["loc", [null, [46, 17], [46, 28]]]]],
                  locals: ["e"],
                  templates: []
                };
              })();
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 41,
                      "column": 8
                    },
                    "end": {
                      "line": 48,
                      "column": 8
                    }
                  },
                  "moduleName": "dummy/templates/components/flexberry-error.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                  dom.insertBoundary(fragment, 0);
                  dom.insertBoundary(fragment, null);
                  return morphs;
                },
                statements: [["block", "each", [["get", "error.errors", ["loc", [null, [44, 18], [44, 30]]]]], [], 0, null, ["loc", [null, [44, 10], [47, 19]]]]],
                locals: [],
                templates: [child0]
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 40,
                    "column": 6
                  },
                  "end": {
                    "line": 49,
                    "column": 6
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-error.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "flexberry-toggler", [], ["caption", ["subexpr", "t", ["components.flexberry-error.show-more"], [], ["loc", [null, [42, 18], [42, 60]]]]], 0, null, ["loc", [null, [41, 8], [48, 30]]]]],
              locals: [],
              templates: [child0]
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 28,
                  "column": 4
                },
                "end": {
                  "line": 50,
                  "column": 4
                }
              },
              "moduleName": "dummy/templates/components/flexberry-error.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("h2");
              dom.setAttribute(el1, "class", "ui header");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("      ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "error.message", ["loc", [null, [34, 14], [34, 27]]]]], [], 0, 1, ["loc", [null, [34, 8], [38, 15]]]], ["block", "if", [["get", "error.errors", ["loc", [null, [40, 12], [40, 24]]]]], [], 2, null, ["loc", [null, [40, 6], [49, 13]]]]],
            locals: [],
            templates: [child0, child1, child2]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 2
              },
              "end": {
                "line": 51,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-error.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "ui-message", [], ["type", "negative", "onHide", "close", "closeable", true], 0, null, ["loc", [null, [28, 4], [50, 19]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 52,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-error.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "modal", ["loc", [null, [2, 8], [2, 13]]]]], [], 0, 1, ["loc", [null, [2, 2], [51, 9]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 53,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-error.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "error", ["loc", [null, [1, 6], [1, 11]]]]], [], 0, null, ["loc", [null, [1, 0], [52, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-field", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-field.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createElement("label");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
          return morphs;
        },
        statements: [["content", "label", ["loc", [null, [2, 7], [2, 16]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-field.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "label", ["loc", [null, [1, 6], [1, 11]]]]], [], 0, null, ["loc", [null, [1, 0], [3, 7]]]], ["inline", "flexberry-textbox", [], ["type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [5, 7], [5, 11]]]]], [], []], "value", ["subexpr", "@mut", [["get", "value", ["loc", [null, [6, 8], [6, 13]]]]], [], []], "readonly", ["subexpr", "if", [["get", "readonly", ["loc", [null, [7, 15], [7, 23]]]], "readonly"], [], ["loc", [null, [7, 11], [7, 35]]]], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [8, 11], [8, 19]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [9, 14], [9, 25]]]]], [], []], "maxlength", ["subexpr", "@mut", [["get", "maxlength", ["loc", [null, [10, 12], [10, 21]]]]], [], []]], ["loc", [null, [4, 0], [11, 2]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-file", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 12,
                "column": 4
              },
              "end": {
                "line": 20,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-file.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("label");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "add outline square icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element6 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element6, 'class');
            morphs[1] = dom.createAttrMorph(element6, 'title');
            morphs[2] = dom.createAttrMorph(element6, 'for');
            morphs[3] = dom.createElementMorph(element6);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["flexberry-file-add-button ui icon ", ["get", "buttonClass", ["loc", [null, [14, 51], [14, 62]]]], " ", ["subexpr", "unless", [["get", "_addButtonIsEnabled", ["loc", [null, [14, 74], [14, 93]]]], "disabled"], [], ["loc", [null, [14, 65], [14, 106]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.add-button-title"], [], ["loc", [null, [15, 14], [15, 64]]]]], ["attribute", "for", ["get", "_fileInputId", ["loc", [null, [16, 14], [16, 26]]]]], ["element", "action", ["addButtonClick"], ["on", "click", "preventDefault", false], ["loc", [null, [17, 8], [17, 67]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 21,
                "column": 4
              },
              "end": {
                "line": 28,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-file.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("label");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "trash outline icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element5 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element5, 'class');
            morphs[1] = dom.createAttrMorph(element5, 'title');
            morphs[2] = dom.createElementMorph(element5);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["flexberry-file-remove-button ui icon ", ["get", "buttonClass", ["loc", [null, [23, 54], [23, 65]]]], " ", ["subexpr", "unless", [["get", "_removeButtonIsEnabled", ["loc", [null, [23, 77], [23, 99]]]], "disabled"], [], ["loc", [null, [23, 68], [23, 112]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.remove-button-title"], [], ["loc", [null, [24, 14], [24, 67]]]]], ["element", "action", ["removeButtonClick"], ["on", "click", "preventDefault", false], ["loc", [null, [25, 8], [25, 70]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 29,
                "column": 4
              },
              "end": {
                "line": 36,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-file.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("label");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "upload outline icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element4 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element4, 'class');
            morphs[1] = dom.createAttrMorph(element4, 'title');
            morphs[2] = dom.createElementMorph(element4);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["flexberry-file-upload-button ui icon ", ["get", "buttonClass", ["loc", [null, [31, 54], [31, 65]]]], " ", ["subexpr", "unless", [["get", "_uploadButtonIsEnabled", ["loc", [null, [31, 77], [31, 99]]]], "disabled"], [], ["loc", [null, [31, 68], [31, 112]]]], " ", ["subexpr", "if", [["get", "_uploadIsInProgress", ["loc", [null, [31, 118], [31, 137]]]], "loading"], [], ["loc", [null, [31, 113], [31, 149]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.upload-button-title"], [], ["loc", [null, [32, 14], [32, 67]]]]], ["element", "action", ["uploadButtonClick"], ["on", "click", "preventDefault", false], ["loc", [null, [33, 8], [33, 70]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/components/flexberry-file.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "_addButtonIsVisible", ["loc", [null, [12, 10], [12, 29]]]]], [], 0, null, ["loc", [null, [12, 4], [20, 11]]]], ["block", "if", [["get", "_removeButtonIsVisible", ["loc", [null, [21, 10], [21, 32]]]]], [], 1, null, ["loc", [null, [21, 4], [28, 11]]]], ["block", "if", [["get", "_uploadButtonIsVisible", ["loc", [null, [29, 10], [29, 32]]]]], [], 2, null, ["loc", [null, [29, 4], [36, 11]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/components/flexberry-file.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("label");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "download outline icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element3, 'class');
          morphs[1] = dom.createAttrMorph(element3, 'title');
          morphs[2] = dom.createElementMorph(element3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["flexberry-file-download-button ui icon ", ["get", "buttonClass", ["loc", [null, [40, 54], [40, 65]]]], " ", ["subexpr", "unless", [["get", "_downloadButtonIsEnabled", ["loc", [null, [40, 77], [40, 101]]]], "disabled"], [], ["loc", [null, [40, 68], [40, 114]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.download-button-title"], [], ["loc", [null, [41, 12], [41, 67]]]]], ["element", "action", ["downloadButtonClick"], ["on", "click", "preventDefault", false], ["loc", [null, [42, 6], [42, 70]]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 49,
                "column": 6
              },
              "end": {
                "line": 54,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/flexberry-file.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("img");
            dom.setAttribute(el1, "class", "flexberry-file-image-preview ui small centered image");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element0, 'src');
            morphs[1] = dom.createAttrMorph(element0, 'alt');
            return morphs;
          },
          statements: [["attribute", "src", ["get", "_previewImageAsBase64String", ["loc", [null, [52, 16], [52, 43]]]]], ["attribute", "alt", ["subexpr", "t", ["components.flexberry-file.preview-image-alternative-text"], [], ["loc", [null, [53, 14], [53, 78]]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 47,
              "column": 0
            },
            "end": {
              "line": 57,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-file.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "flexberry-file-image-preview-wrapper ui segment");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var element2 = dom.childAt(element1, [3]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createAttrMorph(element2, 'class');
          return morphs;
        },
        statements: [["element", "action", ["viewLoadedImage"], [], ["loc", [null, [48, 65], [48, 93]]]], ["block", "unless", [["get", "_previewDownloadIsInProgress", ["loc", [null, [49, 16], [49, 44]]]]], [], 0, null, ["loc", [null, [49, 6], [54, 17]]]], ["attribute", "class", ["concat", ["ui ", ["subexpr", "if", [["get", "_previewDownloadIsInProgress", ["loc", [null, [55, 26], [55, 54]]]], "active", ""], [], ["loc", [null, [55, 21], [55, 68]]]], " loader"]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 80,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-file.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("input");
        dom.setAttribute(el2, "type", "file");
        dom.setAttribute(el2, "name", "files[]");
        dom.setAttribute(el2, "class", "flexberry-file-file-input");
        dom.setAttribute(el2, "style", "display:none");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "flexberry-file-download-iframes-container");
        dom.setAttribute(el1, "style", "display: none;");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "flexberry-file-error-modal-dialog ui small basic modal");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui icon header");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("i");
        dom.setAttribute(el3, "class", "file icon");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-file-error-modal-dialog-content center aligned ui grid");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "center aligned ui grid");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "actions");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "flexberry-file-error-modal-dialog-ok-button ui approve green inverted button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("i");
        dom.setAttribute(el5, "class", "checkmark icon");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element7 = dom.childAt(fragment, [0]);
        var element8 = dom.childAt(element7, [1]);
        var element9 = dom.childAt(fragment, [5]);
        var morphs = new Array(9);
        morphs[0] = dom.createAttrMorph(element7, 'class');
        morphs[1] = dom.createAttrMorph(element8, 'id');
        morphs[2] = dom.createMorphAt(element7, 4, 4);
        morphs[3] = dom.createMorphAt(element7, 6, 6);
        morphs[4] = dom.createMorphAt(element7, 7, 7);
        morphs[5] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[6] = dom.createMorphAt(dom.childAt(element9, [1]), 3, 3);
        morphs[7] = dom.createMorphAt(dom.childAt(element9, [3, 1]), 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(element9, [5, 1, 1]), 3, 3);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["ui ", ["get", "inputClass", ["loc", [null, [1, 17], [1, 27]]]], " action input"]]], ["attribute", "id", ["get", "_fileInputId", ["loc", [null, [2, 41], [2, 53]]]]], ["inline", "input", [], ["type", "text", "class", "flexberry-file-filename-input", "readonly", "readonly", "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [8, 16], [8, 27]]]]], [], []], "value", ["subexpr", "get", [["get", "this", ["loc", [null, [9, 15], [9, 19]]]], "_fileName"], [], ["loc", [null, [9, 10], [9, 32]]]]], ["loc", [null, [4, 2], [10, 4]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [11, 12], [11, 20]]]]], [], 0, null, ["loc", [null, [11, 2], [37, 13]]]], ["block", "if", [["get", "_downloadButtonIsVisible", ["loc", [null, [38, 8], [38, 32]]]]], [], 1, null, ["loc", [null, [38, 2], [45, 9]]]], ["block", "if", [["subexpr", "and", [["get", "showPreview", ["loc", [null, [47, 11], [47, 22]]]], ["get", "_hasFile", ["loc", [null, [47, 23], [47, 31]]]]], [], ["loc", [null, [47, 6], [47, 32]]]]], [], 2, null, ["loc", [null, [47, 0], [57, 7]]]], ["content", "_errorModalDialogCaption", ["loc", [null, [64, 4], [64, 32]]]], ["content", "_errorModalDialogContent", ["loc", [null, [68, 6], [68, 34]]]], ["inline", "t", ["components.flexberry-file.error-dialog-ok-button-caption"], [], ["loc", [null, [75, 8], [75, 72]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define("dummy/templates/components/flexberry-groupedit", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 52,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-groupedit.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "groupedit-toolbar", [], ["componentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [2, 16], [2, 29]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [3, 11], [3, 19]]]]], [], []], "buttonClass", ["subexpr", "@mut", [["get", "buttonClass", ["loc", [null, [4, 14], [4, 25]]]]], [], []], "createNewButton", ["subexpr", "@mut", [["get", "createNewButton", ["loc", [null, [5, 18], [5, 33]]]]], [], []], "deleteButton", ["subexpr", "@mut", [["get", "deleteButton", ["loc", [null, [6, 15], [6, 27]]]]], [], []], "confirmDeleteRows", ["subexpr", "@mut", [["get", "confirmDeleteRows", ["loc", [null, [7, 20], [7, 37]]]]], [], []]], ["loc", [null, [1, 0], [8, 2]]]], ["inline", "object-list-view", [], ["class", "groupedit-container", "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [11, 14], [11, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [12, 11], [12, 19]]]]], [], []], "buttonClass", ["subexpr", "@mut", [["get", "buttonClass", ["loc", [null, [13, 14], [13, 25]]]]], [], []], "tableStriped", ["subexpr", "@mut", [["get", "tableStriped", ["loc", [null, [14, 15], [14, 27]]]]], [], []], "columnsWidthAutoresize", ["subexpr", "@mut", [["get", "columnsWidthAutoresize", ["loc", [null, [15, 25], [15, 47]]]]], [], []], "minAutoColumnWidth", ["subexpr", "@mut", [["get", "minAutoColumnWidth", ["loc", [null, [16, 21], [16, 39]]]]], [], []], "customTableClass", ["subexpr", "@mut", [["get", "customTableClass", ["loc", [null, [17, 19], [17, 35]]]]], [], []], "cellComponent", ["subexpr", "@mut", [["get", "cellComponent", ["loc", [null, [18, 16], [18, 29]]]]], [], []], "singleColumnCellComponent", ["subexpr", "@mut", [["get", "singleColumnCellComponent", ["loc", [null, [19, 28], [19, 53]]]]], [], []], "singleColumnHeaderTitle", ["subexpr", "@mut", [["get", "singleColumnHeaderTitle", ["loc", [null, [20, 26], [20, 49]]]]], [], []], "showValidationMessagesInRow", ["subexpr", "@mut", [["get", "showValidationMessagesInRow", ["loc", [null, [21, 30], [21, 57]]]]], [], []], "showAsteriskInRow", ["subexpr", "@mut", [["get", "showAsteriskInRow", ["loc", [null, [22, 20], [22, 37]]]]], [], []], "showCheckBoxInRow", ["subexpr", "@mut", [["get", "showCheckBoxInRow", ["loc", [null, [23, 20], [23, 37]]]]], [], []], "showDeleteButtonInRow", ["subexpr", "@mut", [["get", "showDeleteButtonInRow", ["loc", [null, [24, 24], [24, 45]]]]], [], []], "showEditMenuItemInRow", ["subexpr", "@mut", [["get", "showEditMenuItemInRow", ["loc", [null, [25, 24], [25, 45]]]]], [], []], "showDeleteMenuItemInRow", ["subexpr", "@mut", [["get", "showDeleteMenuItemInRow", ["loc", [null, [26, 26], [26, 49]]]]], [], []], "sendMenuItemAction", ["subexpr", "action", ["sendMenuItemAction"], [], ["loc", [null, [27, 21], [27, 50]]]], "menuInRowAdditionalItems", ["subexpr", "@mut", [["get", "menuInRowAdditionalItems", ["loc", [null, [28, 27], [28, 51]]]]], [], []], "rowClickable", ["subexpr", "@mut", [["get", "rowClickable", ["loc", [null, [29, 15], [29, 27]]]]], [], []], "orderable", ["subexpr", "@mut", [["get", "orderable", ["loc", [null, [30, 12], [30, 21]]]]], [], []], "editOnSeparateRoute", ["subexpr", "@mut", [["get", "editOnSeparateRoute", ["loc", [null, [31, 22], [31, 41]]]]], [], []], "saveBeforeRouteLeave", ["subexpr", "@mut", [["get", "saveBeforeRouteLeave", ["loc", [null, [32, 23], [32, 43]]]]], [], []], "sorting", ["subexpr", "@mut", [["get", "sorting", ["loc", [null, [33, 10], [33, 17]]]]], [], []], "modelName", ["subexpr", "@mut", [["get", "modelName", ["loc", [null, [34, 12], [34, 21]]]]], [], []], "mainModelProjection", ["subexpr", "@mut", [["get", "mainModelProjection", ["loc", [null, [35, 22], [35, 41]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [36, 18], [36, 33]]]]], [], []], "content", ["subexpr", "@mut", [["get", "content", ["loc", [null, [37, 10], [37, 17]]]]], [], []], "sortByColumn", ["subexpr", "action", [["subexpr", "if", [["get", "this.attrs.sortByColumn", ["loc", [null, [38, 27], [38, 50]]]], ["get", "this.attrs.sortByColumn", ["loc", [null, [38, 51], [38, 74]]]], "sortByColumn"], [], ["loc", [null, [38, 23], [38, 90]]]]], [], ["loc", [null, [38, 15], [38, 91]]]], "addColumnToSorting", ["subexpr", "action", [["subexpr", "if", [["get", "this.attrs.addColumnToSorting", ["loc", [null, [39, 33], [39, 62]]]], ["get", "this.attrs.addColumnToSorting", ["loc", [null, [39, 63], [39, 92]]]], "addColumnToSorting"], [], ["loc", [null, [39, 29], [39, 114]]]]], [], ["loc", [null, [39, 21], [39, 115]]]], "action", "groupEditRowClick", "componentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [41, 16], [41, 29]]]]], [], []], "allowColumnResize", ["subexpr", "@mut", [["get", "allowColumnResize", ["loc", [null, [42, 20], [42, 37]]]]], [], []], "configurateRow", ["subexpr", "@mut", [["get", "this.attrs.configurateRow", ["loc", [null, [43, 17], [43, 42]]]]], [], []], "confirmDeleteRow", ["subexpr", "@mut", [["get", "confirmDeleteRow", ["loc", [null, [44, 19], [44, 35]]]]], [], []], "configurateSelectedRows", ["subexpr", "@mut", [["get", "this.attrs.configurateSelectedRows", ["loc", [null, [45, 26], [45, 60]]]]], [], []], "beforeDeleteRecord", ["subexpr", "@mut", [["get", "beforeDeleteRecord", ["loc", [null, [46, 21], [46, 39]]]]], [], []], "searchForContentChange", ["subexpr", "@mut", [["get", "searchForContentChange", ["loc", [null, [47, 25], [47, 47]]]]], [], []], "immediateDelete", false, "notUseUserSettings", true, "overflowedComponents", ["subexpr", "@mut", [["get", "overflowedComponents", ["loc", [null, [50, 23], [50, 43]]]]], [], []]], ["loc", [null, [9, 0], [51, 2]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-icon", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-icon.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-jsonarea", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "triple-curlies"
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 15,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-jsonarea.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "sexteen wide column");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", ["subexpr", "@mut", [["get", "_showErrorMessage", ["loc", [null, [7, 16], [7, 33]]]]], [], []], "caption", ["subexpr", "@mut", [["get", "_errorMessageCaption", ["loc", [null, [8, 16], [8, 36]]]]], [], []], "message", ["subexpr", "@mut", [["get", "_errorMessage", ["loc", [null, [9, 16], [9, 29]]]]], [], []], "onShow", ["subexpr", "action", ["onErrorMessageShow"], [], ["loc", [null, [10, 15], [10, 44]]]], "onHide", ["subexpr", "action", ["onErrorMessageHide"], [], ["loc", [null, [11, 15], [11, 44]]]]], ["loc", [null, [4, 6], [12, 8]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 17,
              "column": 0
            },
            "end": {
              "line": 27,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-jsonarea.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "row");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "sexteen wide column");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "flexberry-button", [], ["class", ["subexpr", "concat", [["get", "flexberryClassNames.editButton", ["loc", [null, [21, 22], [21, 52]]]], " fluid", ["subexpr", "if", [["get", "_isEditing", ["loc", [null, [21, 66], [21, 76]]]], " positive"], [], ["loc", [null, [21, 62], [21, 89]]]]], [], ["loc", [null, [21, 14], [21, 90]]]], "iconClass", ["subexpr", "if", [["get", "_isEditing", ["loc", [null, [22, 22], [22, 32]]]], "checkmark icon", "edit icon"], [], ["loc", [null, [22, 18], [22, 62]]]], "click", ["subexpr", "action", ["onEditButtonClick"], [], ["loc", [null, [23, 14], [23, 42]]]]], ["loc", [null, [20, 6], [24, 8]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 39,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-jsonarea.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "sexteen wide column");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4, 1]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "_showErrorMessage", ["loc", [null, [1, 6], [1, 23]]]]], [], 0, null, ["loc", [null, [1, 0], [15, 7]]]], ["block", "if", [["subexpr", "not", [["get", "readonly", ["loc", [null, [17, 11], [17, 19]]]]], [], ["loc", [null, [17, 6], [17, 20]]]]], [], 1, null, ["loc", [null, [17, 0], [27, 7]]]], ["inline", "flexberry-textarea", [], ["class", ["subexpr", "concat", [["get", "flexberryClassNames.textarea", ["loc", [null, [32, 20], [32, 48]]]], " fluid"], [], ["loc", [null, [32, 12], [32, 58]]]], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [33, 18], [33, 29]]]]], [], []], "value", ["subexpr", "@mut", [["get", "_jsonText", ["loc", [null, [34, 12], [34, 21]]]]], [], []], "readonly", ["subexpr", "not", [["get", "_isEditing", ["loc", [null, [35, 20], [35, 30]]]]], [], ["loc", [null, [35, 15], [35, 31]]]]], ["loc", [null, [31, 4], [36, 6]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/flexberry-lookup", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "flexberry-dropdown", [], ["placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [3, 16], [3, 27]]]]], [], []], "class", "search", "value", ["subexpr", "@mut", [["get", "displayValue", ["loc", [null, [5, 10], [5, 22]]]]], [], []], "readonly", ["subexpr", "if", [["get", "readonly", ["loc", [null, [6, 17], [6, 25]]]], "readonly"], [], ["loc", [null, [6, 13], [6, 37]]]], "needChecksOnValue", false, "isSearch", true, "isSearchReadOnly", ["subexpr", "@mut", [["get", "dropdownIsSearch", ["loc", [null, [9, 21], [9, 37]]]]], [], []]], ["loc", [null, [2, 2], [10, 4]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 0
            },
            "end": {
              "line": 33,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui fluid action input");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(element0, [3]);
          var element2 = dom.childAt(element0, [5]);
          var morphs = new Array(9);
          morphs[0] = dom.createMorphAt(element0, 1, 1);
          morphs[1] = dom.createAttrMorph(element1, 'class');
          morphs[2] = dom.createAttrMorph(element1, 'title');
          morphs[3] = dom.createElementMorph(element1);
          morphs[4] = dom.createUnsafeMorphAt(element1, 1, 1);
          morphs[5] = dom.createAttrMorph(element2, 'class');
          morphs[6] = dom.createAttrMorph(element2, 'title');
          morphs[7] = dom.createElementMorph(element2);
          morphs[8] = dom.createUnsafeMorphAt(element2, 1, 1);
          return morphs;
        },
        statements: [["inline", "input", [], ["type", "text", "class", ["subexpr", "concat", ["lookup-field ", ["subexpr", "if", [["get", "autocomplete", ["loc", [null, [15, 40], [15, 52]]]], "prompt"], [], ["loc", [null, [15, 36], [15, 62]]]]], [], ["loc", [null, [15, 12], [15, 63]]]], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [16, 18], [16, 29]]]]], [], []], "value", ["subexpr", "@mut", [["get", "displayValue", ["loc", [null, [17, 12], [17, 24]]]]], [], []], "readonly", ["subexpr", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [18, 23], [18, 31]]]], ["subexpr", "not", [["get", "autocomplete", ["loc", [null, [18, 37], [18, 49]]]]], [], ["loc", [null, [18, 32], [18, 50]]]]], [], ["loc", [null, [18, 19], [18, 51]]]], "readonly"], [], ["loc", [null, [18, 15], [18, 63]]]]], ["loc", [null, [13, 4], [19, 6]]]], ["attribute", "class", ["concat", ["ui ui-change ", ["subexpr", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [21, 35], [21, 43]]]], ["get", "isBlocked", ["loc", [null, [21, 44], [21, 53]]]]], [], ["loc", [null, [21, 31], [21, 54]]]], " disabled"], [], ["loc", [null, [21, 26], [21, 68]]]], " ", ["get", "chooseButtonClass", ["loc", [null, [21, 71], [21, 88]]]], " ", ["subexpr", "if", [["subexpr", "or", [["get", "modalIsBeforeToShow", ["loc", [null, [21, 100], [21, 119]]]], ["get", "modalIsStartToShow", ["loc", [null, [21, 120], [21, 138]]]]], [], ["loc", [null, [21, 96], [21, 139]]]], " loading"], [], ["loc", [null, [21, 91], [21, 152]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-lookup.choose-button-text"], [], ["loc", [null, [22, 12], [22, 66]]]]], ["element", "action", ["choose", ["get", "chooseData", ["loc", [null, [23, 24], [23, 34]]]]], [], ["loc", [null, [23, 6], [23, 36]]]], ["content", "chooseText", ["loc", [null, [24, 6], [24, 22]]]], ["attribute", "class", ["concat", ["ui ui-clear ", ["subexpr", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [27, 34], [27, 42]]]], ["get", "isBlocked", ["loc", [null, [27, 43], [27, 52]]]]], [], ["loc", [null, [27, 30], [27, 53]]]], " disabled"], [], ["loc", [null, [27, 25], [27, 67]]]], " ", ["get", "removeButtonClass", ["loc", [null, [27, 70], [27, 87]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-lookup.remove-button-text"], [], ["loc", [null, [28, 12], [28, 66]]]]], ["element", "action", ["remove", ["get", "removeData", ["loc", [null, [29, 24], [29, 34]]]]], [], ["loc", [null, [29, 6], [29, 36]]]], ["content", "removeText", ["loc", [null, [30, 6], [30, 22]]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 34,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "results");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-lookup.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "dropdown", ["loc", [null, [1, 6], [1, 14]]]]], [], 0, 1, ["loc", [null, [1, 0], [33, 7]]]], ["block", "if", [["subexpr", "and", [["subexpr", "not", [["get", "readonly", ["loc", [null, [34, 16], [34, 24]]]]], [], ["loc", [null, [34, 11], [34, 25]]]], ["get", "autocomplete", ["loc", [null, [34, 26], [34, 38]]]]], [], ["loc", [null, [34, 6], [34, 39]]]]], [], 2, null, ["loc", [null, [34, 0], [36, 7]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define("dummy/templates/components/flexberry-menu", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-menu.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "flexberry-menuitem", [], ["tagName", "", "item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [2, 41], [2, 45]]]]], [], []]], ["loc", [null, [2, 4], [2, 47]]]]],
        locals: ["item"],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-menu.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "each", [["get", "items", ["loc", [null, [1, 8], [1, 13]]]]], [], 0, null, ["loc", [null, [1, 0], [3, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-menuitem", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 4,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["inline", "t", [["get", "item.localeKey", ["loc", [null, [3, 14], [3, 28]]]]], [], ["loc", [null, [3, 10], [3, 30]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 6,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "item.title", ["loc", [null, [5, 10], [5, 24]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 7,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "item.localeKey", ["loc", [null, [2, 8], [2, 22]]]]], [], 0, 1, ["loc", [null, [2, 2], [6, 9]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element1, 'class');
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["get", "item.icon", ["loc", [null, [9, 14], [9, 23]]]]]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 12,
                "column": 2
              },
              "end": {
                "line": 14,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["inline", "t", [["get", "item.localeKey", ["loc", [null, [13, 14], [13, 28]]]]], [], ["loc", [null, [13, 10], [13, 30]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 14,
                "column": 2
              },
              "end": {
                "line": 16,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("span");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "item.title", ["loc", [null, [15, 10], [15, 24]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "item.localeKey", ["loc", [null, [12, 8], [12, 22]]]]], [], 0, 1, ["loc", [null, [12, 2], [16, 9]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 20,
                "column": 4
              },
              "end": {
                "line": 22,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-menuitem", [], ["item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [21, 32], [21, 36]]]]], [], []]], ["loc", [null, [21, 6], [21, 38]]]]],
          locals: ["item"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 18,
              "column": 0
            },
            "end": {
              "line": 24,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createMorphAt(element0, 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["subexpr", "if", [["get", "item.itemsAlignment", ["loc", [null, [19, 19], [19, 38]]]], ["get", "item.itemsAlignment", ["loc", [null, [19, 39], [19, 58]]]]], [], ["loc", [null, [19, 14], [19, 60]]]], " menu"]]], ["block", "each", [["get", "item.items", ["loc", [null, [20, 12], [20, 22]]]]], [], 0, null, ["loc", [null, [20, 4], [22, 13]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-menuitem.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[3] = dom.createMorphAt(fragment, 3, 3, contextualElement);
        morphs[4] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "titleIsBeforeIcon", ["loc", [null, [1, 6], [1, 23]]]]], [], 0, null, ["loc", [null, [1, 0], [7, 7]]]], ["block", "if", [["get", "item.icon", ["loc", [null, [8, 6], [8, 15]]]]], [], 1, null, ["loc", [null, [8, 0], [10, 7]]]], ["block", "if", [["subexpr", "not", [["get", "titleIsBeforeIcon", ["loc", [null, [11, 11], [11, 28]]]]], [], ["loc", [null, [11, 6], [11, 29]]]]], [], 2, null, ["loc", [null, [11, 0], [17, 7]]]], ["block", "if", [["get", "hasSubitems", ["loc", [null, [18, 6], [18, 17]]]]], [], 3, null, ["loc", [null, [18, 0], [24, 7]]]], ["content", "yield", ["loc", [null, [25, 0], [25, 9]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define("dummy/templates/components/flexberry-objectlistview", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 92,
                  "column": 8
                },
                "end": {
                  "line": 94,
                  "column": 8
                }
              },
              "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui button");
              var el2 = dom.createTextNode("...");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes() {
              return [];
            },
            statements: [],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 95,
                    "column": 10
                  },
                  "end": {
                    "line": 97,
                    "column": 10
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("            ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "class", "ui active button");
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
                return morphs;
              },
              statements: [["content", "page.number", ["loc", [null, [96, 45], [96, 60]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 97,
                    "column": 10
                  },
                  "end": {
                    "line": 99,
                    "column": 10
                  }
                },
                "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("            ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "class", "ui button");
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element0 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createElementMorph(element0);
                morphs[1] = dom.createMorphAt(element0, 0, 0);
                return morphs;
              },
              statements: [["element", "action", ["gotoPage", ["get", "this.attrs.gotoPage", ["loc", [null, [98, 58], [98, 77]]]], ["get", "page.number", ["loc", [null, [98, 78], [98, 89]]]]], [], ["loc", [null, [98, 38], [98, 91]]]], ["content", "page.number", ["loc", [null, [98, 92], [98, 107]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 94,
                  "column": 8
                },
                "end": {
                  "line": 100,
                  "column": 8
                }
              },
              "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "page.isCurrent", ["loc", [null, [95, 16], [95, 30]]]]], [], 0, 1, ["loc", [null, [95, 10], [99, 17]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 91,
                "column": 6
              },
              "end": {
                "line": 101,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "page.isEllipsis", ["loc", [null, [92, 14], [92, 29]]]]], [], 0, 1, ["loc", [null, [92, 8], [100, 15]]]]],
          locals: ["page"],
          templates: [child0, child1]
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 107,
                  "column": 10
                },
                "end": {
                  "line": 111,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "concat", [["subexpr", "t", ["components.flexberry-objectlistview.showing-entries.showing"], [], ["loc", [null, [109, 14], [109, 79]]]], ["get", "currentIntervalRecords", ["loc", [null, [109, 80], [109, 102]]]], ["subexpr", "t", ["components.flexberry-objectlistview.showing-entries.of"], [], ["loc", [null, [109, 103], [109, 163]]]], ["get", "recordsTotalCount", ["loc", [null, [109, 164], [109, 181]]]], ["subexpr", "t", ["components.flexberry-objectlistview.showing-entries.entries"], [], ["loc", [null, [109, 182], [109, 247]]]]], [], ["loc", [null, [108, 12], [110, 14]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 105,
                "column": 6
              },
              "end": {
                "line": 113,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "showing-entries");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["block", "if", [["subexpr", "and", [["get", "currentIntervalRecords", ["loc", [null, [107, 21], [107, 43]]]], ["get", "recordsTotalCount", ["loc", [null, [107, 44], [107, 61]]]]], [], ["loc", [null, [107, 16], [107, 62]]]]], [], 0, null, ["loc", [null, [107, 10], [111, 17]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 87,
              "column": 0
            },
            "end": {
              "line": 117,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui secondary menu no-margin nav-bar");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui basic buttons");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("button");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("button");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "right menu");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var element2 = dom.childAt(element1, [1]);
          var element3 = dom.childAt(element2, [1]);
          var element4 = dom.childAt(element2, [5]);
          var element5 = dom.childAt(element1, [3]);
          var morphs = new Array(7);
          morphs[0] = dom.createAttrMorph(element3, 'class');
          morphs[1] = dom.createElementMorph(element3);
          morphs[2] = dom.createMorphAt(element2, 3, 3);
          morphs[3] = dom.createAttrMorph(element4, 'class');
          morphs[4] = dom.createElementMorph(element4);
          morphs[5] = dom.createMorphAt(element5, 1, 1);
          morphs[6] = dom.createMorphAt(element5, 3, 3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ", ["subexpr", "unless", [["get", "hasPreviousPage", ["loc", [null, [90, 33], [90, 48]]]], "disabled"], [], ["loc", [null, [90, 24], [90, 61]]]], " button prev-page-button"]]], ["element", "action", ["previousPage", ["get", "this.attrs.previousPage", ["loc", [null, [90, 111], [90, 134]]]]], [], ["loc", [null, [90, 87], [90, 136]]]], ["block", "each", [["get", "pages", ["loc", [null, [91, 14], [91, 19]]]]], [], 0, null, ["loc", [null, [91, 6], [101, 15]]]], ["attribute", "class", ["concat", ["ui ", ["subexpr", "unless", [["get", "hasNextPage", ["loc", [null, [102, 33], [102, 44]]]], "disabled"], [], ["loc", [null, [102, 24], [102, 57]]]], " button next-page-button"]]], ["element", "action", ["nextPage", ["get", "this.attrs.nextPage", ["loc", [null, [102, 103], [102, 122]]]]], [], ["loc", [null, [102, 83], [102, 124]]]], ["block", "if", [["get", "showShowingEntries", ["loc", [null, [105, 12], [105, 30]]]]], [], 1, null, ["loc", [null, [105, 6], [113, 13]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [114, 33], [114, 46]]]]], [], []], "value", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [114, 53], [114, 65]]]]], [], []], "class", "compact selection", "onChange", ["subexpr", "action", ["perPageClick"], [], ["loc", [null, [114, 101], [114, 124]]]], "needChecksOnValue", false, "direction", "upward"], ["loc", [null, [114, 6], [114, 169]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 118,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-objectlistview.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["inline", "olv-toolbar", [], ["class", "ui secondary menu no-margin", "createNewButton", ["subexpr", "@mut", [["get", "createNewButton", ["loc", [null, [3, 18], [3, 33]]]]], [], []], "enableCreateNewButton", ["subexpr", "not", [["get", "readonly", ["loc", [null, [4, 29], [4, 37]]]]], [], ["loc", [null, [4, 24], [4, 38]]]], "refreshButton", ["subexpr", "@mut", [["get", "refreshButton", ["loc", [null, [5, 16], [5, 29]]]]], [], []], "deleteButton", ["subexpr", "@mut", [["get", "deleteButton", ["loc", [null, [6, 15], [6, 27]]]]], [], []], "colsConfigButton", ["subexpr", "@mut", [["get", "colsConfigButton", ["loc", [null, [7, 19], [7, 35]]]]], [], []], "enableFilters", ["subexpr", "@mut", [["get", "enableFilters", ["loc", [null, [8, 16], [8, 29]]]]], [], []], "exportExcelButton", ["subexpr", "@mut", [["get", "exportExcelButton", ["loc", [null, [9, 20], [9, 37]]]]], [], []], "showFilters", ["subexpr", "@mut", [["get", "_showFilters", ["loc", [null, [10, 14], [10, 26]]]]], [], []], "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [11, 10], [11, 17]]]]], [], []], "toggleStateFilters", ["subexpr", "action", ["toggleStateFilters"], [], ["loc", [null, [12, 21], [12, 50]]]], "resetFilters", ["subexpr", "action", ["resetFilters", ["get", "this.attrs.resetFilters", ["loc", [null, [13, 38], [13, 61]]]]], [], ["loc", [null, [13, 15], [13, 62]]]], "filterButton", ["subexpr", "@mut", [["get", "filterButton", ["loc", [null, [14, 15], [14, 27]]]]], [], []], "filterText", ["subexpr", "@mut", [["get", "filterText", ["loc", [null, [15, 13], [15, 23]]]]], [], []], "buttonClass", ["subexpr", "@mut", [["get", "buttonClass", ["loc", [null, [16, 14], [16, 25]]]]], [], []], "enableDeleteButton", ["subexpr", "not", [["get", "readonly", ["loc", [null, [17, 26], [17, 34]]]]], [], ["loc", [null, [17, 21], [17, 35]]]], "componentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [18, 16], [18, 29]]]]], [], []], "modelController", ["subexpr", "@mut", [["get", "currentController", ["loc", [null, [19, 18], [19, 35]]]]], [], []], "customButtonAction", "customButtonAction", "customButtons", ["subexpr", "@mut", [["get", "customButtons", ["loc", [null, [21, 16], [21, 29]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [22, 16], [22, 29]]]]], [], []], "showConfigDialog", "showConfigDialog", "confirmDeleteRows", ["subexpr", "@mut", [["get", "confirmDeleteRows", ["loc", [null, [24, 20], [24, 37]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "_inHierarchicalMode", ["loc", [null, [25, 21], [25, 40]]]]], [], []], "availableHierarchicalMode", ["subexpr", "@mut", [["get", "_availableHierarchicalMode", ["loc", [null, [26, 28], [26, 54]]]]], [], []], "switchHierarchicalMode", ["subexpr", "action", ["switchHierarchicalMode"], [], ["loc", [null, [27, 25], [27, 58]]]]], ["loc", [null, [1, 0], [28, 2]]]], ["inline", "object-list-view", [], ["placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [30, 14], [30, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [31, 11], [31, 19]]]]], [], []], "columnsWidthAutoresize", ["subexpr", "@mut", [["get", "columnsWidthAutoresize", ["loc", [null, [32, 25], [32, 47]]]]], [], []], "minAutoColumnWidth", ["subexpr", "@mut", [["get", "minAutoColumnWidth", ["loc", [null, [33, 21], [33, 39]]]]], [], []], "buttonClass", ["subexpr", "@mut", [["get", "buttonClass", ["loc", [null, [34, 14], [34, 25]]]]], [], []], "tableStriped", ["subexpr", "@mut", [["get", "tableStriped", ["loc", [null, [35, 15], [35, 27]]]]], [], []], "customTableClass", ["subexpr", "@mut", [["get", "customTableClass", ["loc", [null, [36, 19], [36, 35]]]]], [], []], "cellComponent", ["subexpr", "@mut", [["get", "cellComponent", ["loc", [null, [37, 16], [37, 29]]]]], [], []], "singleColumnCellComponent", ["subexpr", "@mut", [["get", "singleColumnCellComponent", ["loc", [null, [38, 28], [38, 53]]]]], [], []], "singleColumnHeaderTitle", ["subexpr", "@mut", [["get", "singleColumnHeaderTitle", ["loc", [null, [39, 26], [39, 49]]]]], [], []], "showValidationMessagesInRow", ["subexpr", "and", [["subexpr", "not", [["get", "readonly", ["loc", [null, [40, 40], [40, 48]]]]], [], ["loc", [null, [40, 35], [40, 49]]]], ["get", "showValidationMessagesInRow", ["loc", [null, [40, 50], [40, 77]]]]], [], ["loc", [null, [40, 30], [40, 78]]]], "showAsteriskInRow", ["subexpr", "and", [["subexpr", "not", [["get", "readonly", ["loc", [null, [41, 30], [41, 38]]]]], [], ["loc", [null, [41, 25], [41, 39]]]], ["get", "showAsteriskInRow", ["loc", [null, [41, 40], [41, 57]]]]], [], ["loc", [null, [41, 20], [41, 58]]]], "showCheckBoxInRow", ["subexpr", "and", [["subexpr", "not", [["get", "readonly", ["loc", [null, [42, 30], [42, 38]]]]], [], ["loc", [null, [42, 25], [42, 39]]]], ["get", "showCheckBoxInRow", ["loc", [null, [42, 40], [42, 57]]]]], [], ["loc", [null, [42, 20], [42, 58]]]], "showDeleteButtonInRow", ["subexpr", "and", [["subexpr", "not", [["get", "readonly", ["loc", [null, [43, 34], [43, 42]]]]], [], ["loc", [null, [43, 29], [43, 43]]]], ["get", "showDeleteButtonInRow", ["loc", [null, [43, 44], [43, 65]]]]], [], ["loc", [null, [43, 24], [43, 66]]]], "showEditMenuItemInRow", ["subexpr", "and", [["subexpr", "not", [["get", "readonly", ["loc", [null, [44, 34], [44, 42]]]]], [], ["loc", [null, [44, 29], [44, 43]]]], ["get", "showEditMenuItemInRow", ["loc", [null, [44, 44], [44, 65]]]]], [], ["loc", [null, [44, 24], [44, 66]]]], "showDeleteMenuItemInRow", ["subexpr", "and", [["subexpr", "not", [["get", "readonly", ["loc", [null, [45, 36], [45, 44]]]]], [], ["loc", [null, [45, 31], [45, 45]]]], ["get", "showDeleteMenuItemInRow", ["loc", [null, [45, 46], [45, 69]]]]], [], ["loc", [null, [45, 26], [45, 70]]]], "sendMenuItemAction", ["subexpr", "action", ["sendMenuItemAction"], [], ["loc", [null, [46, 21], [46, 50]]]], "menuInRowAdditionalItems", ["subexpr", "@mut", [["get", "menuInRowAdditionalItems", ["loc", [null, [47, 27], [47, 51]]]]], [], []], "rowClickable", ["subexpr", "and", [["subexpr", "not", [["get", "readonly", ["loc", [null, [48, 25], [48, 33]]]]], [], ["loc", [null, [48, 20], [48, 34]]]], ["get", "rowClickable", ["loc", [null, [48, 35], [48, 47]]]]], [], ["loc", [null, [48, 15], [48, 48]]]], "orderable", ["subexpr", "@mut", [["get", "orderable", ["loc", [null, [49, 12], [49, 21]]]]], [], []], "sorting", ["subexpr", "@mut", [["get", "sorting", ["loc", [null, [50, 10], [50, 17]]]]], [], []], "immediateDelete", true, "modelName", ["subexpr", "@mut", [["get", "modelName", ["loc", [null, [52, 12], [52, 21]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [53, 18], [53, 33]]]]], [], []], "content", ["subexpr", "@mut", [["get", "content", ["loc", [null, [54, 10], [54, 17]]]]], [], []], "sortByColumn", ["subexpr", "action", [["subexpr", "if", [["get", "this.attrs.sortByColumn", ["loc", [null, [55, 27], [55, 50]]]], ["get", "this.attrs.sortByColumn", ["loc", [null, [55, 51], [55, 74]]]], "sortByColumn"], [], ["loc", [null, [55, 23], [55, 90]]]]], [], ["loc", [null, [55, 15], [55, 91]]]], "addColumnToSorting", ["subexpr", "action", [["subexpr", "if", [["get", "this.attrs.addColumnToSorting", ["loc", [null, [56, 33], [56, 62]]]], ["get", "this.attrs.addColumnToSorting", ["loc", [null, [56, 63], [56, 92]]]], "addColumnToSorting"], [], ["loc", [null, [56, 29], [56, 114]]]]], [], ["loc", [null, [56, 21], [56, 115]]]], "enableFilters", ["subexpr", "@mut", [["get", "enableFilters", ["loc", [null, [57, 16], [57, 29]]]]], [], []], "showFilters", ["subexpr", "@mut", [["get", "_showFilters", ["loc", [null, [58, 14], [58, 26]]]]], [], []], "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [59, 10], [59, 17]]]]], [], []], "applyFilters", ["subexpr", "action", [["subexpr", "if", [["get", "applyFilters", ["loc", [null, [60, 27], [60, 39]]]], ["get", "applyFilters", ["loc", [null, [60, 40], [60, 52]]]], "applyFilters"], [], ["loc", [null, [60, 23], [60, 68]]]]], [], ["loc", [null, [60, 15], [60, 69]]]], "componentForFilter", ["subexpr", "@mut", [["get", "componentForFilter", ["loc", [null, [61, 21], [61, 39]]]]], [], []], "conditionsByType", ["subexpr", "@mut", [["get", "conditionsByType", ["loc", [null, [62, 19], [62, 35]]]]], [], []], "filterByAnyMatch", ["subexpr", "action", [["subexpr", "if", [["get", "this.attrs.filterByAnyMatch", ["loc", [null, [63, 31], [63, 58]]]], ["get", "this.attrs.filterByAnyMatch", ["loc", [null, [63, 59], [63, 86]]]], "filterByAnyMatch"], [], ["loc", [null, [63, 27], [63, 106]]]]], [], ["loc", [null, [63, 19], [63, 107]]]], "filterByAnyWord", ["subexpr", "@mut", [["get", "filterByAnyWord", ["loc", [null, [64, 18], [64, 33]]]]], [], []], "filterByAllWords", ["subexpr", "@mut", [["get", "filterByAllWords", ["loc", [null, [65, 19], [65, 35]]]]], [], []], "configurateRow", ["subexpr", "@mut", [["get", "this.attrs.configurateRow", ["loc", [null, [66, 17], [66, 42]]]]], [], []], "configurateSelectedRows", ["subexpr", "@mut", [["get", "this.attrs.configurateSelectedRows", ["loc", [null, [67, 26], [67, 60]]]]], [], []], "confirmDeleteRow", ["subexpr", "@mut", [["get", "confirmDeleteRow", ["loc", [null, [68, 19], [68, 35]]]]], [], []], "beforeDeleteRecord", ["subexpr", "@mut", [["get", "beforeDeleteRecord", ["loc", [null, [69, 21], [69, 39]]]]], [], []], "action", "objectListViewRowClick", "componentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [71, 16], [71, 29]]]]], [], []], "allowColumnResize", ["subexpr", "@mut", [["get", "allowColumnResize", ["loc", [null, [72, 20], [72, 37]]]]], [], []], "selectedRecord", ["subexpr", "@mut", [["get", "selectedRecord", ["loc", [null, [73, 17], [73, 31]]]]], [], []], "notUseUserSettings", ["subexpr", "@mut", [["get", "notUseUserSettings", ["loc", [null, [74, 21], [74, 39]]]]], [], []], "hierarchicalIndent", ["subexpr", "@mut", [["get", "hierarchicalIndent", ["loc", [null, [75, 21], [75, 39]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "_inHierarchicalMode", ["loc", [null, [76, 21], [76, 40]]]]], [], []], "disableHierarchicalMode", ["subexpr", "if", [["get", "hierarchyByAttribute", ["loc", [null, [77, 30], [77, 50]]]], true, ["get", "disableHierarchicalMode", ["loc", [null, [77, 56], [77, 79]]]]], [], ["loc", [null, [77, 26], [77, 80]]]], "loadRecords", ["subexpr", "action", ["loadRecords"], [], ["loc", [null, [78, 14], [78, 36]]]], "availableHierarchicalMode", ["subexpr", "action", ["availableHierarchicalMode"], [], ["loc", [null, [79, 28], [79, 64]]]], "useRowByRowLoading", ["subexpr", "@mut", [["get", "useRowByRowLoading", ["loc", [null, [80, 21], [80, 39]]]]], [], []], "useRowByRowLoadingProgress", ["subexpr", "@mut", [["get", "useRowByRowLoadingProgress", ["loc", [null, [81, 29], [81, 55]]]]], [], []], "eventsBus", ["subexpr", "@mut", [["get", "eventsBus", ["loc", [null, [82, 12], [82, 21]]]]], [], []], "onEditForm", ["subexpr", "@mut", [["get", "onEditForm", ["loc", [null, [83, 13], [83, 23]]]]], [], []], "defaultLeftPadding", ["subexpr", "@mut", [["get", "defaultLeftPadding", ["loc", [null, [84, 21], [84, 39]]]]], [], []], "overflowedComponents", ["subexpr", "@mut", [["get", "overflowedComponents", ["loc", [null, [85, 23], [85, 43]]]]], [], []]], ["loc", [null, [29, 0], [86, 2]]]], ["block", "unless", [["get", "_inHierarchicalMode", ["loc", [null, [87, 10], [87, 29]]]]], [], 0, null, ["loc", [null, [87, 0], [117, 11]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-simpledatetime", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-simpledatetime.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "input", [], ["type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [2, 15], [2, 19]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonlyAttr", ["loc", [null, [2, 29], [2, 41]]]]], [], []], "value", ["subexpr", "@mut", [["get", "_valueAsString", ["loc", [null, [2, 48], [2, 62]]]]], [], []], "min", ["subexpr", "@mut", [["get", "_minAsString", ["loc", [null, [2, 67], [2, 79]]]]], [], []], "max", ["subexpr", "@mut", [["get", "_maxAsString", ["loc", [null, [2, 84], [2, 96]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [2, 109], [2, 120]]]]], [], []]], ["loc", [null, [2, 2], [2, 122]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 6,
                "column": 4
              },
              "end": {
                "line": 13,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-simpledatetime.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "remove icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            morphs[1] = dom.createAttrMorph(element0, 'title');
            morphs[2] = dom.createElementMorph(element0);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui ui-clear ", ["subexpr", "if", [["get", "readonlyAttr", ["loc", [null, [8, 32], [8, 44]]]], " disabled"], [], ["loc", [null, [8, 27], [8, 58]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-lookup.remove-button-text"], [], ["loc", [null, [9, 14], [9, 68]]]]], ["element", "action", ["remove"], [], ["loc", [null, [10, 8], [10, 27]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 15,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-simpledatetime.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui fluid action input flatpickr");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("input");
          dom.setAttribute(el2, "type", "text");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var element2 = dom.childAt(element1, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element2, 'placeholder');
          morphs[1] = dom.createMorphAt(element1, 3, 3);
          return morphs;
        },
        statements: [["attribute", "placeholder", ["get", "placeholder", ["loc", [null, [5, 37], [5, 48]]]]], ["block", "if", [["get", "removeButton", ["loc", [null, [6, 10], [6, 22]]]]], [], 0, null, ["loc", [null, [6, 4], [13, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 16,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-simpledatetime.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["subexpr", "and", [["get", "currentTypeSupported", ["loc", [null, [1, 11], [1, 31]]]], ["get", "useBrowserInput", ["loc", [null, [1, 32], [1, 47]]]]], [], ["loc", [null, [1, 6], [1, 48]]]]], [], 0, 1, ["loc", [null, [1, 0], [15, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/flexberry-simpleolv",["exports"],function(exports){exports["default"] = Ember.HTMLBars.template((function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":2,"column":2},"end":{"line":10,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("button");var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","refresh icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element35=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element35,'class');morphs[1] = dom.createAttrMorph(element35,'title');morphs[2] = dom.createElementMorph(element35);morphs[3] = dom.createMorphAt(element35,1,1);return morphs;},statements:[["attribute","class",["concat",["ui refresh-button ",["get","buttonClass",["loc",[null,[4,33],[4,44]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.refresh-button-text"],[],["loc",[null,[5,12],[5,62]]]]],["element","action",["refresh"],[],["loc",[null,[6,6],[6,26]]]],["inline","t",["components.olv-toolbar.refresh-button-text"],[],["loc",[null,[7,8],[7,58]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":11,"column":2},"end":{"line":18,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("button");var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element34=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element34,'class');morphs[1] = dom.createAttrMorph(element34,'title');morphs[2] = dom.createElementMorph(element34);morphs[3] = dom.createMorphAt(element34,1,1);return morphs;},statements:[["attribute","class",["concat",["ui create-button ",["get","buttonClass",["loc",[null,[13,32],[13,43]]]]," ",["subexpr","if",[["get","enableCreateNewButton",["loc",[null,[13,51],[13,72]]]],"","disabled"],[],["loc",[null,[13,46],[13,88]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.add-button-text"],[],["loc",[null,[14,12],[14,58]]]]],["element","action",["createNew"],[],["loc",[null,[15,6],[15,28]]]],["inline","t",["components.olv-toolbar.add-button-text"],[],["loc",[null,[16,8],[16,54]]]]],locals:[],templates:[]};})();var child2=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":19,"column":2},"end":{"line":26,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("button");var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element33=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element33,'class');morphs[1] = dom.createAttrMorph(element33,'title');morphs[2] = dom.createElementMorph(element33);morphs[3] = dom.createMorphAt(element33,1,1);return morphs;},statements:[["attribute","class",["concat",["ui delete-button ",["get","buttonClass",["loc",[null,[21,32],[21,43]]]]," ",["subexpr","if",[["get","isDeleteButtonEnabled",["loc",[null,[21,51],[21,72]]]],"","disabled"],[],["loc",[null,[21,46],[21,88]]]]," button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.delete-button-text"],[],["loc",[null,[22,12],[22,61]]]]],["element","action",["delete"],[],["loc",[null,[23,7],[23,26]]]],["inline","t",["components.olv-toolbar.delete-button-text"],[],["loc",[null,[24,8],[24,57]]]]],locals:[],templates:[]};})();var child3=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":27,"column":2},"end":{"line":34,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("button");var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","sitemap icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element32=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element32,'class');morphs[1] = dom.createAttrMorph(element32,'title');morphs[2] = dom.createElementMorph(element32);return morphs;},statements:[["attribute","class",["concat",["ui button icon hierarchical-button ",["get","buttonClass",["loc",[null,[29,50],[29,61]]]]," ",["subexpr","if",[["get","inHierarchicalMode",["loc",[null,[29,69],[29,87]]]],"active"],[],["loc",[null,[29,64],[29,98]]]]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.hierarchy-button-text"],[],["loc",[null,[30,12],[30,64]]]]],["element","action",["switchHierarchicalMode"],[],["loc",[null,[31,6],[31,41]]]]],locals:[],templates:[]};})();var child4=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":43,"column":6},"end":{"line":51,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","or");dom.setAttribute(el1,"data-text","•");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n        ");dom.appendChild(el0,el1);var el1=dom.createElement("button");var el2=dom.createTextNode("\n            ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","remove icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element29=dom.childAt(fragment,[3]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element29,'class');morphs[1] = dom.createAttrMorph(element29,'title');morphs[2] = dom.createElementMorph(element29);return morphs;},statements:[["attribute","class",["concat",["ui button removeFilter-button ",["get","buttonClass",["loc",[null,[46,49],[46,60]]]]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.remove-filter-button-text"],[],["loc",[null,[47,16],[47,72]]]]],["element","action",["resetFilters",["get","this.attrs.resetFilters",["loc",[null,[48,34],[48,57]]]]],[],["loc",[null,[48,10],[48,59]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":35,"column":2},"end":{"line":53,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui icon buttons filter-active");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","filter icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element30=dom.childAt(fragment,[1]);var element31=dom.childAt(element30,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element31,'class');morphs[1] = dom.createAttrMorph(element31,'title');morphs[2] = dom.createElementMorph(element31);morphs[3] = dom.createMorphAt(element30,3,3);return morphs;},statements:[["attribute","class",["concat",["ui button ",["get","buttonClass",["loc",[null,[38,27],[38,38]]]]," ",["subexpr","if",[["get","showFilters",["loc",[null,[38,46],[38,57]]]],"active"],[],["loc",[null,[38,41],[38,68]]]]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.filter-button-text"],[],["loc",[null,[39,14],[39,63]]]]],["element","action",["toggleStateFilters"],[],["loc",[null,[40,8],[40,39]]]],["block","if",[["get","filters",["loc",[null,[43,12],[43,19]]]]],[],0,null,["loc",[null,[43,6],[51,13]]]]],locals:[],templates:[child0]};})();var child5=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":54,"column":2},"end":{"line":77,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui action input");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","block-action-input");var el3=dom.createTextNode("\n        ");dom.appendChild(el2,el3);var el3=dom.createElement("input");dom.setAttribute(el3,"type","text");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","search icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","remove icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element25=dom.childAt(fragment,[1]);var element26=dom.childAt(element25,[1,1]);var element27=dom.childAt(element25,[3]);var element28=dom.childAt(element25,[5]);var morphs=new Array(9);morphs[0] = dom.createAttrMorph(element26,'value');morphs[1] = dom.createAttrMorph(element26,'placeholder');morphs[2] = dom.createAttrMorph(element26,'onkeyup');morphs[3] = dom.createAttrMorph(element27,'class');morphs[4] = dom.createAttrMorph(element27,'title');morphs[5] = dom.createElementMorph(element27);morphs[6] = dom.createAttrMorph(element28,'class');morphs[7] = dom.createAttrMorph(element28,'title');morphs[8] = dom.createElementMorph(element28);return morphs;},statements:[["attribute","value",["get","filterByAnyMatchText",["loc",[null,[59,18],[59,38]]]]],["attribute","placeholder",["subexpr","t",["components.olv-toolbar.filter-by-any-match-placeholder"],[],["loc",[null,[60,22],[60,84]]]]],["attribute","onkeyup",["subexpr","action",["filterByAnyMatch"],[],["loc",[null,[61,18],[61,47]]]]],["attribute","class",["concat",["ui ",["get","buttonClass",["loc",[null,[65,20],[65,31]]]]," icon button search-button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.search-button-text"],[],["loc",[null,[66,14],[66,63]]]]],["element","action",["filterByAnyMatch"],[],["loc",[null,[67,8],[67,37]]]],["attribute","class",["concat",["ui ",["get","buttonClass",["loc",[null,[71,20],[71,31]]]]," icon button clear-search-button"]]],["attribute","title",["subexpr","t",["components.olv-toolbar.clear-search-button-text"],[],["loc",[null,[72,14],[72,69]]]]],["element","action",["removeFilter"],[],["loc",[null,[73,8],[73,33]]]]],locals:[],templates:[]};})();var child6=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":78,"column":2},"end":{"line":91,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui buttons export-config");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","large file excel outline icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element23=dom.childAt(fragment,[1]);var element24=dom.childAt(element23,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element24,'class');morphs[1] = dom.createAttrMorph(element24,'title');morphs[2] = dom.createElementMorph(element24);morphs[3] = dom.createMorphAt(element23,3,3);return morphs;},statements:[["attribute","class",["concat",["ui button icon export-button ",["get","buttonClass",["loc",[null,[81,46],[81,57]]]]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.export-excel-button-text"],[],["loc",[null,[82,14],[82,69]]]]],["element","action",["showExportDialog"],[],["loc",[null,[83,8],[83,37]]]],["inline","flexberry-menu",[],["items",["subexpr","@mut",[["get","exportExcelItems",["loc",[null,[87,14],[87,30]]]]],[],[]],"onItemClick",["subexpr","action",["onExportMenuItemClick"],[],["loc",[null,[88,20],[88,52]]]]],["loc",[null,[86,6],[89,8]]]]],locals:[],templates:[]};})();var child7=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":100,"column":6},"end":{"line":105,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","flexberry-menu",[],["items",["subexpr","@mut",[["get","colsSettingsItems",["loc",[null,[102,16],[102,33]]]]],[],[]],"onItemClick",["subexpr","action",["onMenuItemClick"],[],["loc",[null,[103,22],[103,48]]]]],["loc",[null,[101,8],[104,10]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":92,"column":2},"end":{"line":107,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui buttons cols-config");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createElement("button");dom.setAttribute(el2,"class","ui icon button config-button");var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","large table icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n      ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element21=dom.childAt(fragment,[1]);var element22=dom.childAt(element21,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element22,'title');morphs[1] = dom.createElementMorph(element22);morphs[2] = dom.createMorphAt(element21,3,3);return morphs;},statements:[["attribute","title",["subexpr","t",["components.colsconfig-dialog-content.title"],[],["loc",[null,[96,14],[96,64]]]]],["element","action",["showConfigDialog"],[],["loc",[null,[97,8],[97,37]]]],["block","if",[["get","colsSettingsItems",["loc",[null,[100,12],[100,29]]]]],[],0,null,["loc",[null,[100,6],[105,13]]]]],locals:[],templates:[child0]};})();var child8=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":108,"column":2},"end":{"line":115,"column":2}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("    ");dom.appendChild(el0,el1);var el1=dom.createElement("button");var el2=dom.createTextNode("\n      ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n    ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element20=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element20,'class');morphs[1] = dom.createAttrMorph(element20,'title');morphs[2] = dom.createElementMorph(element20);morphs[3] = dom.createMorphAt(element20,1,1);return morphs;},statements:[["attribute","class",["concat",["ui ",["subexpr","if",[["get","customButton.buttonClasses",["loc",[null,[110,21],[110,47]]]],["get","customButton.buttonClasses",["loc",[null,[110,48],[110,74]]]],""],[],["loc",[null,[110,16],[110,79]]]]," button"]]],["attribute","title",["subexpr","if",[["get","customButton.buttonTitle",["loc",[null,[111,17],[111,41]]]],["get","customButton.buttonTitle",["loc",[null,[111,42],[111,66]]]]],[],["loc",[null,[111,12],[111,68]]]]],["element","action",["customButtonAction",["get","customButton.buttonAction",["loc",[null,[112,36],[112,61]]]]],[],["loc",[null,[112,6],[112,63]]]],["inline","if",[["get","customButton.buttonName",["loc",[null,[113,11],[113,34]]]],["get","customButton.buttonName",["loc",[null,[113,35],[113,58]]]],["subexpr","t",["components.olv-toolbar.custom-button-text"],[],["loc",[null,[113,59],[113,106]]]]],[],["loc",[null,[113,6],[113,108]]]]],locals:["customButton"],templates:[]};})();var child9=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":149,"column":8},"end":{"line":151,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createElement("th");dom.setAttribute(el1,"class","object-list-view-operations collapsing");dom.setAttribute(el1,"data-olv-header-property-name","OlvRowToolbar");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child10=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":157,"column":16},"end":{"line":159,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","t",[["get","column.keyLocale",["loc",[null,[158,22],[158,38]]]]],[],["loc",[null,[158,18],[158,40]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":159,"column":16},"end":{"line":161,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["content","column.header",["loc",[null,[160,18],[160,35]]]]],locals:[],templates:[]};})();var child2=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":165,"column":20},"end":{"line":169,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");var el2=dom.createTextNode("\n                      ▲");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element17=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element17,'title');morphs[1] = dom.createMorphAt(element17,1,1);return morphs;},statements:[["attribute","title",["concat",[["subexpr","t",["components.object-list-view.sort-ascending"],[],["loc",[null,[166,34],[166,84]]]]]]],["content","column.sortNumber",["loc",[null,[167,23],[167,44]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":169,"column":20},"end":{"line":173,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");var el2=dom.createTextNode("\n                      ▼");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element16=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element16,'title');morphs[1] = dom.createMorphAt(element16,1,1);return morphs;},statements:[["attribute","title",["concat",[["subexpr","t",["components.object-list-view.sort-descending"],[],["loc",[null,[170,34],[170,85]]]]]]],["content","column.sortNumber",["loc",[null,[171,23],[171,44]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":163,"column":16},"end":{"line":175,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"style","float:right;");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("                  ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["block","if",[["get","column.sortAscending",["loc",[null,[165,26],[165,46]]]]],[],0,1,["loc",[null,[165,20],[173,27]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":153,"column":10},"end":{"line":178,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("th");dom.setAttribute(el1,"class","dt-head-left me class");var el2=dom.createTextNode("\n              ");dom.appendChild(el1,el2);var el2=dom.createElement("div");var el3=dom.createTextNode("\n                ");dom.appendChild(el2,el3);var el3=dom.createElement("span");var el4=dom.createTextNode("\n");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createTextNode("                ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("              ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n            ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element18=dom.childAt(fragment,[1]);var element19=dom.childAt(element18,[1]);var morphs=new Array(5);morphs[0] = dom.createAttrMorph(element18,'onclick');morphs[1] = dom.createAttrMorph(element19,'data-olv-header-property-name');morphs[2] = dom.createAttrMorph(element19,'title');morphs[3] = dom.createMorphAt(dom.childAt(element19,[1]),1,1);morphs[4] = dom.createMorphAt(element19,3,3);return morphs;},statements:[["attribute","onclick",["subexpr","action",["headerCellClick",["get","column",["loc",[null,[154,82],[154,88]]]]],[],["loc",[null,[154,54],[154,91]]]]],["attribute","data-olv-header-property-name",["get","column.propName",["loc",[null,[155,51],[155,66]]]]],["attribute","title",["get","sortTitleCompute",["loc",[null,[155,77],[155,93]]]]],["block","if",[["get","column.keyLocale",["loc",[null,[157,22],[157,38]]]]],[],0,1,["loc",[null,[157,16],[161,23]]]],["block","if",[["get","column.sorted",["loc",[null,[163,22],[163,35]]]]],[],2,null,["loc",[null,[163,16],[175,23]]]]],locals:[],templates:[child0,child1,child2]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":152,"column":8},"end":{"line":179,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","unless",[["get","column.hide",["loc",[null,[153,20],[153,31]]]]],[],0,null,["loc",[null,[153,10],[178,21]]]]],locals:["column"],templates:[child0]};})();var child11=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":180,"column":8},"end":{"line":182,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createElement("th");dom.setAttribute(el1,"class","object-list-view-menu collapsing");dom.setAttribute(el1,"data-olv-header-property-name","OlvRowMenu");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child12=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":188,"column":10},"end":{"line":190,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"rowspan","1");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child1=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":194,"column":16},"end":{"line":202,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","component",["flexberry-dropdown"],["value",["subexpr","@mut",[["get","column.filter.condition",["loc",[null,[196,26],[196,49]]]]],[],[]],"items",["subexpr","@mut",[["get","column.filter.conditions",["loc",[null,[197,26],[197,50]]]]],[],[]],"class","compact fluid","placeholder","","needChecksOnValue",false],["loc",[null,[195,18],[201,20]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":192,"column":12},"end":{"line":204,"column":12}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("              ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"class","overflowed-cell");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("              ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element13=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element13,'style');morphs[1] = dom.createMorphAt(element13,1,1);return morphs;},statements:[["attribute","style",["get","defaultPaddingStyle",["loc",[null,[193,26],[193,45]]]]],["block","if",[["get","column.filter.conditions",["loc",[null,[194,22],[194,46]]]]],[],0,null,["loc",[null,[194,16],[202,23]]]]],locals:[],templates:[child0]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":191,"column":10},"end":{"line":205,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","unless",[["get","column.hide",["loc",[null,[192,22],[192,33]]]]],[],0,null,["loc",[null,[192,12],[204,23]]]]],locals:["column"],templates:[child0]};})();var child2=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":206,"column":10},"end":{"line":208,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"rowspan","1");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child3=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":211,"column":10},"end":{"line":213,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"rowspan","1");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child4=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":217,"column":16},"end":{"line":222,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","component",[["get","column.filter.component.name",["loc",[null,[218,30],[218,58]]]]],["value",["subexpr","@mut",[["get","column.filter.pattern",["loc",[null,[219,26],[219,47]]]]],[],[]],"dynamicProperties",["subexpr","@mut",[["get","column.filter.component.properties",["loc",[null,[220,38],[220,72]]]]],[],[]]],["loc",[null,[218,18],[221,20]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":215,"column":12},"end":{"line":224,"column":12}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("              ");dom.appendChild(el0,el1);var el1=dom.createElement("td");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("              ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element12=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element12,'style');morphs[1] = dom.createAttrMorph(element12,'class');morphs[2] = dom.createMorphAt(element12,1,1);return morphs;},statements:[["attribute","style",["get","defaultPaddingStyle",["loc",[null,[216,26],[216,45]]]]],["attribute","class",["concat",[["subexpr","if",[["subexpr","array-contains",[["get","overflowedComponents",["loc",[null,[216,76],[216,96]]]],["get","column.filter.component.name",["loc",[null,[216,97],[216,125]]]]],[],["loc",[null,[216,60],[216,126]]]],"overflowed-cell"],[],["loc",[null,[216,55],[216,146]]]]]]],["block","if",[["get","column.filter.component.name",["loc",[null,[217,22],[217,50]]]]],[],0,null,["loc",[null,[217,16],[222,23]]]]],locals:[],templates:[child0]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":214,"column":10},"end":{"line":225,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","unless",[["get","column.hide",["loc",[null,[215,22],[215,33]]]]],[],0,null,["loc",[null,[215,12],[224,23]]]]],locals:["column"],templates:[child0]};})();var child5=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":226,"column":10},"end":{"line":228,"column":10}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"rowspan","1");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":186,"column":6},"end":{"line":230,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("tr");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n        ");dom.appendChild(el0,el1);var el1=dom.createElement("tr");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element14=dom.childAt(fragment,[1]);var element15=dom.childAt(fragment,[3]);var morphs=new Array(6);morphs[0] = dom.createMorphAt(element14,1,1);morphs[1] = dom.createMorphAt(element14,2,2);morphs[2] = dom.createMorphAt(element14,3,3);morphs[3] = dom.createMorphAt(element15,1,1);morphs[4] = dom.createMorphAt(element15,2,2);morphs[5] = dom.createMorphAt(element15,3,3);return morphs;},statements:[["block","if",[["get","showHelperColumn",["loc",[null,[188,16],[188,32]]]]],[],0,null,["loc",[null,[188,10],[190,17]]]],["block","each",[["get","columns",["loc",[null,[191,18],[191,25]]]]],[],1,null,["loc",[null,[191,10],[205,19]]]],["block","if",[["get","showMenuColumn",["loc",[null,[206,16],[206,30]]]]],[],2,null,["loc",[null,[206,10],[208,17]]]],["block","if",[["get","showHelperColumn",["loc",[null,[211,16],[211,32]]]]],[],3,null,["loc",[null,[211,10],[213,17]]]],["block","each",[["get","columns",["loc",[null,[214,18],[214,25]]]]],[],4,null,["loc",[null,[214,10],[225,19]]]],["block","if",[["get","showMenuColumn",["loc",[null,[226,16],[226,30]]]]],[],5,null,["loc",[null,[226,10],[228,17]]]]],locals:[],templates:[child0,child1,child2,child3,child4,child5]};})();var child13=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":231,"column":6},"end":{"line":237,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("tr");var el2=dom.createTextNode("\n          ");dom.appendChild(el1,el2);var el2=dom.createElement("td");dom.setAttribute(el2,"style","text-align:center;");var el3=dom.createTextNode("\n              ");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n          ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element11=dom.childAt(fragment,[1,1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element11,'colspan');morphs[1] = dom.createMorphAt(element11,1,1);return morphs;},statements:[["attribute","colspan",["concat",[["get","colspan",["loc",[null,[233,25],[233,32]]]]]]],["content","placeholder",["loc",[null,[234,14],[234,29]]]]],locals:[],templates:[]};})();var child14=(function(){var child0=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":244,"column":20},"end":{"line":248,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","cell");var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element7=dom.childAt(fragment,[1,1]);var morphs=new Array(1);morphs[0] = dom.createAttrMorph(element7,'class');return morphs;},statements:[["attribute","class",["concat",["asterisk small red icon ",["subexpr","unless",[["get","record.data.hasDirtyAttributes",["loc",[null,[246,67],[246,97]]]],"transparent"],[],["loc",[null,[246,58],[246,113]]]]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":249,"column":20},"end":{"line":256,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","cell");var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["inline","flexberry-checkbox",[],["readonly",["subexpr","or",[["get","readonly",["loc",[null,[252,39],[252,47]]]],["subexpr","not",[["get","record.rowConfig.canBeSelected",["loc",[null,[252,53],[252,83]]]]],[],["loc",[null,[252,48],[252,84]]]]],[],["loc",[null,[252,35],[252,85]]]],"onChange",["subexpr","action",["selectRow",["get","record",["loc",[null,[253,55],[253,61]]]]],[],["loc",[null,[253,35],[253,62]]]]],["loc",[null,[251,24],[254,26]]]]],locals:[],templates:[]};})();var child2=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":257,"column":20},"end":{"line":263,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","cell");var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);var el2=dom.createElement("button");var el3=dom.createTextNode("\n                          ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","minus icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n                        ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element6=dom.childAt(fragment,[1,1]);var morphs=new Array(2);morphs[0] = dom.createAttrMorph(element6,'class');morphs[1] = dom.createElementMorph(element6);return morphs;},statements:[["attribute","class",["concat",["ui ui-delete ",["get","buttonClass",["loc",[null,[259,54],[259,65]]]]," ",["subexpr","if",[["subexpr","or",[["get","readonly",["loc",[null,[259,77],[259,85]]]],["subexpr","not",[["get","record.rowConfig.canBeDeleted",["loc",[null,[259,91],[259,120]]]]],[],["loc",[null,[259,86],[259,121]]]]],[],["loc",[null,[259,73],[259,122]]]],"disabled"],[],["loc",[null,[259,68],[259,135]]]]," button"]]],["element","action",["deleteRow",["get","record",["loc",[null,[259,165],[259,171]]]]],[],["loc",[null,[259,144],[259,173]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":242,"column":16},"end":{"line":265,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","object-list-view-helper-column-cell");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("                  ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element8=dom.childAt(fragment,[1]);var morphs=new Array(3);morphs[0] = dom.createMorphAt(element8,1,1);morphs[1] = dom.createMorphAt(element8,2,2);morphs[2] = dom.createMorphAt(element8,3,3);return morphs;},statements:[["block","if",[["get","showAsteriskInRow",["loc",[null,[244,26],[244,43]]]]],[],0,null,["loc",[null,[244,20],[248,27]]]],["block","if",[["get","showCheckBoxInRow",["loc",[null,[249,26],[249,43]]]]],[],1,null,["loc",[null,[249,20],[256,27]]]],["block","if",[["get","showDeleteButtonInRow",["loc",[null,[257,26],[257,47]]]]],[],2,null,["loc",[null,[257,20],[263,27]]]]],locals:[],templates:[child0,child1,child2]};})();var child1=(function(){var child0=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":271,"column":20},"end":{"line":279,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","component",[["get","column.cellComponent.componentName",["loc",[null,[272,34],[272,68]]]]],["dynamicProperties",["subexpr","@mut",[["get","column.cellComponent.componentProperties",["loc",[null,[273,42],[273,82]]]]],[],[]],"relatedModel",["subexpr","@mut",[["get","record.data",["loc",[null,[274,37],[274,48]]]]],[],[]],"value",["subexpr","mut",[["subexpr","get",[["get","record.data",["loc",[null,[275,40],[275,51]]]],["get","column.propName",["loc",[null,[275,52],[275,67]]]]],[],["loc",[null,[275,35],[275,68]]]]],[],["loc",[null,[275,30],[275,69]]]],"readonly",["subexpr","readonly-cell",[["get","record.rowConfig.readonlyColumns",["loc",[null,[276,48],[276,80]]]],["get","column.propName",["loc",[null,[276,81],[276,96]]]],["get","readonly",["loc",[null,[276,97],[276,105]]]]],[],["loc",[null,[276,33],[276,106]]]],"required",["subexpr","@mut",[["get","required",["loc",[null,[277,33],[277,41]]]]],[],[]]],["loc",[null,[272,22],[278,24]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":279,"column":20},"end":{"line":286,"column":20}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","oveflow-text");var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["inline","get-formatted",[["get","record.data",["loc",[null,[281,40],[281,51]]]],["get","column.propName",["loc",[null,[281,52],[281,67]]]]],["dateFormat",["subexpr","@mut",[["get","dateFormat",["loc",[null,[282,37],[282,47]]]]],[],[]],"moment",["subexpr","@mut",[["get","moment",["loc",[null,[283,33],[283,39]]]]],[],[]]],["loc",[null,[281,24],[284,26]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":268,"column":16},"end":{"line":288,"column":16}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                  ");dom.appendChild(el0,el1);var el1=dom.createElement("td");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("                  ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element5=dom.childAt(fragment,[1]);var morphs=new Array(4);morphs[0] = dom.createAttrMorph(element5,'class');morphs[1] = dom.createAttrMorph(element5,'style');morphs[2] = dom.createElementMorph(element5);morphs[3] = dom.createMorphAt(element5,1,1);return morphs;},statements:[["attribute","class",["concat",[["subexpr","if",[["subexpr","array-contains",[["get","overflowedComponents",["loc",[null,[269,50],[269,70]]]],["get","column.cellComponent.componentName",["loc",[null,[269,71],[269,105]]]]],[],["loc",[null,[269,34],[269,106]]]]," overflowed-cell"],[],["loc",[null,[269,29],[269,127]]]]]]],["attribute","style",["get","defaultPaddingStyle",["loc",[null,[270,92],[270,111]]]]],["element","action",["objectListViewRowClick",["get","record",["loc",[null,[270,54],[270,60]]]]],["preventDefault",false],["loc",[null,[270,20],[270,83]]]],["block","if",[["get","column.cellComponent.componentName",["loc",[null,[271,26],[271,60]]]]],[],0,1,["loc",[null,[271,20],[286,27]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":267,"column":14},"end":{"line":289,"column":14}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","unless",[["get","column.hide",["loc",[null,[268,26],[268,37]]]]],[],0,null,["loc",[null,[268,16],[288,27]]]]],locals:["column"],templates:[child0]};})();var child2=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":295,"column":22},"end":{"line":300,"column":22}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                        ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","item");var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","edit icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);var el2=dom.createElement("span");var el3=dom.createComment("");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element2=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createElementMorph(element2);morphs[1] = dom.createMorphAt(dom.childAt(element2,[3]),0,0);return morphs;},statements:[["element","action",["objectListViewRowClick",["get","record",["loc",[null,[296,77],[296,83]]]]],[],["loc",[null,[296,42],[296,86]]]],["inline","t",["components.object-list-view.menu-in-row.edit-menu-item-title"],[],["loc",[null,[298,32],[298,100]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":301,"column":22},"end":{"line":306,"column":22}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                        ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","item");var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);var el2=dom.createElement("i");dom.setAttribute(el2,"class","trash icon");dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                          ");dom.appendChild(el1,el2);var el2=dom.createElement("span");var el3=dom.createComment("");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                        ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element1=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createElementMorph(element1);morphs[1] = dom.createMorphAt(dom.childAt(element1,[3]),0,0);return morphs;},statements:[["element","action",["deleteRow",["get","record",["loc",[null,[302,64],[302,70]]]]],[],["loc",[null,[302,42],[302,73]]]],["inline","t",["components.object-list-view.menu-in-row.delete-menu-item-title"],[],["loc",[null,[304,32],[304,102]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":290,"column":14},"end":{"line":310,"column":14}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("                ");dom.appendChild(el0,el1);var el1=dom.createElement("td");dom.setAttribute(el1,"class","object-list-view-menu");var el2=dom.createTextNode("\n                  ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","right pointing ui icon dropdown button");var el3=dom.createTextNode("\n                    ");dom.appendChild(el2,el3);var el3=dom.createElement("i");dom.setAttribute(el3,"class","list layout icon");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n                    ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","left menu");var el4=dom.createTextNode("\n");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createTextNode("                    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n                  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n                ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element3=dom.childAt(fragment,[1]);var element4=dom.childAt(element3,[1,3]);var morphs=new Array(3);morphs[0] = dom.createAttrMorph(element3,'style');morphs[1] = dom.createMorphAt(element4,1,1);morphs[2] = dom.createMorphAt(element4,2,2);return morphs;},statements:[["attribute","style",["get","defaultPaddingStyle",["loc",[null,[291,58],[291,77]]]]],["block","if",[["subexpr","and",[["get","showEditMenuItemInRow",["loc",[null,[295,33],[295,54]]]],["get","record.rowConfig.canBeSelected",["loc",[null,[295,55],[295,85]]]]],[],["loc",[null,[295,28],[295,86]]]]],[],0,null,["loc",[null,[295,22],[300,29]]]],["block","if",[["subexpr","and",[["get","showDeleteMenuItemInRow",["loc",[null,[301,33],[301,56]]]],["get","record.rowConfig.canBeDeleted",["loc",[null,[301,57],[301,86]]]]],[],["loc",[null,[301,28],[301,87]]]]],[],1,null,["loc",[null,[301,22],[306,29]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":238,"column":8},"end":{"line":312,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("            ");dom.appendChild(el0,el1);var el1=dom.createElement("tr");var el2=dom.createTextNode("\n              ");dom.appendChild(el1,el2);var el2=dom.createElement("td");var el3=dom.createTextNode("\n                ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","hidden");var el4=dom.createComment("");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("              ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("            ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element9=dom.childAt(fragment,[1]);var element10=dom.childAt(element9,[1]);var morphs=new Array(7);morphs[0] = dom.createAttrMorph(element9,'class');morphs[1] = dom.createAttrMorph(element10,'class');morphs[2] = dom.createAttrMorph(element10,'style');morphs[3] = dom.createMorphAt(dom.childAt(element10,[1]),0,0);morphs[4] = dom.createMorphAt(element10,3,3);morphs[5] = dom.createMorphAt(element9,3,3);morphs[6] = dom.createMorphAt(element9,4,4);return morphs;},statements:[["attribute","class",["concat",[["get","record.rowConfig.customClass",["loc",[null,[239,25],[239,53]]]]]]],["attribute","class",["concat",["object-list-view-helper-column ",["subexpr","unless",[["get","showHelperColumn",["loc",[null,[240,65],[240,81]]]],"hidden"],[],["loc",[null,[240,56],[240,92]]]]]]],["attribute","style",["get","defaultPaddingStyle",["loc",[null,[240,102],[240,121]]]]],["content","record.key",["loc",[null,[241,36],[241,50]]]],["block","if",[["get","showHelperColumn",["loc",[null,[242,22],[242,38]]]]],[],0,null,["loc",[null,[242,16],[265,23]]]],["block","each",[["get","columns",["loc",[null,[267,22],[267,29]]]]],[],1,null,["loc",[null,[267,14],[289,23]]]],["block","if",[["get","showMenuColumn",["loc",[null,[290,20],[290,34]]]]],[],2,null,["loc",[null,[290,14],[310,21]]]]],locals:["record"],templates:[child0,child1,child2]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":237,"column":6},"end":{"line":313,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","each",[["get","contentWithKeys",["loc",[null,[238,16],[238,31]]]]],["key","key"],0,null,["loc",[null,[238,8],[312,17]]]]],locals:[],templates:[child0]};})();var child15=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":321,"column":6},"end":{"line":323,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("        ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui button");var el2=dom.createTextNode("...");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(){return [];},statements:[],locals:[],templates:[]};})();var child1=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":324,"column":8},"end":{"line":326,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui active button");var el2=dom.createComment("");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),0,0);return morphs;},statements:[["content","page.number",["loc",[null,[325,40],[325,55]]]]],locals:[],templates:[]};})();var child1=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":326,"column":8},"end":{"line":328,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createElement("button");dom.setAttribute(el1,"class","ui button");var el2=dom.createComment("");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element0=dom.childAt(fragment,[1]);var morphs=new Array(2);morphs[0] = dom.createElementMorph(element0);morphs[1] = dom.createMorphAt(element0,0,0);return morphs;},statements:[["element","action",["gotoPage",["get","this.attrs.gotoPage",["loc",[null,[327,56],[327,75]]]],["get","page.number",["loc",[null,[327,76],[327,87]]]]],[],["loc",[null,[327,36],[327,89]]]],["content","page.number",["loc",[null,[327,90],[327,105]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":323,"column":6},"end":{"line":329,"column":6}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","if",[["get","page.isCurrent",["loc",[null,[324,14],[324,28]]]]],[],0,1,["loc",[null,[324,8],[328,15]]]]],locals:[],templates:[child0,child1]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":320,"column":4},"end":{"line":330,"column":4}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:1,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createComment("");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,0,0,contextualElement);dom.insertBoundary(fragment,0);dom.insertBoundary(fragment,null);return morphs;},statements:[["block","if",[["get","page.isEllipsis",["loc",[null,[321,12],[321,27]]]]],[],0,1,["loc",[null,[321,6],[329,13]]]]],locals:["page"],templates:[child0,child1]};})();var child16=(function(){var child0=(function(){return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":336,"column":8},"end":{"line":340,"column":8}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("          ");dom.appendChild(el0,el1);var el1=dom.createComment("");dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(fragment,1,1,contextualElement);return morphs;},statements:[["inline","concat",[["subexpr","t",["components.flexberry-objectlistview.showing-entries.showing"],[],["loc",[null,[338,12],[338,77]]]],["get","currentIntervalRecords",["loc",[null,[338,78],[338,100]]]],["subexpr","t",["components.flexberry-objectlistview.showing-entries.of"],[],["loc",[null,[338,101],[338,161]]]],["get","recordsTotalCount",["loc",[null,[338,162],[338,179]]]],["subexpr","t",["components.flexberry-objectlistview.showing-entries.entries"],[],["loc",[null,[338,180],[338,245]]]]],[],["loc",[null,[337,10],[339,12]]]]],locals:[],templates:[]};})();return {meta:{"fragmentReason":false,"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":334,"column":4},"end":{"line":342,"column":4}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createTextNode("      ");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","showing-entries");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("      ");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var morphs=new Array(1);morphs[0] = dom.createMorphAt(dom.childAt(fragment,[1]),1,1);return morphs;},statements:[["block","if",[["subexpr","and",[["get","currentIntervalRecords",["loc",[null,[336,19],[336,41]]]],["get","recordsTotalCount",["loc",[null,[336,42],[336,59]]]]],[],["loc",[null,[336,14],[336,60]]]]],[],0,null,["loc",[null,[336,8],[340,15]]]]],locals:[],templates:[child0]};})();return {meta:{"fragmentReason":{"name":"missing-wrapper","problems":["multiple-nodes"]},"revision":"Ember@2.4.6","loc":{"source":null,"start":{"line":1,"column":0},"end":{"line":346,"column":0}},"moduleName":"dummy/templates/components/flexberry-simpleolv.hbs"},isEmpty:false,arity:0,cachedFragment:null,hasRendered:false,buildFragment:function buildFragment(dom){var el0=dom.createDocumentFragment();var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui secondary menu no-margin ");var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createComment("");dom.appendChild(el1,el2);var el2=dom.createTextNode("  ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","olv-toolbar-info-modal-dialog ui small basic modal");var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","ui icon header");var el4=dom.createTextNode("\n      ");dom.appendChild(el3,el4);var el4=dom.createElement("i");dom.setAttribute(el4,"class","olvt icon");dom.appendChild(el3,el4);var el4=dom.createTextNode("\n      ");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","center aligned ui grid");var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);var el4=dom.createElement("button");dom.setAttribute(el4,"class","ui icon button");dom.setAttribute(el4,"id","OLVToolbarInfoCopyButton");var el5=dom.createTextNode("\n        ");dom.appendChild(el4,el5);var el5=dom.createElement("i");dom.setAttribute(el5,"class","copy icon");dom.appendChild(el4,el5);var el5=dom.createTextNode("\n        ");dom.appendChild(el4,el5);var el5=dom.createComment("");dom.appendChild(el4,el5);var el5=dom.createTextNode("\n    ");dom.appendChild(el4,el5);dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);var el4=dom.createElement("div");dom.setAttribute(el4,"class","actions");var el5=dom.createTextNode("\n      ");dom.appendChild(el4,el5);var el5=dom.createElement("div");dom.setAttribute(el5,"class","olv-toolbar-info-modal-dialog-ok-button ui approve green inverted button");var el6=dom.createTextNode("\n        ");dom.appendChild(el5,el6);var el6=dom.createElement("i");dom.setAttribute(el6,"class","remove icon");dom.appendChild(el5,el6);var el6=dom.createTextNode("\n        ");dom.appendChild(el5,el6);var el6=dom.createComment("");dom.appendChild(el5,el6);var el6=dom.createTextNode("\n      ");dom.appendChild(el5,el6);dom.appendChild(el4,el5);var el5=dom.createTextNode("\n    ");dom.appendChild(el4,el5);dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("div");dom.setAttribute(el3,"class","ui form");var el4=dom.createTextNode("\n      ");dom.appendChild(el3,el4);var el4=dom.createElement("div");dom.setAttribute(el4,"class","olv-toolbar-info-modal-dialog-content center aligned ui field");var el5=dom.createTextNode("\n        ");dom.appendChild(el4,el5);var el5=dom.createElement("textarea");dom.setAttribute(el5,"id","OLVToolbarInfoContent");dom.setAttribute(el5,"cols","80");dom.setAttribute(el5,"rows","20");var el6=dom.createComment("");dom.appendChild(el5,el6);dom.appendChild(el4,el5);var el5=dom.createTextNode("\n      ");dom.appendChild(el4,el5);dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n\n");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","object-list-view-container");var el2=dom.createTextNode("\n  ");dom.appendChild(el1,el2);var el2=dom.createElement("table");var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("thead");var el4=dom.createTextNode("\n      ");dom.appendChild(el3,el4);var el4=dom.createElement("tr");var el5=dom.createTextNode("\n");dom.appendChild(el4,el5);var el5=dom.createComment("");dom.appendChild(el4,el5);var el5=dom.createComment("");dom.appendChild(el4,el5);var el5=dom.createComment("");dom.appendChild(el4,el5);var el5=dom.createTextNode("      ");dom.appendChild(el4,el5);dom.appendChild(el3,el4);var el4=dom.createTextNode("\n    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("tbody");var el4=dom.createTextNode("\n");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createComment("");dom.appendChild(el3,el4);var el4=dom.createTextNode("    ");dom.appendChild(el3,el4);dom.appendChild(el2,el3);var el3=dom.createTextNode("\n  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);var el1=dom.createElement("div");dom.setAttribute(el1,"class","ui secondary menu no-margin nav-bar");var el2=dom.createTextNode("\n  ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","ui basic buttons");var el3=dom.createTextNode("\n    ");dom.appendChild(el2,el3);var el3=dom.createElement("button");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("    ");dom.appendChild(el2,el3);var el3=dom.createElement("button");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n  ");dom.appendChild(el1,el2);var el2=dom.createElement("div");dom.setAttribute(el2,"class","right menu");var el3=dom.createTextNode("\n");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("    ");dom.appendChild(el2,el3);var el3=dom.createComment("");dom.appendChild(el2,el3);var el3=dom.createTextNode("\n  ");dom.appendChild(el2,el3);dom.appendChild(el1,el2);var el2=dom.createTextNode("\n");dom.appendChild(el1,el2);dom.appendChild(el0,el1);var el1=dom.createTextNode("\n");dom.appendChild(el0,el1);return el0;},buildRenderNodes:function buildRenderNodes(dom,fragment,contextualElement){var element36=dom.childAt(fragment,[0]);var element37=dom.childAt(element36,[11]);var element38=dom.childAt(element37,[3]);var element39=dom.childAt(element38,[1]);var element40=dom.childAt(fragment,[2,1]);var element41=dom.childAt(element40,[1,1]);var element42=dom.childAt(element40,[3]);var element43=dom.childAt(fragment,[4]);var element44=dom.childAt(element43,[1]);var element45=dom.childAt(element44,[1]);var element46=dom.childAt(element44,[5]);var element47=dom.childAt(element43,[3]);var morphs=new Array(28);morphs[0] = dom.createMorphAt(element36,1,1);morphs[1] = dom.createMorphAt(element36,2,2);morphs[2] = dom.createMorphAt(element36,3,3);morphs[3] = dom.createMorphAt(element36,4,4);morphs[4] = dom.createMorphAt(element36,5,5);morphs[5] = dom.createMorphAt(element36,6,6);morphs[6] = dom.createMorphAt(element36,7,7);morphs[7] = dom.createMorphAt(element36,8,8);morphs[8] = dom.createMorphAt(element36,9,9);morphs[9] = dom.createMorphAt(dom.childAt(element37,[1]),3,3);morphs[10] = dom.createAttrMorph(element39,'title');morphs[11] = dom.createElementMorph(element39);morphs[12] = dom.createMorphAt(element39,3,3);morphs[13] = dom.createMorphAt(dom.childAt(element38,[3,1]),3,3);morphs[14] = dom.createMorphAt(dom.childAt(element37,[5,1,1]),0,0);morphs[15] = dom.createAttrMorph(element40,'class');morphs[16] = dom.createMorphAt(element41,1,1);morphs[17] = dom.createMorphAt(element41,2,2);morphs[18] = dom.createMorphAt(element41,3,3);morphs[19] = dom.createMorphAt(element42,1,1);morphs[20] = dom.createMorphAt(element42,2,2);morphs[21] = dom.createAttrMorph(element45,'class');morphs[22] = dom.createElementMorph(element45);morphs[23] = dom.createMorphAt(element44,3,3);morphs[24] = dom.createAttrMorph(element46,'class');morphs[25] = dom.createElementMorph(element46);morphs[26] = dom.createMorphAt(element47,1,1);morphs[27] = dom.createMorphAt(element47,3,3);return morphs;},statements:[["block","if",[["get","refreshButton",["loc",[null,[2,8],[2,21]]]]],[],0,null,["loc",[null,[2,2],[10,9]]]],["block","if",[["get","createNewButton",["loc",[null,[11,8],[11,23]]]]],[],1,null,["loc",[null,[11,2],[18,9]]]],["block","if",[["get","deleteButton",["loc",[null,[19,8],[19,20]]]]],[],2,null,["loc",[null,[19,2],[26,9]]]],["block","if",[["get","availableHierarchicalMode",["loc",[null,[27,8],[27,33]]]]],[],3,null,["loc",[null,[27,2],[34,9]]]],["block","if",[["get","enableFilters",["loc",[null,[35,8],[35,21]]]]],[],4,null,["loc",[null,[35,2],[53,9]]]],["block","if",[["get","filterButton",["loc",[null,[54,8],[54,20]]]]],[],5,null,["loc",[null,[54,2],[77,9]]]],["block","if",[["get","exportExcelButton",["loc",[null,[78,8],[78,25]]]]],[],6,null,["loc",[null,[78,2],[91,9]]]],["block","if",[["get","colsConfigButton",["loc",[null,[92,8],[92,24]]]]],[],7,null,["loc",[null,[92,2],[107,9]]]],["block","each",[["get","customButtons",["loc",[null,[108,10],[108,23]]]]],[],8,null,["loc",[null,[108,2],[115,11]]]],["content","_infoModalDialogCaption",["loc",[null,[119,6],[119,33]]]],["attribute","title",["subexpr","t",["components.olv-toolbar.copy"],[],["loc",[null,[124,12],[124,47]]]]],["element","action",["copyJSONContent"],[],["loc",[null,[125,6],[125,34]]]],["inline","t",["components.olv-toolbar.copy"],[],["loc",[null,[128,8],[128,43]]]],["inline","t",["components.olv-toolbar.close"],[],["loc",[null,[133,8],[133,44]]]],["content","_infoModalDialogContent",["loc",[null,[139,65],[139,92]]]],["attribute","class",["concat",["object-list-view ui unstackable celled ",["subexpr","if",[["get","readonly",["loc",[null,[146,60],[146,68]]]],"readonly"],[],["loc",[null,[146,55],[146,81]]]]," ",["get","tableClass",["loc",[null,[146,84],[146,94]]]]," table"]]],["block","if",[["get","showHelperColumn",["loc",[null,[149,14],[149,30]]]]],[],9,null,["loc",[null,[149,8],[151,15]]]],["block","each",[["get","columns",["loc",[null,[152,16],[152,23]]]]],[],10,null,["loc",[null,[152,8],[179,17]]]],["block","if",[["get","showMenuColumn",["loc",[null,[180,14],[180,28]]]]],[],11,null,["loc",[null,[180,8],[182,15]]]],["block","if",[["get","showFilters",["loc",[null,[186,12],[186,23]]]]],[],12,null,["loc",[null,[186,6],[230,13]]]],["block","unless",[["get","content",["loc",[null,[231,16],[231,23]]]]],[],13,14,["loc",[null,[231,6],[313,17]]]],["attribute","class",["concat",["ui ",["subexpr","unless",[["get","hasPreviousPage",["loc",[null,[319,31],[319,46]]]],"disabled"],[],["loc",[null,[319,22],[319,59]]]]," button prev-page-button"]]],["element","action",["previousPage",["get","this.attrs.previousPage",["loc",[null,[319,109],[319,132]]]]],[],["loc",[null,[319,85],[319,134]]]],["block","each",[["get","pages",["loc",[null,[320,12],[320,17]]]]],[],15,null,["loc",[null,[320,4],[330,13]]]],["attribute","class",["concat",["ui ",["subexpr","unless",[["get","hasNextPage",["loc",[null,[331,31],[331,42]]]],"disabled"],[],["loc",[null,[331,22],[331,55]]]]," button next-page-button"]]],["element","action",["nextPage",["get","this.attrs.nextPage",["loc",[null,[331,101],[331,120]]]]],[],["loc",[null,[331,81],[331,122]]]],["block","if",[["get","showShowingEntries",["loc",[null,[334,10],[334,28]]]]],[],16,null,["loc",[null,[334,4],[342,11]]]],["inline","flexberry-dropdown",[],["items",["subexpr","@mut",[["get","perPageValues",["loc",[null,[343,31],[343,44]]]]],[],[]],"value",["subexpr","@mut",[["get","perPageValue",["loc",[null,[343,51],[343,63]]]]],[],[]],"class","compact selection","onChange",["subexpr","action",["perPageClick"],[],["loc",[null,[343,99],[343,122]]]],"needChecksOnValue",false,"direction","upward"],["loc",[null,[343,4],[343,167]]]]],locals:[],templates:[child0,child1,child2,child3,child4,child5,child6,child7,child8,child9,child10,child11,child12,child13,child14,child15,child16]};})());});
define("dummy/templates/components/flexberry-tab-bar", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 6,
                "column": 4
              },
              "end": {
                "line": 8,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tab-bar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("i");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(1);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            return morphs;
          },
          statements: [["attribute", "class", ["concat", [["subexpr", "concat", [["get", "flexberryClassNames.tabIcon", ["loc", [null, [7, 25], [7, 52]]]], " ", ["get", "item.iconClass", ["loc", [null, [7, 57], [7, 71]]]]], [], ["loc", [null, [7, 16], [7, 73]]]]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 8,
                "column": 4
              },
              "end": {
                "line": 10,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tab-bar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["content", "item.caption", ["loc", [null, [9, 6], [9, 22]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "modifiers",
            "modifiers": ["action"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-tab-bar.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("a");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(5);
          morphs[0] = dom.createAttrMorph(element1, 'class');
          morphs[1] = dom.createAttrMorph(element1, 'title');
          morphs[2] = dom.createAttrMorph(element1, 'data-tab');
          morphs[3] = dom.createElementMorph(element1);
          morphs[4] = dom.createMorphAt(element1, 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["subexpr", "concat", [["get", "flexberryClassNames.tab", ["loc", [null, [2, 21], [2, 44]]]], " ", "tab", " ", "item", " ", ["get", "item.class", ["loc", [null, [2, 70], [2, 80]]]]], [], ["loc", [null, [2, 12], [2, 82]]]]]]], ["attribute", "title", ["concat", [["get", "item.caption", ["loc", [null, [3, 13], [3, 25]]]]]]], ["attribute", "data-tab", ["concat", [["get", "item.selector", ["loc", [null, [4, 16], [4, 29]]]]]]], ["element", "action", ["change", ["get", "item.selector", ["loc", [null, [5, 22], [5, 35]]]]], ["on", "click"], ["loc", [null, [5, 4], [5, 48]]]], ["block", "if", [["get", "item._hasIcon", ["loc", [null, [6, 10], [6, 23]]]]], [], 0, 1, ["loc", [null, [6, 4], [10, 11]]]]],
        locals: ["item"],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 13,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-tab-bar.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "each", [["get", "tabs", ["loc", [null, [1, 8], [1, 12]]]]], [], 0, null, ["loc", [null, [1, 0], [12, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/flexberry-textarea", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-textarea.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "textarea", [], ["value", ["subexpr", "@mut", [["get", "value", ["loc", [null, [2, 8], [2, 13]]]]], [], []], "readonly", ["subexpr", "if", [["get", "readonly", ["loc", [null, [3, 15], [3, 23]]]], "readonly"], [], ["loc", [null, [3, 11], [3, 35]]]], "required", ["subexpr", "if", [["get", "required", ["loc", [null, [4, 15], [4, 23]]]], "required"], [], ["loc", [null, [4, 11], [4, 35]]]], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [5, 14], [5, 25]]]]], [], []], "rows", ["subexpr", "@mut", [["get", "rows", ["loc", [null, [6, 7], [6, 11]]]]], [], []], "cols", ["subexpr", "@mut", [["get", "cols", ["loc", [null, [7, 7], [7, 11]]]]], [], []], "disabled", ["subexpr", "if", [["get", "disabled", ["loc", [null, [8, 15], [8, 23]]]], "disabled"], [], ["loc", [null, [8, 11], [8, 35]]]], "maxlength", ["subexpr", "@mut", [["get", "maxlength", ["loc", [null, [9, 12], [9, 21]]]]], [], []], "selectionEnd", ["subexpr", "@mut", [["get", "selectionEnd", ["loc", [null, [10, 15], [10, 27]]]]], [], []], "selectionStart", ["subexpr", "@mut", [["get", "selectionStart", ["loc", [null, [11, 17], [11, 31]]]]], [], []], "selectionDirection", ["subexpr", "@mut", [["get", "selectionDirection", ["loc", [null, [12, 21], [12, 39]]]]], [], []], "wrap", ["subexpr", "@mut", [["get", "wrap", ["loc", [null, [13, 7], [13, 11]]]]], [], []], "autofocus", ["subexpr", "if", [["get", "autofocus", ["loc", [null, [14, 16], [14, 25]]]], "autofocus"], [], ["loc", [null, [14, 12], [14, 38]]]], "spellcheck", ["subexpr", "if", [["get", "spellcheck", ["loc", [null, [15, 17], [15, 27]]]], "spellcheck"], [], ["loc", [null, [15, 13], [15, 41]]]]], ["loc", [null, [1, 0], [16, 2]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-textbox", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 10,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-textbox.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "input", [], ["type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [3, 9], [3, 13]]]]], [], []], "value", ["subexpr", "get", [["get", "this", ["loc", [null, [4, 15], [4, 19]]]], "value"], [], ["loc", [null, [4, 10], [4, 28]]]], "readonly", "readonly", "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [6, 13], [6, 21]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [7, 16], [7, 27]]]]], [], []], "maxlength", ["subexpr", "@mut", [["get", "maxlength", ["loc", [null, [8, 14], [8, 23]]]]], [], []]], ["loc", [null, [2, 2], [9, 4]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 0
            },
            "end": {
              "line": 18,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-textbox.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "input", [], ["type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [12, 9], [12, 13]]]]], [], []], "value", ["subexpr", "@mut", [["get", "value", ["loc", [null, [13, 10], [13, 15]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [14, 13], [14, 21]]]]], [], []], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [15, 16], [15, 27]]]]], [], []], "maxlength", ["subexpr", "@mut", [["get", "maxlength", ["loc", [null, [16, 14], [16, 23]]]]], [], []]], ["loc", [null, [11, 2], [17, 4]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-textbox.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "readonly", ["loc", [null, [1, 6], [1, 14]]]]], [], 0, 1, ["loc", [null, [1, 0], [18, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/flexberry-toggler", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-toggler.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("i");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("span");
        dom.setAttribute(el2, "class", "flexberry-toggler-caption");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var element1 = dom.childAt(element0, [1]);
        var element2 = dom.childAt(fragment, [2]);
        var morphs = new Array(5);
        morphs[0] = dom.createAttrMorph(element0, 'class');
        morphs[1] = dom.createAttrMorph(element1, 'class');
        morphs[2] = dom.createMorphAt(dom.childAt(element0, [2]), 0, 0);
        morphs[3] = dom.createAttrMorph(element2, 'class');
        morphs[4] = dom.createMorphAt(element2, 0, 0);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["title ", ["subexpr", "if", [["get", "expanded", ["loc", [null, [1, 23], [1, 31]]]], "active"], [], ["loc", [null, [1, 18], [1, 42]]]]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "iconClass", ["loc", [null, [2, 17], [2, 26]]]], ["get", "iconClass", ["loc", [null, [2, 27], [2, 36]]]], "dropdown icon"], [], ["loc", [null, [2, 12], [2, 55]]]]]]], ["content", "currentCaption", ["loc", [null, [2, 101], [2, 119]]]], ["attribute", "class", ["concat", ["content flexberry-toggler-content ", ["subexpr", "if", [["get", "expanded", ["loc", [null, [4, 51], [4, 59]]]], "active"], [], ["loc", [null, [4, 46], [4, 70]]]]]]], ["content", "yield", ["loc", [null, [4, 72], [4, 81]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-tree", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 8,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tree.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element2, 'class');
            morphs[1] = dom.createMorphAt(element2, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", [["get", "flexberryClassNames.header", ["loc", [null, [9, 18], [9, 44]]]]]]], ["content", "yield", ["loc", [null, [10, 6], [10, 15]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-tree.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "_hasHeader", ["loc", [null, [8, 8], [8, 18]]]]], [], 0, null, ["loc", [null, [8, 2], [12, 9]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 15,
                "column": 2
              },
              "end": {
                "line": 22,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tree.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-treenode", [], ["caption", ["subexpr", "@mut", [["get", "node.caption", ["loc", [null, [17, 14], [17, 26]]]]], [], []], "nodes", ["subexpr", "@mut", [["get", "node.nodes", ["loc", [null, [18, 12], [18, 22]]]]], [], []], "dynamicProperties", ["subexpr", "@mut", [["get", "node.dynamicProperties", ["loc", [null, [19, 24], [19, 46]]]]], [], []], "dynamicActions", ["subexpr", "@mut", [["get", "node.dynamicActions", ["loc", [null, [20, 21], [20, 40]]]]], [], []]], ["loc", [null, [16, 4], [21, 6]]]]],
          locals: ["node"],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 23,
                "column": 2
              },
              "end": {
                "line": 25,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tree.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["content", "yield", ["loc", [null, [24, 4], [24, 13]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 14,
              "column": 0
            },
            "end": {
              "line": 26,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-tree.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "nodes", ["loc", [null, [15, 10], [15, 15]]]]], [], 0, null, ["loc", [null, [15, 2], [22, 11]]]], ["block", "yield-slot", ["content"], [], 1, null, ["loc", [null, [23, 2], [25, 17]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 26,
                "column": 0
              },
              "end": {
                "line": 30,
                "column": 0
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tree.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("  ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n  ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element1, 'class');
            morphs[1] = dom.createMorphAt(element1, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", [["get", "flexberryClassNames.placeholder", ["loc", [null, [27, 16], [27, 47]]]], " title"]]], ["content", "placeholder", ["loc", [null, [28, 4], [28, 19]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 26,
              "column": 0
            },
            "end": {
              "line": 30,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-tree.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "_isRoot", ["loc", [null, [26, 10], [26, 17]]]]], [], 0, null, ["loc", [null, [26, 0], [30, 0]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 32,
                "column": 2
              },
              "end": {
                "line": 36,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/flexberry-tree.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", [["get", "flexberryClassNames.footer", ["loc", [null, [33, 18], [33, 44]]]]]]], ["content", "yield", ["loc", [null, [34, 6], [34, 15]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 31,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/flexberry-tree.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "if", [["get", "_hasFooter", ["loc", [null, [32, 8], [32, 18]]]]], [], 0, null, ["loc", [null, [32, 2], [36, 9]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-tree.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(4);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
        morphs[3] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [5, 0], [5, 9]]]], ["block", "yield-slot", ["header"], [], 0, null, ["loc", [null, [7, 0], [13, 15]]]], ["block", "if", [["get", "_hasContent", ["loc", [null, [14, 6], [14, 17]]]]], [], 1, 2, ["loc", [null, [14, 0], [30, 7]]]], ["block", "yield-slot", ["footer"], [], 3, null, ["loc", [null, [31, 0], [37, 15]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define("dummy/templates/components/flexberry-treenode", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 4
            },
            "end": {
              "line": 12,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/flexberry-treenode.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element1, 'class');
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["get", "flexberryClassNames.expandCollapseIcon", ["loc", [null, [11, 18], [11, 56]]]], " dropdown icon"]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 4
            },
            "end": {
              "line": 15,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/flexberry-treenode.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1, "style", "visibility: hidden;");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["get", "flexberryClassNames.expandCollapseIcon", ["loc", [null, [14, 18], [14, 56]]]], " dropdown icon"]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 17,
              "column": 4
            },
            "end": {
              "line": 19,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/flexberry-treenode.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "yield", ["loc", [null, [18, 6], [18, 15]]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 22,
              "column": 2
            },
            "end": {
              "line": 26,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/components/flexberry-treenode.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "flexberry-tree", [], ["nodes", ["subexpr", "@mut", [["get", "nodes", ["loc", [null, [24, 12], [24, 17]]]]], [], []]], ["loc", [null, [23, 4], [25, 6]]]]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/components/flexberry-treenode.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["content", "yield", ["loc", [null, [28, 4], [28, 13]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 31,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-treenode.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("    ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var element3 = dom.childAt(fragment, [4]);
        var morphs = new Array(9);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createAttrMorph(element2, 'onclick');
        morphs[3] = dom.createMorphAt(element2, 1, 1);
        morphs[4] = dom.createMorphAt(element2, 3, 3);
        morphs[5] = dom.createMorphAt(element2, 5, 5);
        morphs[6] = dom.createAttrMorph(element3, 'class');
        morphs[7] = dom.createMorphAt(element3, 1, 1);
        morphs[8] = dom.createMorphAt(element3, 2, 2);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [5, 0], [5, 9]]]], ["attribute", "class", ["concat", [["get", "flexberryClassNames.header", ["loc", [null, [8, 11], [8, 37]]]], " title"]]], ["attribute", "onclick", ["subexpr", "action", ["onHeaderClick"], ["preventDefault", false], ["loc", [null, [9, 10], [9, 57]]]]], ["block", "if", [["get", "_hasContent", ["loc", [null, [10, 10], [10, 21]]]]], [], 0, 1, ["loc", [null, [10, 4], [15, 11]]]], ["content", "caption", ["loc", [null, [16, 4], [16, 15]]]], ["block", "yield-slot", ["header"], [], 2, null, ["loc", [null, [17, 4], [19, 19]]]], ["attribute", "class", ["concat", [["get", "flexberryClassNames.content", ["loc", [null, [21, 14], [21, 41]]]], " content"]]], ["block", "if", [["get", "_hasNodes", ["loc", [null, [22, 8], [22, 17]]]]], [], 3, null, ["loc", [null, [22, 2], [26, 9]]]], ["block", "yield-slot", ["content"], [], 4, null, ["loc", [null, [27, 2], [29, 17]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  })());
});
define("dummy/templates/components/flexberry-validationmessage", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-validationmessage.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "error", ["loc", [null, [1, 0], [1, 9]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/flexberry-validationsummary", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 2
            },
            "end": {
              "line": 5,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/components/flexberry-validationsummary.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("li");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["content", "message", ["loc", [null, [4, 8], [4, 19]]]]],
        locals: ["message"],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/flexberry-validationsummary.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("ul");
        dom.setAttribute(el1, "class", "list");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "headerText", ["loc", [null, [1, 0], [1, 14]]]], ["block", "each", [["get", "messages", ["loc", [null, [3, 10], [3, 18]]]]], [], 0, null, ["loc", [null, [3, 2], [5, 11]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/form-load-time-tracker", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/form-load-time-tracker.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(": ");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(": ");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("br");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);
        morphs[3] = dom.createMorphAt(fragment, 7, 7, contextualElement);
        morphs[4] = dom.createMorphAt(fragment, 10, 10, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "t", ["components.form-load-time-tracker.load-time"], [], ["loc", [null, [1, 0], [1, 51]]]], ["content", "loadTime", ["loc", [null, [1, 53], [1, 65]]]], ["inline", "t", ["components.form-load-time-tracker.render-time"], [], ["loc", [null, [2, 0], [2, 53]]]], ["content", "renderTime", ["loc", [null, [2, 55], [2, 69]]]], ["content", "yield", ["loc", [null, [3, 0], [3, 9]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/groupedit-toolbar", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "modifiers",
            "modifiers": ["action"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/groupedit-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "plus icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element1, 'class');
          morphs[1] = dom.createAttrMorph(element1, 'title');
          morphs[2] = dom.createAttrMorph(element1, 'disabled');
          morphs[3] = dom.createElementMorph(element1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ui-add ", ["get", "buttonClass", ["loc", [null, [3, 23], [3, 34]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.groupedit-toolbar.add-button-text"], [], ["loc", [null, [4, 10], [4, 62]]]]], ["attribute", "disabled", ["get", "readonly", ["loc", [null, [5, 15], [5, 23]]]]], ["element", "action", ["addRow"], [], ["loc", [null, [5, 26], [5, 45]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 9,
              "column": 0
            },
            "end": {
              "line": 16,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/groupedit-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "minus icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createAttrMorph(element0, 'title');
          morphs[2] = dom.createAttrMorph(element0, 'disabled');
          morphs[3] = dom.createElementMorph(element0);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ui-delete ", ["subexpr", "if", [["get", "_isDeleteRowsEnabled", ["loc", [null, [11, 29], [11, 49]]]], "", "disabled"], [], ["loc", [null, [11, 24], [11, 65]]]], " ", ["get", "buttonClass", ["loc", [null, [11, 68], [11, 79]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.groupedit-toolbar.delete-button-text"], [], ["loc", [null, [12, 10], [12, 65]]]]], ["attribute", "disabled", ["get", "readonly", ["loc", [null, [13, 15], [13, 23]]]]], ["element", "action", ["deleteRows"], [], ["loc", [null, [13, 26], [13, 49]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/groupedit-toolbar.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "createNewButton", ["loc", [null, [1, 6], [1, 21]]]]], [], 0, null, ["loc", [null, [1, 0], [8, 7]]]], ["block", "if", [["get", "deleteButton", ["loc", [null, [9, 6], [9, 18]]]]], [], 1, null, ["loc", [null, [9, 0], [16, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/modal-dialog", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 7,
                "column": 4
              },
              "end": {
                "line": 11,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/modal-dialog.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "ui centered image");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["content", "yield", ["loc", [null, [9, 8], [9, 17]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 11,
                "column": 4
              },
              "end": {
                "line": 15,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/modal-dialog.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "description");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["content", "yield", ["loc", [null, [13, 8], [13, 17]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 19,
                  "column": 6
                },
                "end": {
                  "line": 23,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/components/modal-dialog.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("button");
              dom.setAttribute(el1, "type", "button");
              dom.setAttribute(el1, "class", "ui cancel button");
              dom.setAttribute(el1, "data-dismiss", "modal");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element1 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createAttrMorph(element1, 'title');
              morphs[1] = dom.createMorphAt(element1, 1, 1);
              return morphs;
            },
            statements: [["attribute", "title", ["subexpr", "t", ["components.modal-dialog.close-button-text"], [], ["loc", [null, [20, 82], [20, 131]]]]], ["inline", "t", ["components.modal-dialog.close-button-text"], [], ["loc", [null, [21, 10], [21, 59]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 24,
                  "column": 6
                },
                "end": {
                  "line": 28,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/components/modal-dialog.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("button");
              dom.setAttribute(el1, "type", "button");
              dom.setAttribute(el1, "class", "ui positive button");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createAttrMorph(element0, 'title');
              morphs[1] = dom.createMorphAt(element0, 1, 1);
              return morphs;
            },
            statements: [["attribute", "title", ["subexpr", "t", ["components.modal-dialog.ok-button-text"], [], ["loc", [null, [25, 63], [25, 109]]]]], ["inline", "t", ["components.modal-dialog.ok-button-text"], [], ["loc", [null, [26, 10], [26, 56]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 17,
                "column": 2
              },
              "end": {
                "line": 30,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/modal-dialog.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "actions");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createMorphAt(element2, 1, 1);
            morphs[1] = dom.createMorphAt(element2, 2, 2);
            return morphs;
          },
          statements: [["block", "if", [["get", "useCloseButton", ["loc", [null, [19, 12], [19, 26]]]]], [], 0, null, ["loc", [null, [19, 6], [23, 13]]]], ["block", "if", [["get", "useOkButton", ["loc", [null, [24, 12], [24, 23]]]]], [], 1, null, ["loc", [null, [24, 6], [28, 13]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["multiple-nodes", "wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 31,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/modal-dialog.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1, "class", "close icon");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "header");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [5]);
          var morphs = new Array(4);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
          morphs[1] = dom.createAttrMorph(element3, 'class');
          morphs[2] = dom.createMorphAt(element3, 1, 1);
          morphs[3] = dom.createMorphAt(fragment, 7, 7, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["content", "title", ["loc", [null, [4, 4], [4, 13]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "viewImageContent", ["loc", [null, [6, 19], [6, 35]]]], "image", ""], [], ["loc", [null, [6, 14], [6, 48]]]], " content"]]], ["block", "if", [["get", "viewImageContent", ["loc", [null, [7, 10], [7, 26]]]]], [], 0, 1, ["loc", [null, [7, 4], [15, 11]]]], ["block", "if", [["get", "toolbarVisible", ["loc", [null, [17, 8], [17, 22]]]]], [], 2, null, ["loc", [null, [17, 2], [30, 9]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/modal-dialog.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "ui-modal", [], ["class", ["subexpr", "concat", ["flexberry-modal ", ["get", "sizeClass", ["loc", [null, [1, 45], [1, 54]]]]], [], ["loc", [null, [1, 18], [1, 55]]]]], 0, null, ["loc", [null, [1, 0], [31, 13]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/object-list-view-cell", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/object-list-view-cell.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "oveflow-text");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(element0, 0, 0);
        morphs[1] = dom.createMorphAt(element0, 1, 1);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 26], [1, 35]]]], ["content", "formattedValue", ["loc", [null, [1, 35], [1, 53]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/object-list-view-row", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 7,
                  "column": 10
                },
                "end": {
                  "line": 11,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "cell asterisk-cell");
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("i");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element13 = dom.childAt(fragment, [1, 1]);
              var morphs = new Array(1);
              morphs[0] = dom.createAttrMorph(element13, 'class');
              return morphs;
            },
            statements: [["attribute", "class", ["concat", ["asterisk small red icon ", ["subexpr", "unless", [["get", "record.data.hasDirtyAttributes", ["loc", [null, [9, 57], [9, 87]]]], "transparent"], [], ["loc", [null, [9, 48], [9, 103]]]]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 12,
                  "column": 10
                },
                "end": {
                  "line": 19,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "cell");
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "or", [["get", "readonly", ["loc", [null, [15, 29], [15, 37]]]], ["subexpr", "not", [["get", "record.rowConfig.canBeSelected", ["loc", [null, [15, 43], [15, 73]]]]], [], ["loc", [null, [15, 38], [15, 74]]]]], [], ["loc", [null, [15, 25], [15, 75]]]], "onChange", ["subexpr", "action", [["get", "selectRow", ["loc", [null, [16, 33], [16, 42]]]], ["get", "record", ["loc", [null, [16, 43], [16, 49]]]]], [], ["loc", [null, [16, 25], [16, 50]]]]], ["loc", [null, [14, 14], [17, 16]]]]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 20,
                  "column": 10
                },
                "end": {
                  "line": 29,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "cell");
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("button");
              var el3 = dom.createTextNode("\n                ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("i");
              dom.setAttribute(el3, "class", "minus icon");
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n              ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element12 = dom.childAt(fragment, [1, 1]);
              var morphs = new Array(3);
              morphs[0] = dom.createAttrMorph(element12, 'class');
              morphs[1] = dom.createAttrMorph(element12, 'title');
              morphs[2] = dom.createElementMorph(element12);
              return morphs;
            },
            statements: [["attribute", "class", ["concat", ["ui ui-delete object-list-view-row-delete-button ", ["get", "buttonClass", ["loc", [null, [23, 73], [23, 84]]]], " ", ["subexpr", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [23, 96], [23, 104]]]], ["subexpr", "not", [["get", "record.rowConfig.canBeDeleted", ["loc", [null, [23, 110], [23, 139]]]]], [], ["loc", [null, [23, 105], [23, 140]]]]], [], ["loc", [null, [23, 92], [23, 141]]]], "disabled"], [], ["loc", [null, [23, 87], [23, 154]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.object-list-view.menu-in-row.delete-menu-item-title"], [], ["loc", [null, [24, 22], [24, 92]]]]], ["element", "action", [["get", "deleteRow", ["loc", [null, [25, 25], [25, 34]]]], ["get", "record", ["loc", [null, [25, 35], [25, 41]]]]], [], ["loc", [null, [25, 16], [25, 43]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 5,
                "column": 6
              },
              "end": {
                "line": 31,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "object-list-view-helper-column-cell");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element14 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createMorphAt(element14, 1, 1);
            morphs[1] = dom.createMorphAt(element14, 2, 2);
            morphs[2] = dom.createMorphAt(element14, 3, 3);
            return morphs;
          },
          statements: [["block", "if", [["get", "showAsteriskInRow", ["loc", [null, [7, 16], [7, 33]]]]], [], 0, null, ["loc", [null, [7, 10], [11, 17]]]], ["block", "if", [["get", "showCheckBoxInRow", ["loc", [null, [12, 16], [12, 33]]]]], [], 1, null, ["loc", [null, [12, 10], [19, 17]]]], ["block", "if", [["get", "showDeleteButtonInRow", ["loc", [null, [20, 16], [20, 37]]]]], [], 2, null, ["loc", [null, [20, 10], [29, 17]]]]],
          locals: [],
          templates: [child0, child1, child2]
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          var child0 = (function () {
            var child0 = (function () {
              var child0 = (function () {
                var child0 = (function () {
                  return {
                    meta: {
                      "fragmentReason": false,
                      "revision": "Ember@2.4.6",
                      "loc": {
                        "source": null,
                        "start": {
                          "line": 48,
                          "column": 16
                        },
                        "end": {
                          "line": 52,
                          "column": 16
                        }
                      },
                      "moduleName": "dummy/templates/components/object-list-view-row.hbs"
                    },
                    isEmpty: false,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: false,
                    buildFragment: function buildFragment(dom) {
                      var el0 = dom.createDocumentFragment();
                      var el1 = dom.createTextNode("                  ");
                      dom.appendChild(el0, el1);
                      var el1 = dom.createElement("button");
                      var el2 = dom.createTextNode("\n                    ");
                      dom.appendChild(el1, el2);
                      var el2 = dom.createElement("i");
                      dom.appendChild(el1, el2);
                      var el2 = dom.createTextNode("\n                  ");
                      dom.appendChild(el1, el2);
                      dom.appendChild(el0, el1);
                      var el1 = dom.createTextNode("\n");
                      dom.appendChild(el0, el1);
                      return el0;
                    },
                    buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                      var element9 = dom.childAt(fragment, [1]);
                      var element10 = dom.childAt(element9, [1]);
                      var morphs = new Array(3);
                      morphs[0] = dom.createAttrMorph(element9, 'class');
                      morphs[1] = dom.createElementMorph(element9);
                      morphs[2] = dom.createAttrMorph(element10, 'class');
                      return morphs;
                    },
                    statements: [["attribute", "class", ["concat", ["ui button hierarchy-expand icon mini compact ", ["get", "buttonClass", ["loc", [null, [49, 80], [49, 91]]]]]]], ["element", "action", ["expand"], ["bubbles", false], ["loc", [null, [49, 95], [49, 128]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "_expanded", ["loc", [null, [50, 35], [50, 44]]]], "minus", "plus"], [], ["loc", [null, [50, 30], [50, 61]]]], " hierarchy-expand icon"]]]],
                    locals: [],
                    templates: []
                  };
                })();
                return {
                  meta: {
                    "fragmentReason": false,
                    "revision": "Ember@2.4.6",
                    "loc": {
                      "source": null,
                      "start": {
                        "line": 47,
                        "column": 14
                      },
                      "end": {
                        "line": 53,
                        "column": 14
                      }
                    },
                    "moduleName": "dummy/templates/components/object-list-view-row.hbs"
                  },
                  isEmpty: false,
                  arity: 0,
                  cachedFragment: null,
                  hasRendered: false,
                  buildFragment: function buildFragment(dom) {
                    var el0 = dom.createDocumentFragment();
                    var el1 = dom.createComment("");
                    dom.appendChild(el0, el1);
                    return el0;
                  },
                  buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                    var morphs = new Array(1);
                    morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                    dom.insertBoundary(fragment, 0);
                    dom.insertBoundary(fragment, null);
                    return morphs;
                  },
                  statements: [["block", "if", [["get", "hasRecords", ["loc", [null, [48, 22], [48, 32]]]]], [], 0, null, ["loc", [null, [48, 16], [52, 23]]]]],
                  locals: [],
                  templates: [child0]
                };
              })();
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 40,
                      "column": 12
                    },
                    "end": {
                      "line": 54,
                      "column": 12
                    }
                  },
                  "moduleName": "dummy/templates/components/object-list-view-row.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                  dom.insertBoundary(fragment, 0);
                  dom.insertBoundary(fragment, null);
                  return morphs;
                },
                statements: [["block", "if", [["subexpr", "and", [["subexpr", "not", [["get", "index", ["loc", [null, [47, 30], [47, 35]]]]], [], ["loc", [null, [47, 25], [47, 36]]]], ["get", "inHierarchicalMode", ["loc", [null, [47, 37], [47, 55]]]]], [], ["loc", [null, [47, 20], [47, 56]]]]], [], 0, null, ["loc", [null, [47, 14], [53, 21]]]]],
                locals: [],
                templates: [child0]
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 39,
                    "column": 10
                  },
                  "end": {
                    "line": 55,
                    "column": 10
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "component", [["get", "column.cellComponent.componentName", ["loc", [null, [40, 25], [40, 59]]]]], ["dynamicProperties", ["subexpr", "@mut", [["get", "column.cellComponent.componentProperties", ["loc", [null, [41, 32], [41, 72]]]]], [], []], "relatedModel", ["subexpr", "@mut", [["get", "record.data", ["loc", [null, [42, 27], [42, 38]]]]], [], []], "value", ["subexpr", "mut", [["subexpr", "get", [["get", "record.data", ["loc", [null, [43, 30], [43, 41]]]], ["get", "column.propName", ["loc", [null, [43, 42], [43, 57]]]]], [], ["loc", [null, [43, 25], [43, 58]]]]], [], ["loc", [null, [43, 20], [43, 59]]]], "readonly", ["subexpr", "readonly-cell", [["get", "record.rowConfig.readonlyColumns", ["loc", [null, [44, 38], [44, 70]]]], ["get", "column.propName", ["loc", [null, [44, 71], [44, 86]]]], ["get", "readonly", ["loc", [null, [44, 87], [44, 95]]]]], [], ["loc", [null, [44, 23], [44, 96]]]], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [45, 23], [45, 31]]]]], [], []]], 0, null, ["loc", [null, [40, 12], [54, 26]]]]],
              locals: [],
              templates: [child0]
            };
          })();
          var child1 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 63,
                      "column": 12
                    },
                    "end": {
                      "line": 68,
                      "column": 12
                    }
                  },
                  "moduleName": "dummy/templates/components/object-list-view-row.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("              ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(1);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  return morphs;
                },
                statements: [["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "get", [["get", "record.data", ["loc", [null, [65, 27], [65, 38]]]], ["subexpr", "concat", ["errors.", ["get", "column.propName", ["loc", [null, [65, 57], [65, 72]]]]], [], ["loc", [null, [65, 39], [65, 73]]]]], [], ["loc", [null, [65, 22], [65, 74]]]], "pointing", "pointing"], ["loc", [null, [64, 14], [67, 16]]]]],
                locals: [],
                templates: []
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 55,
                    "column": 10
                  },
                  "end": {
                    "line": 69,
                    "column": 10
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("            ");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(2);
                morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["inline", "component", [["get", "column.cellComponent.componentName", ["loc", [null, [56, 24], [56, 58]]]]], ["dynamicProperties", ["subexpr", "@mut", [["get", "column.cellComponent.componentProperties", ["loc", [null, [57, 32], [57, 72]]]]], [], []], "relatedModel", ["subexpr", "@mut", [["get", "record.data", ["loc", [null, [58, 27], [58, 38]]]]], [], []], "value", ["subexpr", "mut", [["subexpr", "get", [["get", "record.data", ["loc", [null, [59, 30], [59, 41]]]], ["get", "column.propName", ["loc", [null, [59, 42], [59, 57]]]]], [], ["loc", [null, [59, 25], [59, 58]]]]], [], ["loc", [null, [59, 20], [59, 59]]]], "readonly", ["subexpr", "readonly-cell", [["get", "record.rowConfig.readonlyColumns", ["loc", [null, [60, 38], [60, 70]]]], ["get", "column.propName", ["loc", [null, [60, 71], [60, 86]]]], ["get", "readonly", ["loc", [null, [60, 87], [60, 95]]]]], [], ["loc", [null, [60, 23], [60, 96]]]], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [61, 23], [61, 31]]]]], [], []]], ["loc", [null, [56, 12], [62, 14]]]], ["block", "if", [["get", "showValidationMessages", ["loc", [null, [63, 18], [63, 40]]]]], [], 0, null, ["loc", [null, [63, 12], [68, 19]]]]],
              locals: [],
              templates: [child0]
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 38,
                  "column": 8
                },
                "end": {
                  "line": 70,
                  "column": 8
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["get", "inHierarchicalMode", ["loc", [null, [39, 16], [39, 34]]]]], [], 0, 1, ["loc", [null, [39, 10], [69, 17]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        var child1 = (function () {
          var child0 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 73,
                      "column": 14
                    },
                    "end": {
                      "line": 81,
                      "column": 14
                    }
                  },
                  "moduleName": "dummy/templates/components/object-list-view-row.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("                ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createElement("button");
                  var el2 = dom.createTextNode("\n                    ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createElement("i");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n                ");
                  dom.appendChild(el1, el2);
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var element6 = dom.childAt(fragment, [1]);
                  var element7 = dom.childAt(element6, [1]);
                  var morphs = new Array(4);
                  morphs[0] = dom.createAttrMorph(element6, 'class');
                  morphs[1] = dom.createAttrMorph(element6, 'title');
                  morphs[2] = dom.createElementMorph(element6);
                  morphs[3] = dom.createAttrMorph(element7, 'class');
                  return morphs;
                },
                statements: [["attribute", "class", ["concat", ["ui button hierarchy-expand icon mini compact ", ["get", "buttonClass", ["loc", [null, [75, 72], [75, 83]]]]]]], ["attribute", "title", ["subexpr", "if", [["get", "_expanded", ["loc", [null, [76, 29], [76, 38]]]], ["subexpr", "t", ["components.object-list-view.hierarchy-buttons.minus-button-title"], [], ["loc", [null, [76, 39], [76, 109]]]], ["subexpr", "t", ["components.object-list-view.hierarchy-buttons.plus-button-title"], [], ["loc", [null, [77, 19], [77, 88]]]]], [], ["loc", [null, [76, 24], [77, 90]]]]], ["element", "action", ["expand"], ["bubbles", false], ["loc", [null, [78, 18], [78, 51]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "_expanded", ["loc", [null, [79, 35], [79, 44]]]], "minus", "plus"], [], ["loc", [null, [79, 30], [79, 61]]]], " hierarchy-expand icon"]]]],
                locals: [],
                templates: []
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 72,
                    "column": 12
                  },
                  "end": {
                    "line": 82,
                    "column": 12
                  }
                },
                "moduleName": "dummy/templates/components/object-list-view-row.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var morphs = new Array(1);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "if", [["get", "hasRecords", ["loc", [null, [73, 20], [73, 30]]]]], [], 0, null, ["loc", [null, [73, 14], [81, 21]]]]],
              locals: [],
              templates: [child0]
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 70,
                  "column": 8
                },
                "end": {
                  "line": 88,
                  "column": 8
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("          ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "oveflow-text");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("            ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element8 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(element8, 1, 1);
              morphs[1] = dom.createMorphAt(element8, 3, 3);
              return morphs;
            },
            statements: [["block", "if", [["subexpr", "and", [["subexpr", "not", [["get", "index", ["loc", [null, [72, 28], [72, 33]]]]], [], ["loc", [null, [72, 23], [72, 34]]]], ["get", "inHierarchicalMode", ["loc", [null, [72, 35], [72, 53]]]]], [], ["loc", [null, [72, 18], [72, 54]]]]], [], 0, null, ["loc", [null, [72, 12], [82, 19]]]], ["inline", "get-formatted", [["get", "record.data", ["loc", [null, [83, 28], [83, 39]]]], ["get", "column.propName", ["loc", [null, [83, 40], [83, 55]]]]], ["dateFormat", ["subexpr", "@mut", [["get", "dateFormat", ["loc", [null, [84, 25], [84, 35]]]]], [], []], "moment", ["subexpr", "@mut", [["get", "moment", ["loc", [null, [85, 21], [85, 27]]]]], [], []]], ["loc", [null, [83, 12], [86, 14]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 33,
                "column": 4
              },
              "end": {
                "line": 90,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 2,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element11 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element11, 'onclick');
            morphs[1] = dom.createAttrMorph(element11, 'class');
            morphs[2] = dom.createAttrMorph(element11, 'style');
            morphs[3] = dom.createMorphAt(element11, 1, 1);
            return morphs;
          },
          statements: [["attribute", "onclick", ["subexpr", "action", ["onRowClick", ["get", "record", ["loc", [null, [35, 38], [35, 44]]]], ["subexpr", "hash", [], ["column", ["get", "column", ["loc", [null, [35, 58], [35, 64]]]], "columnIndex", ["get", "index", ["loc", [null, [35, 77], [35, 82]]]]], ["loc", [null, [35, 45], [35, 83]]]]], ["preventDefault", false], ["loc", [null, [35, 16], [35, 106]]]]], ["attribute", "class", ["concat", ["field ", ["subexpr", "if", [["subexpr", "and", [["get", "showValidationMessages", ["loc", [null, [36, 31], [36, 53]]]], ["subexpr", "get", [["get", "record.data", ["loc", [null, [36, 59], [36, 70]]]], ["subexpr", "concat", ["errors.", ["get", "column.propName", ["loc", [null, [36, 89], [36, 104]]]], ".length"], [], ["loc", [null, [36, 71], [36, 115]]]]], [], ["loc", [null, [36, 54], [36, 116]]]]], [], ["loc", [null, [36, 26], [36, 117]]]], "error"], [], ["loc", [null, [36, 21], [36, 127]]]], " ", ["subexpr", "if", [["subexpr", "array-contains", [["get", "overflowedComponents", ["loc", [null, [36, 149], [36, 169]]]], ["get", "column.cellComponent.componentName", ["loc", [null, [36, 170], [36, 204]]]]], [], ["loc", [null, [36, 133], [36, 205]]]], " overflowed-cell"], [], ["loc", [null, [36, 128], [36, 226]]]]]]], ["attribute", "style", ["subexpr", "if", [["subexpr", "and", [["subexpr", "not", [["get", "index", ["loc", [null, [37, 29], [37, 34]]]]], [], ["loc", [null, [37, 24], [37, 35]]]], ["get", "inHierarchicalMode", ["loc", [null, [37, 36], [37, 54]]]]], [], ["loc", [null, [37, 19], [37, 55]]]], ["get", "hierarchicalIndentStyle", ["loc", [null, [37, 56], [37, 79]]]], ["get", "defaultPaddingStyle", ["loc", [null, [37, 80], [37, 99]]]]], [], ["loc", [null, [37, 14], [37, 101]]]]], ["block", "if", [["get", "column.cellComponent.componentName", ["loc", [null, [38, 14], [38, 48]]]]], [], 0, 1, ["loc", [null, [38, 8], [88, 15]]]]],
          locals: ["column", "index"],
          templates: [child0, child1]
        };
      })();
      var child2 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 96,
                  "column": 12
                },
                "end": {
                  "line": 101,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "item");
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("i");
              dom.setAttribute(el2, "class", "edit icon");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("span");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element3 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createElementMorph(element3);
              morphs[1] = dom.createMorphAt(dom.childAt(element3, [3]), 0, 0);
              return morphs;
            },
            statements: [["element", "action", ["onRowClick", ["get", "record", ["loc", [null, [97, 54], [97, 60]]]], ["subexpr", "hash", [], ["column", null, "columnIndex", null], ["loc", [null, [97, 61], [97, 96]]]]], [], ["loc", [null, [97, 32], [97, 98]]]], ["inline", "t", ["components.object-list-view.menu-in-row.edit-menu-item-title"], [], ["loc", [null, [99, 22], [99, 90]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 102,
                  "column": 12
                },
                "end": {
                  "line": 107,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "item");
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("i");
              dom.setAttribute(el2, "class", "trash icon");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("span");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element2 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createElementMorph(element2);
              morphs[1] = dom.createMorphAt(dom.childAt(element2, [3]), 0, 0);
              return morphs;
            },
            statements: [["element", "action", [["get", "deleteRow", ["loc", [null, [103, 42], [103, 51]]]], ["get", "record", ["loc", [null, [103, 52], [103, 58]]]]], [], ["loc", [null, [103, 32], [103, 61]]]], ["inline", "t", ["components.object-list-view.menu-in-row.delete-menu-item-title"], [], ["loc", [null, [105, 22], [105, 92]]]]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 108,
                  "column": 12
                },
                "end": {
                  "line": 113,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "item");
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("i");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("span");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n              ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var element1 = dom.childAt(element0, [1]);
              var morphs = new Array(3);
              morphs[0] = dom.createElementMorph(element0);
              morphs[1] = dom.createAttrMorph(element1, 'class');
              morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]), 0, 0);
              return morphs;
            },
            statements: [["element", "action", [["get", "sendMenuItemAction", ["loc", [null, [109, 41], [109, 59]]]], ["get", "menuItem.actionName", ["loc", [null, [109, 60], [109, 79]]]], ["get", "record.data", ["loc", [null, [109, 80], [109, 91]]]]], [], ["loc", [null, [109, 32], [109, 93]]]], ["attribute", "class", ["concat", [["get", "menuItem.icon", ["loc", [null, [110, 28], [110, 41]]]]]]], ["content", "menuItem.title", ["loc", [null, [111, 22], [111, 40]]]]],
            locals: ["menuItem"],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 91,
                "column": 4
              },
              "end": {
                "line": 117,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "object-list-view-menu");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "right pointing ui icon dropdown button");
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("i");
            dom.setAttribute(el3, "class", "list layout icon");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3, "class", "left menu");
            var el4 = dom.createTextNode("\n");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("          ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element4 = dom.childAt(fragment, [1]);
            var element5 = dom.childAt(element4, [1, 3]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element4, 'style');
            morphs[1] = dom.createMorphAt(element5, 1, 1);
            morphs[2] = dom.createMorphAt(element5, 2, 2);
            morphs[3] = dom.createMorphAt(element5, 3, 3);
            return morphs;
          },
          statements: [["attribute", "style", ["get", "defaultPaddingStyle", ["loc", [null, [92, 48], [92, 67]]]]], ["block", "if", [["get", "showEditMenuItemInRow", ["loc", [null, [96, 18], [96, 39]]]]], [], 0, null, ["loc", [null, [96, 12], [101, 19]]]], ["block", "if", [["get", "showDeleteMenuItemInRow", ["loc", [null, [102, 18], [102, 41]]]]], [], 1, null, ["loc", [null, [102, 12], [107, 19]]]], ["block", "each", [["get", "menuInRowAdditionalItems", ["loc", [null, [108, 20], [108, 44]]]]], [], 2, null, ["loc", [null, [108, 12], [113, 21]]]]],
          locals: [],
          templates: [child0, child1, child2]
        };
      })();
      var child3 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 120,
                  "column": 4
                },
                "end": {
                  "line": 145,
                  "column": 4
                }
              },
              "moduleName": "dummy/templates/components/object-list-view-row.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "object-list-view-row", [], ["record", ["subexpr", "@mut", [["get", "record", ["loc", [null, [122, 15], [122, 21]]]]], [], []], "columns", ["subexpr", "@mut", [["get", "columns", ["loc", [null, [123, 16], [123, 23]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [124, 17], [124, 25]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [125, 17], [125, 25]]]]], [], []], "showMenuColumn", ["subexpr", "@mut", [["get", "showMenuColumn", ["loc", [null, [126, 23], [126, 37]]]]], [], []], "sendMenuItemAction", ["subexpr", "@mut", [["get", "sendMenuItemAction", ["loc", [null, [127, 27], [127, 45]]]]], [], []], "menuInRowAdditionalItems", ["subexpr", "@mut", [["get", "menuInRowAdditionalItems", ["loc", [null, [128, 33], [128, 57]]]]], [], []], "showHelperColumn", ["subexpr", "@mut", [["get", "showHelperColumn", ["loc", [null, [129, 25], [129, 41]]]]], [], []], "defaultRowConfig", ["subexpr", "@mut", [["get", "defaultRowConfig", ["loc", [null, [130, 25], [130, 41]]]]], [], []], "showValidationMessages", ["subexpr", "@mut", [["get", "showValidationMessages", ["loc", [null, [131, 31], [131, 53]]]]], [], []], "showAsteriskInRow", ["subexpr", "@mut", [["get", "showAsteriskInRow", ["loc", [null, [132, 26], [132, 43]]]]], [], []], "showCheckBoxInRow", ["subexpr", "@mut", [["get", "showCheckBoxInRow", ["loc", [null, [133, 26], [133, 43]]]]], [], []], "showDeleteButtonInRow", ["subexpr", "@mut", [["get", "showDeleteButtonInRow", ["loc", [null, [134, 30], [134, 51]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "inHierarchicalMode", ["loc", [null, [135, 27], [135, 45]]]]], [], []], "loadRecords", ["subexpr", "@mut", [["get", "loadRecords", ["loc", [null, [136, 20], [136, 31]]]]], [], []], "doRenderData", ["subexpr", "@mut", [["get", "record.doRenderData", ["loc", [null, [137, 21], [137, 40]]]]], [], []], "rowClick", ["subexpr", "@mut", [["get", "rowClick", ["loc", [null, [138, 17], [138, 25]]]]], [], []], "selectRow", ["subexpr", "@mut", [["get", "selectRow", ["loc", [null, [139, 18], [139, 27]]]]], [], []], "deleteRow", ["subexpr", "@mut", [["get", "deleteRow", ["loc", [null, [140, 18], [140, 27]]]]], [], []], "_currentLevel", ["subexpr", "@mut", [["get", "_currentLevel", ["loc", [null, [141, 22], [141, 35]]]]], [], []], "hierarchicalIndent", ["subexpr", "@mut", [["get", "_hierarchicalIndent", ["loc", [null, [142, 27], [142, 46]]]]], [], []], "defaultLeftPadding", ["subexpr", "@mut", [["get", "defaultLeftPadding", ["loc", [null, [143, 27], [143, 45]]]]], [], []]], ["loc", [null, [121, 6], [144, 8]]]]],
            locals: ["record"],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 119,
                "column": 2
              },
              "end": {
                "line": 146,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "each", [["get", "records", ["loc", [null, [120, 12], [120, 19]]]]], ["key", "key"], 0, null, ["loc", [null, [120, 4], [145, 13]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["multiple-nodes", "wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 147,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/object-list-view-row.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "hidden");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element15 = dom.childAt(fragment, [1]);
          var element16 = dom.childAt(element15, [1]);
          var morphs = new Array(8);
          morphs[0] = dom.createAttrMorph(element15, 'class');
          morphs[1] = dom.createAttrMorph(element16, 'class');
          morphs[2] = dom.createAttrMorph(element16, 'style');
          morphs[3] = dom.createMorphAt(dom.childAt(element16, [1]), 0, 0);
          morphs[4] = dom.createMorphAt(element16, 3, 3);
          morphs[5] = dom.createMorphAt(element15, 3, 3);
          morphs[6] = dom.createMorphAt(element15, 4, 4);
          morphs[7] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["get", "record.rowConfig.customClass", ["loc", [null, [2, 15], [2, 43]]]]]]], ["attribute", "class", ["concat", ["object-list-view-helper-column ", ["subexpr", "unless", [["get", "showHelperColumn", ["loc", [null, [3, 55], [3, 71]]]], "hidden"], [], ["loc", [null, [3, 46], [3, 82]]]]]]], ["attribute", "style", ["get", "defaultPaddingStyle", ["loc", [null, [3, 92], [3, 111]]]]], ["content", "record.key", ["loc", [null, [4, 26], [4, 40]]]], ["block", "if", [["get", "showHelperColumn", ["loc", [null, [5, 12], [5, 28]]]]], [], 0, null, ["loc", [null, [5, 6], [31, 13]]]], ["block", "each", [["get", "columns", ["loc", [null, [33, 12], [33, 19]]]]], [], 1, null, ["loc", [null, [33, 4], [90, 13]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [91, 10], [91, 24]]]]], [], 2, null, ["loc", [null, [91, 4], [117, 11]]]], ["block", "if", [["subexpr", "and", [["get", "_expanded", ["loc", [null, [119, 13], [119, 22]]]], ["get", "inHierarchicalMode", ["loc", [null, [119, 23], [119, 41]]]]], [], ["loc", [null, [119, 8], [119, 42]]]]], [], 3, null, ["loc", [null, [119, 2], [146, 9]]]]],
        locals: [],
        templates: [child0, child1, child2, child3]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 148,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/object-list-view-row.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "doRenderData", ["loc", [null, [1, 6], [1, 18]]]]], [], 0, null, ["loc", [null, [1, 0], [147, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/object-list-view-single-column-cell", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 5,
                "column": 6
              },
              "end": {
                "line": 13,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-single-column-cell.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "component", [["get", "column.cellComponent.componentName", ["loc", [null, [6, 20], [6, 54]]]]], ["dynamicProperties", ["subexpr", "@mut", [["get", "column.cellComponent.componentProperties", ["loc", [null, [7, 28], [7, 68]]]]], [], []], "relatedModel", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 23], [8, 28]]]]], [], []], "value", ["subexpr", "mut", [["subexpr", "get", [["get", "model", ["loc", [null, [9, 26], [9, 31]]]], ["get", "column.propName", ["loc", [null, [9, 32], [9, 47]]]]], [], ["loc", [null, [9, 21], [9, 48]]]]], [], ["loc", [null, [9, 16], [9, 49]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [10, 19], [10, 27]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [11, 19], [11, 27]]]]], [], []]], ["loc", [null, [6, 8], [12, 10]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 13,
                "column": 6
              },
              "end": {
                "line": 20,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-single-column-cell.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "oveflow-text");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "get-formatted", [["get", "model", ["loc", [null, [15, 26], [15, 31]]]], ["get", "column.propName", ["loc", [null, [15, 32], [15, 47]]]]], ["dateFormat", ["subexpr", "@mut", [["get", "dateFormat", ["loc", [null, [16, 23], [16, 33]]]]], [], []], "moment", ["subexpr", "@mut", [["get", "moment", ["loc", [null, [17, 19], [17, 25]]]]], [], []]], ["loc", [null, [15, 10], [18, 12]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 21,
                "column": 6
              },
              "end": {
                "line": 26,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/object-list-view-single-column-cell.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "get", [["get", "model", ["loc", [null, [23, 21], [23, 26]]]], ["subexpr", "concat", ["errors.", ["get", "column.propName", ["loc", [null, [23, 45], [23, 60]]]]], [], ["loc", [null, [23, 27], [23, 61]]]]], [], ["loc", [null, [23, 16], [23, 62]]]], "pointing", "left pointing"], ["loc", [null, [22, 8], [25, 10]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "triple-curlies"
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 29,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/object-list-view-single-column-cell.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode(":");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(element0, [3]);
          var morphs = new Array(5);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
          morphs[2] = dom.createAttrMorph(element1, 'class');
          morphs[3] = dom.createMorphAt(element1, 1, 1);
          morphs[4] = dom.createMorphAt(element1, 2, 2);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["field ", ["subexpr", "if", [["subexpr", "and", [["get", "showValidationMessages", ["loc", [null, [2, 30], [2, 52]]]], ["subexpr", "get", [["get", "model", ["loc", [null, [2, 58], [2, 63]]]], ["subexpr", "concat", ["errors.", ["get", "column.propName", ["loc", [null, [2, 82], [2, 97]]]], ".length"], [], ["loc", [null, [2, 64], [2, 108]]]]], [], ["loc", [null, [2, 53], [2, 109]]]]], [], ["loc", [null, [2, 25], [2, 110]]]], "error"], [], ["loc", [null, [2, 20], [2, 120]]]]]]], ["content", "column.header", ["loc", [null, [3, 11], [3, 28]]]], ["attribute", "class", ["concat", ["inline fields ", ["subexpr", "if", [["subexpr", "not", [["get", "hasEditableValues", ["loc", [null, [4, 40], [4, 57]]]]], [], ["loc", [null, [4, 35], [4, 58]]]], "readonly"], [], ["loc", [null, [4, 30], [4, 71]]]]]]], ["block", "if", [["get", "column.cellComponent.componentName", ["loc", [null, [5, 12], [5, 46]]]]], [], 0, 1, ["loc", [null, [5, 6], [20, 13]]]], ["block", "if", [["get", "showValidationMessages", ["loc", [null, [21, 12], [21, 34]]]]], [], 2, null, ["loc", [null, [21, 6], [26, 13]]]]],
        locals: ["column"],
        templates: [child0, child1, child2]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 30,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/object-list-view-single-column-cell.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "each", [["get", "columns", ["loc", [null, [1, 8], [1, 15]]]]], [], 0, null, ["loc", [null, [1, 0], [29, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/components/object-list-view", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 6
            },
            "end": {
              "line": 6,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "object-list-view-operations collapsing");
          dom.setAttribute(el1, "data-olv-header-property-name", "OlvRowToolbar");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 11,
                "column": 12
              },
              "end": {
                "line": 13,
                "column": 12
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", [["get", "column.keyLocale", ["loc", [null, [12, 18], [12, 34]]]]], [], ["loc", [null, [12, 14], [12, 36]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 13,
                "column": 12
              },
              "end": {
                "line": 15,
                "column": 12
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["content", "column.header", ["loc", [null, [14, 14], [14, 31]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 19,
                  "column": 16
                },
                "end": {
                  "line": 23,
                  "column": 16
                }
              },
              "moduleName": "dummy/templates/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                  ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              var el2 = dom.createTextNode("\n                  ▲");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element7 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createAttrMorph(element7, 'title');
              morphs[1] = dom.createMorphAt(element7, 1, 1);
              return morphs;
            },
            statements: [["attribute", "title", ["concat", [["subexpr", "t", ["components.object-list-view.sort-ascending"], [], ["loc", [null, [20, 30], [20, 80]]]]]]], ["content", "column.sortNumber", ["loc", [null, [21, 19], [21, 40]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 23,
                  "column": 16
                },
                "end": {
                  "line": 27,
                  "column": 16
                }
              },
              "moduleName": "dummy/templates/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                  ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              var el2 = dom.createTextNode("\n                  ▼");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element6 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createAttrMorph(element6, 'title');
              morphs[1] = dom.createMorphAt(element6, 1, 1);
              return morphs;
            },
            statements: [["attribute", "title", ["concat", [["subexpr", "t", ["components.object-list-view.sort-descending"], [], ["loc", [null, [24, 30], [24, 81]]]]]]], ["content", "column.sortNumber", ["loc", [null, [25, 19], [25, 40]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 17,
                "column": 12
              },
              "end": {
                "line": 29,
                "column": 12
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "object-list-view-order-icon");
            dom.setAttribute(el1, "style", "float:right;");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("              ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["block", "if", [["get", "column.sortAscending", ["loc", [null, [19, 22], [19, 42]]]]], [], 0, 1, ["loc", [null, [19, 16], [27, 23]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 6
            },
            "end": {
              "line": 32,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "dt-head-left me class");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("span");
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("            ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("          ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element8 = dom.childAt(fragment, [1]);
          var element9 = dom.childAt(element8, [1]);
          var morphs = new Array(5);
          morphs[0] = dom.createAttrMorph(element8, 'onclick');
          morphs[1] = dom.createAttrMorph(element9, 'data-olv-header-property-name');
          morphs[2] = dom.createAttrMorph(element9, 'title');
          morphs[3] = dom.createMorphAt(dom.childAt(element9, [1]), 1, 1);
          morphs[4] = dom.createMorphAt(element9, 3, 3);
          return morphs;
        },
        statements: [["attribute", "onclick", ["subexpr", "action", ["headerCellClick", ["get", "column", ["loc", [null, [8, 77], [8, 83]]]]], [], ["loc", [null, [8, 50], [8, 86]]]]], ["attribute", "data-olv-header-property-name", ["get", "column.propName", ["loc", [null, [9, 47], [9, 62]]]]], ["attribute", "title", ["get", "sortTitleCompute", ["loc", [null, [9, 73], [9, 89]]]]], ["block", "if", [["get", "column.keyLocale", ["loc", [null, [11, 18], [11, 34]]]]], [], 0, 1, ["loc", [null, [11, 12], [15, 19]]]], ["block", "if", [["get", "column.sorted", ["loc", [null, [17, 18], [17, 31]]]]], [], 2, null, ["loc", [null, [17, 12], [29, 19]]]]],
        locals: ["column"],
        templates: [child0, child1, child2]
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 33,
              "column": 6
            },
            "end": {
              "line": 35,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          dom.setAttribute(el1, "class", "object-list-view-menu collapsing");
          dom.setAttribute(el1, "data-olv-header-property-name", "OlvRowMenu");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 41,
                "column": 8
              },
              "end": {
                "line": 43,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "rowspan", "1");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 46,
                  "column": 12
                },
                "end": {
                  "line": 54,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "component", ["flexberry-dropdown"], ["value", ["subexpr", "@mut", [["get", "column.filter.condition", ["loc", [null, [48, 22], [48, 45]]]]], [], []], "items", ["subexpr", "@mut", [["get", "column.filter.conditions", ["loc", [null, [49, 22], [49, 46]]]]], [], []], "class", "compact fluid", "placeholder", "", "needChecksOnValue", false], ["loc", [null, [47, 14], [53, 16]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 44,
                "column": 8
              },
              "end": {
                "line": 56,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "overflowed-cell");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element3 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element3, 'style');
            morphs[1] = dom.createMorphAt(element3, 1, 1);
            return morphs;
          },
          statements: [["attribute", "style", ["get", "defaultPaddingStyle", ["loc", [null, [45, 22], [45, 41]]]]], ["block", "if", [["get", "column.filter.conditions", ["loc", [null, [46, 18], [46, 42]]]]], [], 0, null, ["loc", [null, [46, 12], [54, 19]]]]],
          locals: ["column"],
          templates: [child0]
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 57,
                "column": 8
              },
              "end": {
                "line": 59,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "rowspan", "1");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child3 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 62,
                "column": 8
              },
              "end": {
                "line": 64,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "rowspan", "1");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child4 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 67,
                  "column": 12
                },
                "end": {
                  "line": 72,
                  "column": 12
                }
              },
              "moduleName": "dummy/templates/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("              ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "component", [["get", "column.filter.component.name", ["loc", [null, [68, 26], [68, 54]]]]], ["value", ["subexpr", "@mut", [["get", "column.filter.pattern", ["loc", [null, [69, 22], [69, 43]]]]], [], []], "dynamicProperties", ["subexpr", "@mut", [["get", "column.filter.component.properties", ["loc", [null, [70, 34], [70, 68]]]]], [], []]], ["loc", [null, [68, 14], [71, 16]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 65,
                "column": 8
              },
              "end": {
                "line": 74,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element2, 'style');
            morphs[1] = dom.createAttrMorph(element2, 'class');
            morphs[2] = dom.createMorphAt(element2, 1, 1);
            return morphs;
          },
          statements: [["attribute", "style", ["get", "defaultPaddingStyle", ["loc", [null, [66, 22], [66, 41]]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["subexpr", "array-contains", [["get", "overflowedComponents", ["loc", [null, [66, 72], [66, 92]]]], ["get", "column.filter.component.name", ["loc", [null, [66, 93], [66, 121]]]]], [], ["loc", [null, [66, 56], [66, 122]]]], "overflowed-cell"], [], ["loc", [null, [66, 51], [66, 142]]]]]]], ["block", "if", [["get", "column.filter.component.name", ["loc", [null, [67, 18], [67, 46]]]]], [], 0, null, ["loc", [null, [67, 12], [72, 19]]]]],
          locals: ["column"],
          templates: [child0]
        };
      })();
      var child5 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 75,
                "column": 8
              },
              "end": {
                "line": 77,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "rowspan", "1");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 39,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element4 = dom.childAt(fragment, [1]);
          var element5 = dom.childAt(fragment, [3]);
          var morphs = new Array(6);
          morphs[0] = dom.createMorphAt(element4, 1, 1);
          morphs[1] = dom.createMorphAt(element4, 2, 2);
          morphs[2] = dom.createMorphAt(element4, 3, 3);
          morphs[3] = dom.createMorphAt(element5, 1, 1);
          morphs[4] = dom.createMorphAt(element5, 2, 2);
          morphs[5] = dom.createMorphAt(element5, 3, 3);
          return morphs;
        },
        statements: [["block", "if", [["get", "showHelperColumn", ["loc", [null, [41, 14], [41, 30]]]]], [], 0, null, ["loc", [null, [41, 8], [43, 15]]]], ["block", "each", [["get", "columns", ["loc", [null, [44, 16], [44, 23]]]]], [], 1, null, ["loc", [null, [44, 8], [56, 17]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [57, 14], [57, 28]]]]], [], 2, null, ["loc", [null, [57, 8], [59, 15]]]], ["block", "if", [["get", "showHelperColumn", ["loc", [null, [62, 14], [62, 30]]]]], [], 3, null, ["loc", [null, [62, 8], [64, 15]]]], ["block", "each", [["get", "columns", ["loc", [null, [65, 16], [65, 23]]]]], [], 4, null, ["loc", [null, [65, 8], [74, 17]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [75, 14], [75, 28]]]]], [], 5, null, ["loc", [null, [75, 8], [77, 15]]]]],
        locals: [],
        templates: [child0, child1, child2, child3, child4, child5]
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "style", "text-align:center;");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1, 1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element1, 'colspan');
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          return morphs;
        },
        statements: [["attribute", "colspan", ["concat", [["get", "colspan", ["loc", [null, [82, 23], [82, 30]]]]]]], ["content", "placeholder", ["loc", [null, [83, 12], [83, 27]]]]],
        locals: [],
        templates: []
      };
    })();
    var child5 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 87,
                "column": 6
              },
              "end": {
                "line": 114,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "object-list-view-row", [], ["record", ["subexpr", "@mut", [["get", "record", ["loc", [null, [89, 17], [89, 23]]]]], [], []], "columns", ["subexpr", "@mut", [["get", "columns", ["loc", [null, [90, 18], [90, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [91, 19], [91, 27]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [92, 19], [92, 27]]]]], [], []], "showMenuColumn", ["subexpr", "@mut", [["get", "showMenuColumn", ["loc", [null, [93, 25], [93, 39]]]]], [], []], "sendMenuItemAction", ["subexpr", "@mut", [["get", "sendMenuItemAction", ["loc", [null, [94, 29], [94, 47]]]]], [], []], "menuInRowAdditionalItems", ["subexpr", "@mut", [["get", "menuInRowAdditionalItems", ["loc", [null, [95, 35], [95, 59]]]]], [], []], "showHelperColumn", ["subexpr", "@mut", [["get", "showHelperColumn", ["loc", [null, [96, 27], [96, 43]]]]], [], []], "defaultRowConfig", ["subexpr", "@mut", [["get", "defaultRowConfig", ["loc", [null, [97, 27], [97, 43]]]]], [], []], "showValidationMessages", ["subexpr", "@mut", [["get", "showValidationMessagesInRow", ["loc", [null, [98, 33], [98, 60]]]]], [], []], "showAsteriskInRow", ["subexpr", "@mut", [["get", "showAsteriskInRow", ["loc", [null, [99, 28], [99, 45]]]]], [], []], "showCheckBoxInRow", ["subexpr", "@mut", [["get", "showCheckBoxInRow", ["loc", [null, [100, 28], [100, 45]]]]], [], []], "showDeleteButtonInRow", ["subexpr", "@mut", [["get", "showDeleteButtonInRow", ["loc", [null, [101, 32], [101, 53]]]]], [], []], "showDeleteMenuItemInRow", ["subexpr", "@mut", [["get", "showDeleteMenuItemInRow", ["loc", [null, [102, 34], [102, 57]]]]], [], []], "showEditMenuItemInRow", ["subexpr", "@mut", [["get", "showEditMenuItemInRow", ["loc", [null, [103, 32], [103, 53]]]]], [], []], "hierarchicalIndent", ["subexpr", "@mut", [["get", "hierarchicalIndent", ["loc", [null, [104, 29], [104, 47]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "inHierarchicalMode", ["loc", [null, [105, 29], [105, 47]]]]], [], []], "loadRecords", ["subexpr", "@mut", [["get", "loadRecords", ["loc", [null, [106, 22], [106, 33]]]]], [], []], "doRenderData", ["subexpr", "@mut", [["get", "record.doRenderData", ["loc", [null, [107, 23], [107, 42]]]]], [], []], "rowClick", ["subexpr", "action", ["rowClick"], [], ["loc", [null, [108, 19], [108, 38]]]], "selectRow", ["subexpr", "action", ["selectRow"], [], ["loc", [null, [109, 20], [109, 40]]]], "deleteRow", ["subexpr", "action", ["deleteRow"], [], ["loc", [null, [110, 20], [110, 40]]]], "defaultLeftPadding", ["subexpr", "@mut", [["get", "defaultLeftPadding", ["loc", [null, [111, 29], [111, 47]]]]], [], []], "overflowedComponents", ["subexpr", "@mut", [["get", "overflowedComponents", ["loc", [null, [112, 31], [112, 51]]]]], [], []]], ["loc", [null, [88, 8], [113, 10]]]]],
          locals: ["record"],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 115,
                "column": 6
              },
              "end": {
                "line": 122,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "style", "text-align:center;");
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3, "class", "ui active centered inline loader");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1, 1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element0, 'colspan');
            morphs[1] = dom.createMorphAt(element0, 3, 3);
            return morphs;
          },
          statements: [["attribute", "colspan", ["concat", [["get", "colspan", ["loc", [null, [117, 25], [117, 32]]]]]]], ["inline", "t", ["components.object-list-view.loading-text"], [], ["loc", [null, [119, 12], [119, 60]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 86,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "contentWithKeys", ["loc", [null, [87, 14], [87, 29]]]]], ["key", "key"], 0, null, ["loc", [null, [87, 6], [114, 15]]]], ["block", "if", [["get", "rowByRowLoadingProgress", ["loc", [null, [115, 12], [115, 35]]]]], [], 1, null, ["loc", [null, [115, 6], [122, 13]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 126,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/object-list-view.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("table");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("thead");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("tr");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("tbody");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element10 = dom.childAt(fragment, [0]);
        var element11 = dom.childAt(element10, [1, 1]);
        var element12 = dom.childAt(element10, [3]);
        var morphs = new Array(6);
        morphs[0] = dom.createAttrMorph(element10, 'class');
        morphs[1] = dom.createMorphAt(element11, 1, 1);
        morphs[2] = dom.createMorphAt(element11, 2, 2);
        morphs[3] = dom.createMorphAt(element11, 3, 3);
        morphs[4] = dom.createMorphAt(element12, 1, 1);
        morphs[5] = dom.createMorphAt(element12, 2, 2);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["object-list-view ui unstackable celled ", ["subexpr", "if", [["get", "readonly", ["loc", [null, [1, 58], [1, 66]]]], "readonly"], [], ["loc", [null, [1, 53], [1, 79]]]], " ", ["get", "tableClass", ["loc", [null, [1, 82], [1, 92]]]], " table"]]], ["block", "if", [["get", "showHelperColumn", ["loc", [null, [4, 12], [4, 28]]]]], [], 0, null, ["loc", [null, [4, 6], [6, 13]]]], ["block", "each", [["get", "columns", ["loc", [null, [7, 14], [7, 21]]]]], [], 1, null, ["loc", [null, [7, 6], [32, 15]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [33, 12], [33, 26]]]]], [], 2, null, ["loc", [null, [33, 6], [35, 13]]]], ["block", "if", [["get", "showFilters", ["loc", [null, [39, 10], [39, 21]]]]], [], 3, null, ["loc", [null, [39, 4], [79, 11]]]], ["block", "unless", [["get", "content", ["loc", [null, [80, 14], [80, 21]]]]], [], 4, 5, ["loc", [null, [80, 4], [123, 15]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5]
    };
  })());
});
define("dummy/templates/components/olv-setconfigdialogbutton", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "modifiers",
          "modifiers": ["action"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/olv-setconfigdialogbutton.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("button");
        dom.setAttribute(el1, "class", "ui button");
        var el2 = dom.createElement("i");
        dom.setAttribute(el2, "class", "large setting icon");
        dom.setAttribute(el2, "title", "customize column views");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(1);
        morphs[0] = dom.createElementMorph(element0);
        return morphs;
      },
      statements: [["element", "action", ["choose", ["get", "chooseData", ["loc", [null, [1, 44], [1, 54]]]]], [], ["loc", [null, [1, 26], [1, 56]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/olv-toolbar", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "modifiers",
            "modifiers": ["action"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "refresh icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element14 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element14, 'class');
          morphs[1] = dom.createAttrMorph(element14, 'title');
          morphs[2] = dom.createElementMorph(element14);
          morphs[3] = dom.createMorphAt(element14, 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui refresh-button ", ["get", "buttonClass", ["loc", [null, [3, 31], [3, 42]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.refresh-button-text"], [], ["loc", [null, [4, 10], [4, 60]]]]], ["element", "action", ["refresh"], [], ["loc", [null, [5, 4], [5, 24]]]], ["inline", "t", ["components.olv-toolbar.refresh-button-text"], [], ["loc", [null, [6, 6], [6, 56]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 10,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element13 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element13, 'class');
          morphs[1] = dom.createAttrMorph(element13, 'title');
          morphs[2] = dom.createElementMorph(element13);
          morphs[3] = dom.createMorphAt(element13, 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui create-button ", ["get", "buttonClass", ["loc", [null, [12, 30], [12, 41]]]], " ", ["subexpr", "if", [["get", "enableCreateNewButton", ["loc", [null, [12, 49], [12, 70]]]], "", "disabled"], [], ["loc", [null, [12, 44], [12, 86]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.add-button-text"], [], ["loc", [null, [13, 10], [13, 56]]]]], ["element", "action", ["createNew"], [], ["loc", [null, [14, 4], [14, 26]]]], ["inline", "t", ["components.olv-toolbar.add-button-text"], [], ["loc", [null, [15, 6], [15, 52]]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 18,
              "column": 0
            },
            "end": {
              "line": 26,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n       ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "delete icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element12 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element12, 'class');
          morphs[1] = dom.createAttrMorph(element12, 'title');
          morphs[2] = dom.createElementMorph(element12);
          morphs[3] = dom.createMorphAt(element12, 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui delete-button ", ["get", "buttonClass", ["loc", [null, [20, 30], [20, 41]]]], " ", ["subexpr", "if", [["get", "isDeleteButtonEnabled", ["loc", [null, [20, 49], [20, 70]]]], "", "disabled"], [], ["loc", [null, [20, 44], [20, 86]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.delete-button-text"], [], ["loc", [null, [21, 10], [21, 59]]]]], ["element", "action", ["delete"], [], ["loc", [null, [22, 5], [22, 24]]]], ["inline", "t", ["components.olv-toolbar.delete-button-text"], [], ["loc", [null, [23, 6], [23, 55]]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 27,
              "column": 0
            },
            "end": {
              "line": 34,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.setAttribute(el2, "class", "sitemap icon");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element11 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element11, 'class');
          morphs[1] = dom.createAttrMorph(element11, 'title');
          morphs[2] = dom.createElementMorph(element11);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui button icon hierarchical-button ", ["get", "buttonClass", ["loc", [null, [29, 48], [29, 59]]]], " ", ["subexpr", "if", [["get", "inHierarchicalMode", ["loc", [null, [29, 67], [29, 85]]]], "active"], [], ["loc", [null, [29, 62], [29, 96]]]]]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.hierarchy-button-text"], [], ["loc", [null, [30, 10], [30, 62]]]]], ["element", "action", [["get", "switchHierarchicalMode", ["loc", [null, [31, 13], [31, 35]]]]], [], ["loc", [null, [31, 4], [31, 37]]]]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 43,
                "column": 4
              },
              "end": {
                "line": 51,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/olv-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "or");
            dom.setAttribute(el1, "data-text", "•");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "remove icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element8 = dom.childAt(fragment, [3]);
            var morphs = new Array(3);
            morphs[0] = dom.createAttrMorph(element8, 'class');
            morphs[1] = dom.createAttrMorph(element8, 'title');
            morphs[2] = dom.createElementMorph(element8);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui button removeFilter-button ", ["get", "buttonClass", ["loc", [null, [46, 47], [46, 58]]]]]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.remove-filter-button-text"], [], ["loc", [null, [47, 14], [47, 70]]]]], ["element", "action", [["get", "resetFilters", ["loc", [null, [48, 17], [48, 29]]]]], [], ["loc", [null, [48, 8], [48, 31]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 35,
              "column": 0
            },
            "end": {
              "line": 53,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui icon buttons filter-active");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "filter icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element9 = dom.childAt(fragment, [1]);
          var element10 = dom.childAt(element9, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element10, 'class');
          morphs[1] = dom.createAttrMorph(element10, 'title');
          morphs[2] = dom.createElementMorph(element10);
          morphs[3] = dom.createMorphAt(element9, 3, 3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui button ", ["get", "buttonClass", ["loc", [null, [38, 25], [38, 36]]]], " ", ["subexpr", "if", [["get", "showFilters", ["loc", [null, [38, 44], [38, 55]]]], "active"], [], ["loc", [null, [38, 39], [38, 66]]]]]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.filter-button-text"], [], ["loc", [null, [39, 12], [39, 61]]]]], ["element", "action", [["get", "toggleStateFilters", ["loc", [null, [40, 15], [40, 33]]]]], [], ["loc", [null, [40, 6], [40, 35]]]], ["block", "if", [["get", "filters", ["loc", [null, [43, 10], [43, 17]]]]], [], 0, null, ["loc", [null, [43, 4], [51, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child5 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 54,
              "column": 0
            },
            "end": {
              "line": 74,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui action input");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "block-action-input");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "search icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "remove icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element5 = dom.childAt(fragment, [1]);
          var element6 = dom.childAt(element5, [3]);
          var element7 = dom.childAt(element5, [5]);
          var morphs = new Array(7);
          morphs[0] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
          morphs[1] = dom.createAttrMorph(element6, 'class');
          morphs[2] = dom.createAttrMorph(element6, 'title');
          morphs[3] = dom.createElementMorph(element6);
          morphs[4] = dom.createAttrMorph(element7, 'class');
          morphs[5] = dom.createAttrMorph(element7, 'title');
          morphs[6] = dom.createElementMorph(element7);
          return morphs;
        },
        statements: [["inline", "input", [], ["type", "text", "placeholder", ["subexpr", "t", ["components.olv-toolbar.filter-by-any-match-placeholder"], [], ["loc", [null, [58, 18], [58, 78]]]], "value", ["subexpr", "@mut", [["get", "filterByAnyMatchText", ["loc", [null, [59, 12], [59, 32]]]]], [], []], "enter", "filterByAnyMatch"], ["loc", [null, [56, 36], [60, 6]]]], ["attribute", "class", ["concat", ["ui ", ["get", "buttonClass", ["loc", [null, [62, 18], [62, 29]]]], " icon button search-button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.search-button-text"], [], ["loc", [null, [63, 12], [63, 61]]]]], ["element", "action", ["filterByAnyMatch"], [], ["loc", [null, [64, 6], [64, 35]]]], ["attribute", "class", ["concat", ["ui ", ["get", "buttonClass", ["loc", [null, [68, 18], [68, 29]]]], " icon button clear-search-button"]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.clear-search-button-text"], [], ["loc", [null, [69, 12], [69, 67]]]]], ["element", "action", ["removeFilter"], [], ["loc", [null, [70, 6], [70, 31]]]]],
        locals: [],
        templates: []
      };
    })();
    var child6 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 75,
              "column": 0
            },
            "end": {
              "line": 88,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui buttons export-config");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "large file excel outline icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1]);
          var element4 = dom.childAt(element3, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element4, 'class');
          morphs[1] = dom.createAttrMorph(element4, 'title');
          morphs[2] = dom.createElementMorph(element4);
          morphs[3] = dom.createMorphAt(element3, 3, 3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui button icon export-button ", ["get", "buttonClass", ["loc", [null, [78, 44], [78, 55]]]]]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.export-excel-button-text"], [], ["loc", [null, [79, 12], [79, 67]]]]], ["element", "action", ["showExportDialog"], [], ["loc", [null, [80, 6], [80, 35]]]], ["inline", "flexberry-menu", [], ["items", ["subexpr", "@mut", [["get", "exportExcelItems", ["loc", [null, [84, 12], [84, 28]]]]], [], []], "onItemClick", ["subexpr", "action", ["onExportMenuItemClick"], [], ["loc", [null, [85, 18], [85, 50]]]]], ["loc", [null, [83, 4], [86, 6]]]]],
        locals: [],
        templates: []
      };
    })();
    var child7 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 97,
                "column": 4
              },
              "end": {
                "line": 102,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/components/olv-toolbar.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-menu", [], ["items", ["subexpr", "@mut", [["get", "colsSettingsItems", ["loc", [null, [99, 14], [99, 31]]]]], [], []], "onItemClick", ["subexpr", "action", ["onMenuItemClick"], [], ["loc", [null, [100, 20], [100, 46]]]]], ["loc", [null, [98, 6], [101, 8]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 89,
              "column": 0
            },
            "end": {
              "line": 104,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui buttons cols-config");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("button");
          dom.setAttribute(el2, "class", "ui icon button config-button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "large table icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var element2 = dom.childAt(element1, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element2, 'title');
          morphs[1] = dom.createElementMorph(element2);
          morphs[2] = dom.createMorphAt(element1, 3, 3);
          return morphs;
        },
        statements: [["attribute", "title", ["subexpr", "t", ["components.colsconfig-dialog-content.title"], [], ["loc", [null, [93, 12], [93, 62]]]]], ["element", "action", ["showConfigDialog"], [], ["loc", [null, [94, 6], [94, 35]]]], ["block", "if", [["get", "colsSettingsItems", ["loc", [null, [97, 10], [97, 27]]]]], [], 0, null, ["loc", [null, [97, 4], [102, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child8 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 105,
              "column": 0
            },
            "end": {
              "line": 112,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/olv-toolbar.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(4);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createAttrMorph(element0, 'title');
          morphs[2] = dom.createElementMorph(element0);
          morphs[3] = dom.createMorphAt(element0, 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui ", ["subexpr", "if", [["get", "customButton.buttonClasses", ["loc", [null, [107, 19], [107, 45]]]], ["get", "customButton.buttonClasses", ["loc", [null, [107, 46], [107, 72]]]], ""], [], ["loc", [null, [107, 14], [107, 77]]]], " button"]]], ["attribute", "title", ["subexpr", "if", [["get", "customButton.buttonTitle", ["loc", [null, [108, 15], [108, 39]]]], ["get", "customButton.buttonTitle", ["loc", [null, [108, 40], [108, 64]]]]], [], ["loc", [null, [108, 10], [108, 66]]]]], ["element", "action", ["customButtonAction", ["get", "customButton.buttonAction", ["loc", [null, [109, 34], [109, 59]]]]], [], ["loc", [null, [109, 4], [109, 61]]]], ["inline", "if", [["get", "customButton.buttonName", ["loc", [null, [110, 11], [110, 34]]]], ["get", "customButton.buttonName", ["loc", [null, [110, 35], [110, 58]]]], ["subexpr", "t", ["components.olv-toolbar.custom-button-text"], [], ["loc", [null, [110, 59], [110, 106]]]]], [], ["loc", [null, [110, 6], [110, 108]]]]],
        locals: ["customButton"],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 140,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/olv-toolbar.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "olv-toolbar-info-modal-dialog ui small basic modal");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui icon header");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("i");
        dom.setAttribute(el3, "class", "olvt icon");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "center aligned ui grid");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("button");
        dom.setAttribute(el3, "class", "ui icon button");
        dom.setAttribute(el3, "id", "OLVToolbarInfoCopyButton");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("i");
        dom.setAttribute(el4, "class", "copy icon");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "actions");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "olv-toolbar-info-modal-dialog-ok-button ui approve green inverted button");
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("i");
        dom.setAttribute(el5, "class", "remove icon");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui form");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "olv-toolbar-info-modal-dialog-content center aligned ui field");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("textarea");
        dom.setAttribute(el4, "id", "OLVToolbarInfoContent");
        dom.setAttribute(el4, "cols", "80");
        dom.setAttribute(el4, "rows", "20");
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element15 = dom.childAt(fragment, [9]);
        var element16 = dom.childAt(element15, [3]);
        var element17 = dom.childAt(element16, [1]);
        var morphs = new Array(15);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[3] = dom.createMorphAt(fragment, 3, 3, contextualElement);
        morphs[4] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        morphs[5] = dom.createMorphAt(fragment, 5, 5, contextualElement);
        morphs[6] = dom.createMorphAt(fragment, 6, 6, contextualElement);
        morphs[7] = dom.createMorphAt(fragment, 7, 7, contextualElement);
        morphs[8] = dom.createMorphAt(fragment, 8, 8, contextualElement);
        morphs[9] = dom.createMorphAt(dom.childAt(element15, [1]), 3, 3);
        morphs[10] = dom.createAttrMorph(element17, 'title');
        morphs[11] = dom.createElementMorph(element17);
        morphs[12] = dom.createMorphAt(element17, 3, 3);
        morphs[13] = dom.createMorphAt(dom.childAt(element16, [3, 1]), 3, 3);
        morphs[14] = dom.createMorphAt(dom.childAt(element15, [5, 1, 1]), 0, 0);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "refreshButton", ["loc", [null, [1, 6], [1, 19]]]]], [], 0, null, ["loc", [null, [1, 0], [9, 7]]]], ["block", "if", [["get", "createNewButton", ["loc", [null, [10, 6], [10, 21]]]]], [], 1, null, ["loc", [null, [10, 0], [17, 7]]]], ["block", "if", [["get", "deleteButton", ["loc", [null, [18, 6], [18, 18]]]]], [], 2, null, ["loc", [null, [18, 0], [26, 7]]]], ["block", "if", [["get", "availableHierarchicalMode", ["loc", [null, [27, 6], [27, 31]]]]], [], 3, null, ["loc", [null, [27, 0], [34, 7]]]], ["block", "if", [["get", "enableFilters", ["loc", [null, [35, 6], [35, 19]]]]], [], 4, null, ["loc", [null, [35, 0], [53, 7]]]], ["block", "if", [["get", "filterButton", ["loc", [null, [54, 6], [54, 18]]]]], [], 5, null, ["loc", [null, [54, 0], [74, 7]]]], ["block", "if", [["get", "exportExcelButton", ["loc", [null, [75, 6], [75, 23]]]]], [], 6, null, ["loc", [null, [75, 0], [88, 7]]]], ["block", "if", [["get", "colsConfigButton", ["loc", [null, [89, 6], [89, 22]]]]], [], 7, null, ["loc", [null, [89, 0], [104, 7]]]], ["block", "each", [["get", "customButtons", ["loc", [null, [105, 8], [105, 21]]]]], [], 8, null, ["loc", [null, [105, 0], [112, 9]]]], ["content", "_infoModalDialogCaption", ["loc", [null, [116, 4], [116, 31]]]], ["attribute", "title", ["subexpr", "t", ["components.olv-toolbar.copy"], [], ["loc", [null, [121, 10], [121, 45]]]]], ["element", "action", ["copyJSONContent"], [], ["loc", [null, [122, 4], [122, 32]]]], ["inline", "t", ["components.olv-toolbar.copy"], [], ["loc", [null, [125, 6], [125, 41]]]], ["inline", "t", ["components.olv-toolbar.close"], [], ["loc", [null, [130, 6], [130, 42]]]], ["content", "_infoModalDialogContent", ["loc", [null, [136, 63], [136, 90]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8]
    };
  })());
});
define("dummy/templates/components/ui-checkbox", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/ui-checkbox.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("input");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("label");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        if (this.cachedFragment) {
          dom.repairClonedNode(element0, [], true);
        }
        var morphs = new Array(6);
        morphs[0] = dom.createAttrMorph(element0, 'type');
        morphs[1] = dom.createAttrMorph(element0, 'name');
        morphs[2] = dom.createAttrMorph(element0, 'checked');
        morphs[3] = dom.createAttrMorph(element0, 'disabled');
        morphs[4] = dom.createAttrMorph(element0, 'data-id');
        morphs[5] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        return morphs;
      },
      statements: [["attribute", "type", ["get", "type", ["loc", [null, [1, 14], [1, 18]]]]], ["attribute", "name", ["get", "name", ["loc", [null, [1, 28], [1, 32]]]]], ["attribute", "checked", ["get", "checked", ["loc", [null, [1, 45], [1, 52]]]]], ["attribute", "disabled", ["get", "readonly", ["loc", [null, [1, 66], [1, 74]]]]], ["attribute", "data-id", ["get", "data-id", ["loc", [null, [1, 87], [1, 94]]]]], ["content", "label", ["loc", [null, [2, 7], [2, 16]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/ui-dropdown", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/ui-dropdown.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/ui-message-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "triple-curlies"
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/ui-message-content.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "header");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["content", "caption", ["loc", [null, [2, 22], [2, 33]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/ui-message-content.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("p");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["content", "message", ["loc", [null, [5, 5], [5, 16]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/ui-message-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "caption", ["loc", [null, [1, 6], [1, 13]]]]], [], 0, null, ["loc", [null, [1, 0], [3, 7]]]], ["block", "if", [["get", "message", ["loc", [null, [4, 6], [4, 13]]]]], [], 1, null, ["loc", [null, [4, 0], [6, 7]]]], ["content", "yield", ["loc", [null, [7, 0], [7, 9]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/components/ui-message", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "triple-curlies"
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/ui-message.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["get", "icon", ["loc", [null, [2, 14], [2, 18]]]]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/ui-message.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("i");
          dom.setAttribute(el1, "class", "close icon");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/ui-message.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "content");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "partial", ["components/ui-message-content"], [], ["loc", [null, [9, 4], [9, 47]]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/components/ui-message.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "partial", ["components/ui-message-content"], [], ["loc", [null, [12, 2], [12, 45]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 14,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/ui-message.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "icon", ["loc", [null, [1, 6], [1, 10]]]]], [], 0, null, ["loc", [null, [1, 0], [3, 7]]]], ["block", "if", [["get", "closeable", ["loc", [null, [4, 6], [4, 15]]]]], [], 1, null, ["loc", [null, [4, 0], [6, 7]]]], ["block", "if", [["get", "icon", ["loc", [null, [7, 6], [7, 10]]]]], [], 2, 3, ["loc", [null, [7, 0], [13, 7]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define("dummy/templates/components/ui-modal", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/ui-modal.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/components/ui-radio", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/components/ui-radio.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("input");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("label");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        if (this.cachedFragment) {
          dom.repairClonedNode(element0, [], true);
        }
        var morphs = new Array(6);
        morphs[0] = dom.createAttrMorph(element0, 'type');
        morphs[1] = dom.createAttrMorph(element0, 'name');
        morphs[2] = dom.createAttrMorph(element0, 'checked');
        morphs[3] = dom.createAttrMorph(element0, 'disabled');
        morphs[4] = dom.createAttrMorph(element0, 'data-id');
        morphs[5] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        return morphs;
      },
      statements: [["attribute", "type", ["get", "type", ["loc", [null, [1, 14], [1, 18]]]]], ["attribute", "name", ["get", "name", ["loc", [null, [1, 28], [1, 32]]]]], ["attribute", "checked", ["get", "checked", ["loc", [null, [1, 45], [1, 52]]]]], ["attribute", "disabled", ["get", "readonly", ["loc", [null, [1, 66], [1, 74]]]]], ["attribute", "data-id", ["get", "data-id", ["loc", [null, [1, 87], [1, 94]]]]], ["content", "label", ["loc", [null, [2, 7], [2, 16]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/deployment-diagram-primitives-demo", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 22
          }
        },
        "moduleName": "dummy/templates/deployment-diagram-primitives-demo.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "paper");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/error", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 7,
                "column": 2
              },
              "end": {
                "line": 11,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/error.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("pre");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
            return morphs;
          },
          statements: [["content", "model.stack", ["loc", [null, [10, 9], [10, 24]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/error.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "flexberry-toggler", [], ["caption", ["subexpr", "t", ["forms.error-form.show-more"], [], ["loc", [null, [8, 12], [8, 44]]]]], 0, null, ["loc", [null, [7, 2], [11, 24]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 13,
              "column": 0
            },
            "end": {
              "line": 19,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/error.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "link-to", [["subexpr", "t", ["forms.error-form.retry"], [], ["loc", [null, [14, 12], [14, 40]]]], ["get", "model.retryRoute", ["loc", [null, [14, 41], [14, 57]]]]], ["tagName", "button", "activeClass", "", "class", "ui button"], ["loc", [null, [14, 2], [18, 4]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 19,
            "column": 7
          }
        },
        "moduleName": "dummy/templates/error.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h1");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h2");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [2]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(element0, 1, 1);
        morphs[2] = dom.createMorphAt(element0, 3, 3);
        morphs[3] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        morphs[4] = dom.createMorphAt(fragment, 5, 5, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["inline", "t", ["forms.error-form.caption"], [], ["loc", [null, [1, 22], [1, 54]]]], ["inline", "if", [["get", "model.name", ["loc", [null, [3, 7], [3, 17]]]], ["subexpr", "concat", [["get", "model.name", ["loc", [null, [3, 26], [3, 36]]]], ": "], [], ["loc", [null, [3, 18], [3, 42]]]]], [], ["loc", [null, [3, 2], [3, 44]]]], ["inline", "if", [["get", "model.message", ["loc", [null, [4, 7], [4, 20]]]], ["get", "model.message", ["loc", [null, [4, 21], [4, 34]]]]], [], ["loc", [null, [4, 2], [4, 36]]]], ["block", "if", [["get", "model.stack", ["loc", [null, [6, 6], [6, 17]]]]], [], 0, null, ["loc", [null, [6, 0], [12, 7]]]], ["block", "if", [["get", "model.retryRoute", ["loc", [null, [13, 6], [13, 22]]]]], [], 1, null, ["loc", [null, [13, 0], [19, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/fd-aggregation-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-aggregation-edit-form.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [10, 14], [10, 26]]]]], [], []]], ["loc", [null, [5, 4], [11, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-aggregation-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [4, 10], [4, 23]]]]], [], 0, null, ["loc", [null, [4, 2], [12, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 8
              },
              "end": {
                "line": 31,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-aggregation-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [28, 66], [28, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [29, 12], [29, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 32,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-aggregation-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [24, 60], [24, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [25, 10], [25, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [27, 18], [27, 29]]]]], [], 0, null, ["loc", [null, [27, 8], [31, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 215,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-aggregation-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [3]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var element7 = dom.childAt(element2, [11]);
        var element8 = dom.childAt(element2, [13]);
        var element9 = dom.childAt(element2, [15]);
        var element10 = dom.childAt(element2, [17]);
        var element11 = dom.childAt(element2, [19]);
        var element12 = dom.childAt(element2, [21]);
        var element13 = dom.childAt(element2, [23]);
        var element14 = dom.childAt(element2, [25]);
        var element15 = dom.childAt(element2, [27]);
        var element16 = dom.childAt(element2, [29]);
        var element17 = dom.childAt(element2, [31]);
        var element18 = dom.childAt(element2, [33]);
        var element19 = dom.childAt(element2, [35]);
        var element20 = dom.childAt(element2, [37]);
        var element21 = dom.childAt(element2, [39]);
        var element22 = dom.childAt(element2, [41]);
        var element23 = dom.childAt(element2, [43]);
        var element24 = dom.childAt(element2, [45]);
        var element25 = dom.childAt(element2, [47]);
        var element26 = dom.childAt(element2, [49]);
        var element27 = dom.childAt(element2, [51]);
        var element28 = dom.childAt(element2, [53]);
        var morphs = new Array(58);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createAttrMorph(element2, 'class');
        morphs[3] = dom.createMorphAt(element2, 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[5] = dom.createMorphAt(element3, 1, 1);
        morphs[6] = dom.createElementMorph(element4);
        morphs[7] = dom.createMorphAt(element4, 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
        morphs[9] = dom.createMorphAt(element5, 3, 3);
        morphs[10] = dom.createMorphAt(dom.childAt(element6, [1]), 0, 0);
        morphs[11] = dom.createMorphAt(element6, 3, 3);
        morphs[12] = dom.createMorphAt(element6, 5, 5);
        morphs[13] = dom.createMorphAt(dom.childAt(element7, [1]), 0, 0);
        morphs[14] = dom.createMorphAt(element7, 3, 3);
        morphs[15] = dom.createMorphAt(element7, 5, 5);
        morphs[16] = dom.createMorphAt(dom.childAt(element8, [1]), 0, 0);
        morphs[17] = dom.createMorphAt(element8, 3, 3);
        morphs[18] = dom.createMorphAt(dom.childAt(element9, [1]), 0, 0);
        morphs[19] = dom.createMorphAt(element9, 3, 3);
        morphs[20] = dom.createMorphAt(dom.childAt(element10, [1]), 0, 0);
        morphs[21] = dom.createMorphAt(element10, 3, 3);
        morphs[22] = dom.createMorphAt(dom.childAt(element11, [1]), 0, 0);
        morphs[23] = dom.createMorphAt(element11, 3, 3);
        morphs[24] = dom.createMorphAt(dom.childAt(element12, [1]), 0, 0);
        morphs[25] = dom.createMorphAt(element12, 3, 3);
        morphs[26] = dom.createMorphAt(dom.childAt(element13, [1]), 0, 0);
        morphs[27] = dom.createMorphAt(element13, 3, 3);
        morphs[28] = dom.createMorphAt(dom.childAt(element14, [1]), 0, 0);
        morphs[29] = dom.createMorphAt(element14, 3, 3);
        morphs[30] = dom.createMorphAt(dom.childAt(element15, [1]), 0, 0);
        morphs[31] = dom.createMorphAt(element15, 3, 3);
        morphs[32] = dom.createMorphAt(dom.childAt(element16, [1]), 0, 0);
        morphs[33] = dom.createMorphAt(element16, 3, 3);
        morphs[34] = dom.createMorphAt(dom.childAt(element17, [1]), 0, 0);
        morphs[35] = dom.createMorphAt(element17, 3, 3);
        morphs[36] = dom.createMorphAt(dom.childAt(element18, [1]), 0, 0);
        morphs[37] = dom.createMorphAt(element18, 3, 3);
        morphs[38] = dom.createMorphAt(dom.childAt(element19, [1]), 0, 0);
        morphs[39] = dom.createMorphAt(element19, 3, 3);
        morphs[40] = dom.createMorphAt(dom.childAt(element20, [1]), 0, 0);
        morphs[41] = dom.createMorphAt(element20, 3, 3);
        morphs[42] = dom.createMorphAt(dom.childAt(element21, [1]), 0, 0);
        morphs[43] = dom.createMorphAt(element21, 3, 3);
        morphs[44] = dom.createMorphAt(dom.childAt(element22, [1]), 0, 0);
        morphs[45] = dom.createMorphAt(element22, 3, 3);
        morphs[46] = dom.createMorphAt(dom.childAt(element23, [1]), 0, 0);
        morphs[47] = dom.createMorphAt(element23, 3, 3);
        morphs[48] = dom.createMorphAt(dom.childAt(element24, [1]), 0, 0);
        morphs[49] = dom.createMorphAt(element24, 3, 3);
        morphs[50] = dom.createMorphAt(dom.childAt(element25, [1]), 0, 0);
        morphs[51] = dom.createMorphAt(element25, 3, 3);
        morphs[52] = dom.createMorphAt(dom.childAt(element26, [1]), 0, 0);
        morphs[53] = dom.createMorphAt(element26, 3, 3);
        morphs[54] = dom.createMorphAt(dom.childAt(element27, [1]), 0, 0);
        morphs[55] = dom.createMorphAt(element27, 3, 3);
        morphs[56] = dom.createMorphAt(dom.childAt(element28, [1]), 0, 0);
        morphs[57] = dom.createMorphAt(element28, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-aggregation-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 68]]]], ["block", "if", [["get", "errorMessages", ["loc", [null, [3, 6], [3, 19]]]]], [], 0, null, ["loc", [null, [3, 0], [13, 7]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [14, 47], [14, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [15, 26], [15, 31]]]]], [], []]], ["loc", [null, [15, 2], [15, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [18, 43], [18, 55]]]]], [], []]], ["loc", [null, [18, 6], [18, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [23, 16], [23, 24]]]]], [], 1, null, ["loc", [null, [23, 6], [32, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [33, 59], [33, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [34, 8], [34, 49]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.name-caption"], [], ["loc", [null, [39, 11], [39, 62]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [42, 12], [42, 22]]]]], [], []]], ["loc", [null, [40, 4], [43, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.start-class-caption"], [], ["loc", [null, [46, 11], [46, 69]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "@mut", [["get", "implementationsName", ["loc", [null, [49, 12], [49, 31]]]]], [], []], "value", ["subexpr", "@mut", [["get", "startClassName", ["loc", [null, [50, 12], [50, 26]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonlyClass", ["loc", [null, [51, 15], [51, 28]]]]], [], []], "onChange", ["subexpr", "action", ["changeStartClass"], [], ["loc", [null, [52, 15], [52, 42]]]]], ["loc", [null, [47, 4], [53, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.startClass", ["loc", [null, [54, 40], [54, 63]]]]], [], []], "pointing", "pointing"], ["loc", [null, [54, 4], [54, 85]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.end-class-caption"], [], ["loc", [null, [57, 11], [57, 67]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "@mut", [["get", "implementationsName", ["loc", [null, [60, 12], [60, 31]]]]], [], []], "value", ["subexpr", "@mut", [["get", "endClassName", ["loc", [null, [61, 12], [61, 24]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonlyClass", ["loc", [null, [62, 15], [62, 28]]]]], [], []], "onChange", ["subexpr", "action", ["changeEndClass"], [], ["loc", [null, [63, 15], [63, 40]]]]], ["loc", [null, [58, 4], [64, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.endClass", ["loc", [null, [65, 40], [65, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [65, 4], [65, 83]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.description-caption"], [], ["loc", [null, [68, 11], [68, 69]]]], ["inline", "flexberry-textarea", [], ["value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [71, 12], [71, 29]]]]], [], []]], ["loc", [null, [69, 4], [72, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.start-role-caption"], [], ["loc", [null, [75, 11], [75, 68]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.startRole", ["loc", [null, [78, 12], [78, 27]]]]], [], []]], ["loc", [null, [76, 4], [79, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.end-role-caption"], [], ["loc", [null, [82, 11], [82, 66]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.endRole", ["loc", [null, [85, 12], [85, 25]]]]], [], []]], ["loc", [null, [83, 4], [86, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.start-multiplicity-caption"], [], ["loc", [null, [89, 11], [89, 76]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.startMultiplicity", ["loc", [null, [92, 12], [92, 35]]]]], [], []]], ["loc", [null, [90, 4], [93, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.end-role-stored-caption"], [], ["loc", [null, [96, 11], [96, 73]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.endRoleStored", ["loc", [null, [99, 12], [99, 31]]]]], [], []]], ["loc", [null, [97, 4], [100, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.aggregation-auto-generate-type-usage-caption"], [], ["loc", [null, [103, 11], [103, 94]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.autoGenerateTypeUsage", ["loc", [null, [106, 12], [106, 39]]]]], [], []]], ["loc", [null, [104, 4], [107, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.aggregation-type-usage-caption"], [], ["loc", [null, [110, 11], [110, 80]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.typeUsage", ["loc", [null, [113, 12], [113, 27]]]]], [], []]], ["loc", [null, [111, 4], [114, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.storage"], [], ["loc", [null, [117, 11], [117, 57]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.storage", ["loc", [null, [120, 12], [120, 25]]]]], [], []]], ["loc", [null, [118, 4], [121, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.auto-store-master-disabled-caption"], [], ["loc", [null, [124, 11], [124, 84]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.autoStoreMasterDisabled", ["loc", [null, [127, 12], [127, 41]]]]], [], []]], ["loc", [null, [125, 4], [128, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.detail-auto-generate-type-usage-caption"], [], ["loc", [null, [131, 11], [131, 89]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.autoGenerateDetailTypeUsage", ["loc", [null, [134, 12], [134, 45]]]]], [], []]], ["loc", [null, [132, 4], [135, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.detail-type-usage-caption"], [], ["loc", [null, [138, 11], [138, 75]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.detailTypeUsage", ["loc", [null, [141, 12], [141, 33]]]]], [], []]], ["loc", [null, [139, 4], [142, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.pb-aggregation-custom-attributes-caption"], [], ["loc", [null, [145, 11], [145, 90]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBAggregatorCustomAttributes", ["loc", [null, [148, 12], [148, 46]]]]], [], []]], ["loc", [null, [146, 4], [149, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.pb-aggregation-get-start-caption"], [], ["loc", [null, [152, 11], [152, 82]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBAggregatorGetStart", ["loc", [null, [155, 12], [155, 38]]]]], [], []]], ["loc", [null, [153, 4], [156, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.pb-aggregation-get-end-caption"], [], ["loc", [null, [159, 11], [159, 80]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBAggregatorGetEnd", ["loc", [null, [162, 12], [162, 36]]]]], [], []]], ["loc", [null, [160, 4], [163, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.pb-aggregation-set-start-caption"], [], ["loc", [null, [166, 11], [166, 82]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBAggregatorSetStart", ["loc", [null, [169, 12], [169, 38]]]]], [], []]], ["loc", [null, [167, 4], [170, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.pb-aggregation-set-end-caption"], [], ["loc", [null, [173, 11], [173, 80]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBAggregatorSetEnd", ["loc", [null, [176, 12], [176, 36]]]]], [], []]], ["loc", [null, [174, 4], [177, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.pb-detail-custom-attributes-caption"], [], ["loc", [null, [180, 11], [180, 85]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBDetailCustomAttributes", ["loc", [null, [183, 12], [183, 42]]]]], [], []]], ["loc", [null, [181, 4], [184, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.pb-detail-get-start-caption"], [], ["loc", [null, [187, 11], [187, 77]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBDetailGetStart", ["loc", [null, [190, 12], [190, 34]]]]], [], []]], ["loc", [null, [188, 4], [191, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.pb-detail-get-end-caption"], [], ["loc", [null, [194, 11], [194, 75]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBDetailGetEnd", ["loc", [null, [197, 12], [197, 32]]]]], [], []]], ["loc", [null, [195, 4], [198, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.pb-detail-set-start-caption"], [], ["loc", [null, [201, 11], [201, 77]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBDetailSetStart", ["loc", [null, [204, 12], [204, 34]]]]], [], []]], ["loc", [null, [202, 4], [205, 6]]]], ["inline", "t", ["forms.fd-aggregation-edit-form.pb-detail-set-end-caption"], [], ["loc", [null, [208, 11], [208, 75]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBDetailSetEnd", ["loc", [null, [211, 12], [211, 32]]]]], [], []]], ["loc", [null, [209, 4], [212, 6]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/fd-aggregation-list-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-aggregation-list-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.fd-aggregation-list-form.caption"], [], ["loc", [null, [2, 4], [2, 50]]]], ["inline", "flexberry-objectlistview", [], ["modelName", "fd-dev-aggregation", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 12], [8, 17]]]]], [], []], "createNewButton", true, "refreshButton", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [11, 12], [11, 27]]]]], [], []], "orderable", true, "enableFilters", true, "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [14, 12], [14, 19]]]]], [], []], "disableHierarchicalMode", true, "applyFilters", ["subexpr", "action", ["applyFilters"], [], ["loc", [null, [16, 17], [16, 40]]]], "resetFilters", ["subexpr", "action", ["resetFilters"], [], ["loc", [null, [17, 17], [17, 40]]]], "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [18, 17], [18, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [19, 23], [19, 52]]]], "showEditMenuItemInRow", true, "showDeleteMenuItemInRow", true, "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [22, 10], [22, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [23, 17], [23, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [24, 18], [24, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [25, 22], [25, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [26, 20], [26, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [27, 16], [27, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [28, 17], [28, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [29, 13], [29, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [30, 13], [30, 32]]]], "componentName", "FdAggregationListForm"], ["loc", [null, [4, 2], [32, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-aggregation-list-form/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-aggregation-list-form/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-application-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 8
              },
              "end": {
                "line": 20,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-application-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [17, 66], [17, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [18, 12], [18, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-application-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [13, 60], [13, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [14, 10], [14, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [16, 18], [16, 29]]]]], [], 0, null, ["loc", [null, [16, 8], [20, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 185,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-application-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var element7 = dom.childAt(element2, [11]);
        var element8 = dom.childAt(element2, [13]);
        var element9 = dom.childAt(element2, [15]);
        var element10 = dom.childAt(element2, [17]);
        var element11 = dom.childAt(element2, [19]);
        var element12 = dom.childAt(element2, [21]);
        var element13 = dom.childAt(element2, [23]);
        var element14 = dom.childAt(element2, [25]);
        var element15 = dom.childAt(element2, [27]);
        var element16 = dom.childAt(element2, [29]);
        var element17 = dom.childAt(element2, [31]);
        var morphs = new Array(35);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createMorphAt(element2, 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(element3, 1, 1);
        morphs[5] = dom.createElementMorph(element4);
        morphs[6] = dom.createMorphAt(element4, 1, 1);
        morphs[7] = dom.createMorphAt(element5, 1, 1);
        morphs[8] = dom.createMorphAt(element5, 3, 3);
        morphs[9] = dom.createMorphAt(element6, 1, 1);
        morphs[10] = dom.createMorphAt(element6, 3, 3);
        morphs[11] = dom.createMorphAt(element7, 1, 1);
        morphs[12] = dom.createMorphAt(element7, 3, 3);
        morphs[13] = dom.createMorphAt(dom.childAt(element8, [1]), 0, 0);
        morphs[14] = dom.createMorphAt(element8, 3, 3);
        morphs[15] = dom.createMorphAt(element9, 1, 1);
        morphs[16] = dom.createMorphAt(element9, 3, 3);
        morphs[17] = dom.createMorphAt(dom.childAt(element10, [1]), 0, 0);
        morphs[18] = dom.createMorphAt(element10, 3, 3);
        morphs[19] = dom.createMorphAt(dom.childAt(element11, [1]), 0, 0);
        morphs[20] = dom.createMorphAt(element11, 3, 3);
        morphs[21] = dom.createMorphAt(element12, 1, 1);
        morphs[22] = dom.createMorphAt(element12, 3, 3);
        morphs[23] = dom.createMorphAt(element13, 1, 1);
        morphs[24] = dom.createMorphAt(element13, 3, 3);
        morphs[25] = dom.createMorphAt(element14, 1, 1);
        morphs[26] = dom.createMorphAt(element14, 3, 3);
        morphs[27] = dom.createMorphAt(dom.childAt(element15, [1]), 0, 0);
        morphs[28] = dom.createMorphAt(element15, 3, 3);
        morphs[29] = dom.createMorphAt(dom.childAt(element16, [1]), 0, 0);
        morphs[30] = dom.createMorphAt(element16, 3, 3);
        morphs[31] = dom.createMorphAt(element16, 5, 5);
        morphs[32] = dom.createMorphAt(dom.childAt(element17, [1]), 0, 0);
        morphs[33] = dom.createMorphAt(element17, 3, 3);
        morphs[34] = dom.createMorphAt(element17, 5, 5);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-application-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 68]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [3, 47], [3, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [4, 26], [4, 31]]]]], [], []]], ["loc", [null, [4, 2], [4, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [7, 43], [7, 55]]]]], [], []]], ["loc", [null, [7, 6], [7, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [12, 16], [12, 24]]]]], [], 0, null, ["loc", [null, [12, 6], [21, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [22, 59], [22, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [23, 8], [23, 49]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [30, 16], [30, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [31, 13], [31, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [33, 10], [33, 20]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [34, 14], [34, 31]]]], "error", ""], [], ["loc", [null, [34, 10], [34, 43]]]], "label", ["subexpr", "t", ["forms.fd-application-edit-form.name-caption"], [], ["loc", [null, [35, 10], [35, 59]]]]], ["loc", [null, [28, 2], [36, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [37, 38], [37, 55]]]]], [], []], "pointing", "pointing"], ["loc", [null, [37, 2], [37, 77]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [43, 16], [43, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [44, 13], [44, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [46, 10], [46, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [47, 14], [47, 38]]]], "error", ""], [], ["loc", [null, [47, 10], [47, 50]]]], "label", ["subexpr", "t", ["forms.fd-application-edit-form.description-caption"], [], ["loc", [null, [48, 10], [48, 66]]]]], ["loc", [null, [41, 2], [49, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [50, 38], [50, 62]]]]], [], []], "pointing", "pointing"], ["loc", [null, [50, 2], [50, 84]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [56, 16], [56, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [57, 13], [57, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.caption", ["loc", [null, [59, 10], [59, 23]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.caption", ["loc", [null, [60, 14], [60, 34]]]], "error", ""], [], ["loc", [null, [60, 10], [60, 46]]]], "label", ["subexpr", "t", ["forms.fd-application-edit-form.caption-caption"], [], ["loc", [null, [61, 10], [61, 62]]]]], ["loc", [null, [54, 2], [62, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.caption", ["loc", [null, [63, 38], [63, 58]]]]], [], []], "pointing", "pointing"], ["loc", [null, [63, 2], [63, 80]]]], ["inline", "t", ["forms.fd-application-edit-form.standartDesktop-caption"], [], ["loc", [null, [67, 9], [67, 71]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [70, 13], [70, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.standartDesktop", ["loc", [null, [71, 10], [71, 31]]]]], [], []]], ["loc", [null, [68, 2], [72, 4]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [78, 16], [78, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [79, 13], [79, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.namespacePostfix", ["loc", [null, [81, 10], [81, 32]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.namespacePostfix", ["loc", [null, [82, 14], [82, 43]]]], "error", ""], [], ["loc", [null, [82, 10], [82, 55]]]], "label", ["subexpr", "t", ["forms.fd-application-edit-form.namespacePostfix-caption"], [], ["loc", [null, [83, 10], [83, 71]]]]], ["loc", [null, [76, 2], [84, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.namespacePostfix", ["loc", [null, [85, 38], [85, 67]]]]], [], []], "pointing", "pointing"], ["loc", [null, [85, 2], [85, 89]]]], ["inline", "t", ["forms.fd-application-edit-form.pBCustomAttributes-caption"], [], ["loc", [null, [89, 9], [89, 74]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [92, 13], [92, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.pBCustomAttributes", ["loc", [null, [93, 10], [93, 34]]]]], [], []]], ["loc", [null, [90, 2], [94, 4]]]], ["inline", "t", ["forms.fd-application-edit-form.disableAllRightChecks-caption"], [], ["loc", [null, [98, 9], [98, 77]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [101, 13], [101, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.disableAllRightChecks", ["loc", [null, [102, 10], [102, 37]]]]], [], []]], ["loc", [null, [99, 2], [103, 4]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [109, 16], [109, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [110, 13], [110, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.containersStr", ["loc", [null, [112, 10], [112, 29]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.containersStr", ["loc", [null, [113, 14], [113, 40]]]], "error", ""], [], ["loc", [null, [113, 10], [113, 52]]]], "label", ["subexpr", "t", ["forms.fd-application-edit-form.containersStr-caption"], [], ["loc", [null, [114, 10], [114, 68]]]]], ["loc", [null, [107, 2], [115, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.containersStr", ["loc", [null, [116, 38], [116, 64]]]]], [], []], "pointing", "pointing"], ["loc", [null, [116, 2], [116, 86]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [122, 16], [122, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [123, 13], [123, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.auditConnectionStringName", ["loc", [null, [125, 10], [125, 41]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.auditConnectionStringName", ["loc", [null, [126, 14], [126, 52]]]], "error", ""], [], ["loc", [null, [126, 10], [126, 64]]]], "label", ["subexpr", "t", ["forms.fd-application-edit-form.auditConnectionStringName-caption"], [], ["loc", [null, [127, 10], [127, 80]]]]], ["loc", [null, [120, 2], [128, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.auditConnectionStringName", ["loc", [null, [129, 38], [129, 76]]]]], [], []], "pointing", "pointing"], ["loc", [null, [129, 2], [129, 98]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [135, 16], [135, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [136, 13], [136, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.auditWinServiceUrl", ["loc", [null, [138, 10], [138, 34]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.auditWinServiceUrl", ["loc", [null, [139, 14], [139, 45]]]], "error", ""], [], ["loc", [null, [139, 10], [139, 57]]]], "label", ["subexpr", "t", ["forms.fd-application-edit-form.auditWinServiceUrl-caption"], [], ["loc", [null, [140, 10], [140, 73]]]]], ["loc", [null, [133, 2], [141, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.auditWinServiceUrl", ["loc", [null, [142, 38], [142, 69]]]]], [], []], "pointing", "pointing"], ["loc", [null, [142, 2], [142, 91]]]], ["inline", "t", ["forms.fd-application-edit-form.writeSessions-caption"], [], ["loc", [null, [146, 9], [146, 69]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [149, 13], [149, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.writeSessions", ["loc", [null, [150, 10], [150, 29]]]]], [], []]], ["loc", [null, [147, 2], [151, 4]]]], ["inline", "t", ["forms.fd-application-edit-form.attributes-caption"], [], ["loc", [null, [155, 9], [155, 66]]]], ["inline", "flexberry-groupedit", [], ["componentName", "attributesGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [159, 24], [159, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.attributes", ["loc", [null, [160, 20], [160, 57]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.attributes", ["loc", [null, [161, 12], [161, 28]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [162, 13], [162, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.attributes", ["loc", [null, [164, 14], [164, 37]]]], "error", ""], [], ["loc", [null, [164, 10], [164, 49]]]]], ["loc", [null, [156, 2], [165, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.attributes", ["loc", [null, [166, 38], [166, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [166, 2], [166, 83]]]], ["inline", "t", ["forms.fd-application-edit-form.methods-caption"], [], ["loc", [null, [170, 9], [170, 63]]]], ["inline", "flexberry-groupedit", [], ["componentName", "methodsGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [174, 24], [174, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.methods", ["loc", [null, [175, 20], [175, 54]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.methods", ["loc", [null, [176, 12], [176, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [177, 13], [177, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.methods", ["loc", [null, [179, 14], [179, 34]]]], "error", ""], [], ["loc", [null, [179, 10], [179, 46]]]]], ["loc", [null, [171, 2], [180, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.methods", ["loc", [null, [181, 38], [181, 58]]]]], [], []], "pointing", "pointing"], ["loc", [null, [181, 2], [181, 80]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/fd-appstruct-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 8,
              "column": 6
            },
            "end": {
              "line": 12,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-appstruct-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          dom.setAttribute(el1, "class", "ui button close-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element17 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element17);
          morphs[1] = dom.createMorphAt(element17, 1, 1);
          return morphs;
        },
        statements: [["element", "action", ["close"], [], ["loc", [null, [9, 61], [9, 79]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [10, 10], [10, 51]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-appstruct-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "class", "ui inverted button icon close-panel-btn");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element15 = dom.childAt(fragment, [1]);
          var element16 = dom.childAt(element15, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element15);
          morphs[1] = dom.createAttrMorph(element16, 'class');
          return morphs;
        },
        statements: [["element", "action", ["closeRightpanel"], ["on", "click"], ["loc", [null, [65, 78], [65, 118]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "allAttrsHidedn", ["loc", [null, [66, 25], [66, 39]]]], "chevron right", "chevron left"], [], ["loc", [null, [66, 20], [66, 72]]]], " icon"]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 127,
                "column": 2
              },
              "end": {
                "line": 136,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-appstruct-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["forms.fd-appstruct-form.remove-approve"], [], ["loc", [null, [135, 4], [135, 50]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 126,
              "column": 0
            },
            "end": {
              "line": 137,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-appstruct-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "modal-dialog", [], ["title", ["subexpr", "t", ["forms.fd-appstruct-form.remove-control"], [], ["loc", [null, [128, 10], [128, 54]]]], "ok", ["subexpr", "action", ["removeLeftNode", true], [], ["loc", [null, [129, 7], [129, 37]]]], "settings", ["subexpr", "hash", [], ["onHidden", ["subexpr", "action", [["get", "set", ["loc", [null, [131, 23], [131, 26]]]], "_showModalDialog", false], [], ["loc", [null, [131, 15], [131, 52]]]], "context", ".pusher:first"], ["loc", [null, [130, 13], [133, 5]]]]], 0, null, ["loc", [null, [127, 2], [136, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 148,
                  "column": 6
                },
                "end": {
                  "line": 201,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/fd-appstruct-form.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui small dividing header");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("label");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("label");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("label");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("label");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("label");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("label");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("label");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element7 = dom.childAt(fragment, [3]);
              var element8 = dom.childAt(fragment, [5]);
              var element9 = dom.childAt(fragment, [7]);
              var element10 = dom.childAt(fragment, [9]);
              var element11 = dom.childAt(fragment, [11]);
              var element12 = dom.childAt(fragment, [13]);
              var element13 = dom.childAt(fragment, [15]);
              var morphs = new Array(15);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createMorphAt(dom.childAt(element7, [1]), 0, 0);
              morphs[2] = dom.createMorphAt(element7, 3, 3);
              morphs[3] = dom.createMorphAt(dom.childAt(element8, [1]), 0, 0);
              morphs[4] = dom.createMorphAt(element8, 3, 3);
              morphs[5] = dom.createMorphAt(dom.childAt(element9, [1]), 0, 0);
              morphs[6] = dom.createMorphAt(element9, 3, 3);
              morphs[7] = dom.createMorphAt(dom.childAt(element10, [1]), 0, 0);
              morphs[8] = dom.createMorphAt(element10, 3, 3);
              morphs[9] = dom.createMorphAt(dom.childAt(element11, [1]), 0, 0);
              morphs[10] = dom.createMorphAt(element11, 3, 3);
              morphs[11] = dom.createMorphAt(dom.childAt(element12, [1]), 0, 0);
              morphs[12] = dom.createMorphAt(element12, 3, 3);
              morphs[13] = dom.createMorphAt(dom.childAt(element13, [1]), 0, 0);
              morphs[14] = dom.createMorphAt(element13, 3, 3);
              return morphs;
            },
            statements: [["inline", "t", ["forms.fd-appstruct-form.form-config-panel.app-properties-header"], [], ["loc", [null, [150, 10], [150, 81]]]], ["inline", "t", ["forms.fd-appstruct-form.tab.name"], [], ["loc", [null, [153, 17], [153, 57]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.applications.0.name", ["loc", [null, [156, 18], [156, 43]]]]], [], []]], ["loc", [null, [154, 10], [157, 12]]]], ["inline", "t", ["forms.fd-appstruct-form.tab.description"], [], ["loc", [null, [160, 17], [160, 64]]]], ["inline", "flexberry-textarea", [], ["value", ["subexpr", "@mut", [["get", "model.applications.0.description", ["loc", [null, [163, 18], [163, 50]]]]], [], []]], ["loc", [null, [161, 10], [164, 12]]]], ["inline", "t", ["forms.fd-appstruct-form.tab.caption"], [], ["loc", [null, [167, 17], [167, 60]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.applications.0.caption", ["loc", [null, [170, 18], [170, 46]]]]], [], []]], ["loc", [null, [168, 10], [171, 12]]]], ["inline", "t", ["forms.fd-appstruct-form.tab.standart-desktop"], [], ["loc", [null, [174, 17], [174, 69]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.applications.0.standartDesktop", ["loc", [null, [177, 18], [177, 54]]]]], [], []]], ["loc", [null, [175, 10], [178, 12]]]], ["inline", "t", ["forms.fd-appstruct-form.tab.namespace-postfix"], [], ["loc", [null, [181, 17], [181, 70]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.applications.0.namespacePostfix", ["loc", [null, [184, 18], [184, 55]]]]], [], []]], ["loc", [null, [182, 10], [185, 12]]]], ["inline", "t", ["forms.fd-appstruct-form.tab.pb-custom-attributes"], [], ["loc", [null, [188, 17], [188, 73]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.applications.0.pBCustomAttributes", ["loc", [null, [191, 18], [191, 57]]]]], [], []]], ["loc", [null, [189, 10], [192, 12]]]], ["inline", "t", ["forms.fd-appstruct-form.tab.disable-all-right-checks"], [], ["loc", [null, [195, 17], [195, 77]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.applications.0.disableAllRightChecks", ["loc", [null, [198, 18], [198, 60]]]]], [], []]], ["loc", [null, [196, 10], [199, 12]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          var child0 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 204,
                      "column": 10
                    },
                    "end": {
                      "line": 212,
                      "column": 10
                    }
                  },
                  "moduleName": "dummy/templates/fd-appstruct-form.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("            ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createElement("div");
                  dom.setAttribute(el1, "class", "field disabled");
                  var el2 = dom.createTextNode("\n              ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createElement("label");
                  var el3 = dom.createComment("");
                  dom.appendChild(el2, el3);
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n              ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createComment("");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n            ");
                  dom.appendChild(el1, el2);
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var element5 = dom.childAt(fragment, [1]);
                  var morphs = new Array(2);
                  morphs[0] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
                  morphs[1] = dom.createMorphAt(element5, 3, 3);
                  return morphs;
                },
                statements: [["inline", "t", ["forms.fd-appstruct-form.tab.formName"], [], ["loc", [null, [206, 21], [206, 65]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "selectedElementForEdit.className", ["loc", [null, [209, 22], [209, 54]]]]], [], []]], ["loc", [null, [207, 14], [210, 16]]]]],
                locals: [],
                templates: []
              };
            })();
            var child1 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 220,
                      "column": 10
                    },
                    "end": {
                      "line": 228,
                      "column": 10
                    }
                  },
                  "moduleName": "dummy/templates/fd-appstruct-form.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("            ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createElement("div");
                  var el2 = dom.createTextNode("\n              ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createElement("label");
                  var el3 = dom.createComment("");
                  dom.appendChild(el2, el3);
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n              ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createComment("");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n            ");
                  dom.appendChild(el1, el2);
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var element4 = dom.childAt(fragment, [1]);
                  var morphs = new Array(3);
                  morphs[0] = dom.createAttrMorph(element4, 'class');
                  morphs[1] = dom.createMorphAt(dom.childAt(element4, [1]), 0, 0);
                  morphs[2] = dom.createMorphAt(element4, 3, 3);
                  return morphs;
                },
                statements: [["attribute", "class", ["concat", ["field ", ["subexpr", "if", [["subexpr", "eq", [["get", "selectedElementForEdit.type", ["loc", [null, [221, 39], [221, 66]]]], "desk"], [], ["loc", [null, [221, 35], [221, 74]]]], " disabled"], [], ["loc", [null, [221, 30], [221, 88]]]]]]], ["inline", "t", ["forms.fd-appstruct-form.tab.title"], [], ["loc", [null, [222, 21], [222, 62]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "selectedElementForEdit.text", ["loc", [null, [225, 22], [225, 49]]]]], [], []]], ["loc", [null, [223, 14], [226, 16]]]]],
                locals: [],
                templates: []
              };
            })();
            var child2 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 228,
                      "column": 10
                    },
                    "end": {
                      "line": 236,
                      "column": 10
                    }
                  },
                  "moduleName": "dummy/templates/fd-appstruct-form.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("            ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createElement("div");
                  var el2 = dom.createTextNode("\n              ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createElement("label");
                  var el3 = dom.createComment("");
                  dom.appendChild(el2, el3);
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n              ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createComment("");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n            ");
                  dom.appendChild(el1, el2);
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var element3 = dom.childAt(fragment, [1]);
                  var morphs = new Array(3);
                  morphs[0] = dom.createAttrMorph(element3, 'class');
                  morphs[1] = dom.createMorphAt(dom.childAt(element3, [1]), 0, 0);
                  morphs[2] = dom.createMorphAt(element3, 3, 3);
                  return morphs;
                },
                statements: [["attribute", "class", ["concat", ["field ", ["subexpr", "if", [["subexpr", "or", [["subexpr", "eq", [["get", "selectedElementForEdit.type", ["loc", [null, [229, 43], [229, 70]]]], "folder"], [], ["loc", [null, [229, 39], [229, 80]]]], ["subexpr", "eq", [["get", "selectedElementForEdit.type", ["loc", [null, [229, 85], [229, 112]]]], "desk"], [], ["loc", [null, [229, 81], [229, 120]]]]], [], ["loc", [null, [229, 35], [229, 121]]]], " disabled"], [], ["loc", [null, [229, 30], [229, 135]]]]]]], ["inline", "t", ["forms.fd-appstruct-form.tab.title"], [], ["loc", [null, [230, 21], [230, 62]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "selectedElementForEdit.caption", ["loc", [null, [233, 22], [233, 52]]]]], [], []]], ["loc", [null, [231, 14], [234, 16]]]]],
                locals: [],
                templates: []
              };
            })();
            var child3 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 237,
                      "column": 10
                    },
                    "end": {
                      "line": 245,
                      "column": 10
                    }
                  },
                  "moduleName": "dummy/templates/fd-appstruct-form.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("            ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createElement("div");
                  dom.setAttribute(el1, "class", "field");
                  var el2 = dom.createTextNode("\n              ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createElement("label");
                  var el3 = dom.createComment("");
                  dom.appendChild(el2, el3);
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n              ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createComment("");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n            ");
                  dom.appendChild(el1, el2);
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var element2 = dom.childAt(fragment, [1]);
                  var morphs = new Array(2);
                  morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
                  morphs[1] = dom.createMorphAt(element2, 3, 3);
                  return morphs;
                },
                statements: [["inline", "t", ["forms.fd-appstruct-form.tab.url"], [], ["loc", [null, [239, 21], [239, 60]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "selectedElementForEdit.url", ["loc", [null, [242, 22], [242, 48]]]]], [], []]], ["loc", [null, [240, 14], [243, 16]]]]],
                locals: [],
                templates: []
              };
            })();
            var child4 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 246,
                      "column": 10
                    },
                    "end": {
                      "line": 254,
                      "column": 10
                    }
                  },
                  "moduleName": "dummy/templates/fd-appstruct-form.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("            ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createElement("div");
                  dom.setAttribute(el1, "class", "field");
                  var el2 = dom.createTextNode("\n              ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createElement("label");
                  var el3 = dom.createComment("");
                  dom.appendChild(el2, el3);
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n              ");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createComment("");
                  dom.appendChild(el1, el2);
                  var el2 = dom.createTextNode("\n            ");
                  dom.appendChild(el1, el2);
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var element1 = dom.childAt(fragment, [1]);
                  var morphs = new Array(2);
                  morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 0, 0);
                  morphs[1] = dom.createMorphAt(element1, 3, 3);
                  return morphs;
                },
                statements: [["inline", "t", ["forms.fd-appstruct-form.tab.description"], [], ["loc", [null, [248, 21], [248, 68]]]], ["inline", "flexberry-textarea", [], ["value", ["subexpr", "@mut", [["get", "selectedElementForEdit.description", ["loc", [null, [251, 22], [251, 56]]]]], [], []]], ["loc", [null, [249, 14], [252, 16]]]]],
                locals: [],
                templates: []
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 203,
                    "column": 8
                  },
                  "end": {
                    "line": 255,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/fd-appstruct-form.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "field disabled");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("label");
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                var el1 = dom.createComment("");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element6 = dom.childAt(fragment, [2]);
                var morphs = new Array(6);
                morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
                morphs[1] = dom.createMorphAt(dom.childAt(element6, [1]), 0, 0);
                morphs[2] = dom.createMorphAt(element6, 3, 3);
                morphs[3] = dom.createMorphAt(fragment, 4, 4, contextualElement);
                morphs[4] = dom.createMorphAt(fragment, 5, 5, contextualElement);
                morphs[5] = dom.createMorphAt(fragment, 6, 6, contextualElement);
                dom.insertBoundary(fragment, 0);
                dom.insertBoundary(fragment, null);
                return morphs;
              },
              statements: [["block", "if", [["subexpr", "and", [["subexpr", "not-eq", [["get", "selectedElementForEdit.type", ["loc", [null, [204, 29], [204, 56]]]], "url"], [], ["loc", [null, [204, 21], [204, 63]]]], ["subexpr", "not-eq", [["get", "selectedElementForEdit.type", ["loc", [null, [204, 72], [204, 99]]]], "folder"], [], ["loc", [null, [204, 64], [204, 109]]]], ["subexpr", "not-eq", [["get", "selectedElementForEdit.type", ["loc", [null, [204, 118], [204, 145]]]], "desk"], [], ["loc", [null, [204, 110], [204, 153]]]]], [], ["loc", [null, [204, 16], [204, 154]]]]], [], 0, null, ["loc", [null, [204, 10], [212, 17]]]], ["inline", "t", ["forms.fd-appstruct-form.tab.formType"], [], ["loc", [null, [214, 19], [214, 63]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "selectedElementForEdit.type", ["loc", [null, [217, 20], [217, 47]]]]], [], []]], ["loc", [null, [215, 12], [218, 14]]]], ["block", "if", [["subexpr", "or", [["subexpr", "eq", [["get", "selectedElementForEdit.type", ["loc", [null, [220, 24], [220, 51]]]], "folder"], [], ["loc", [null, [220, 20], [220, 61]]]], ["subexpr", "eq", [["get", "selectedElementForEdit.type", ["loc", [null, [220, 66], [220, 93]]]], "desk"], [], ["loc", [null, [220, 62], [220, 101]]]]], [], ["loc", [null, [220, 16], [220, 102]]]]], [], 1, 2, ["loc", [null, [220, 10], [236, 17]]]], ["block", "if", [["subexpr", "eq", [["get", "selectedElementForEdit.type", ["loc", [null, [237, 20], [237, 47]]]], "url"], [], ["loc", [null, [237, 16], [237, 54]]]]], [], 3, null, ["loc", [null, [237, 10], [245, 17]]]], ["block", "if", [["subexpr", "and", [["subexpr", "not-eq", [["get", "selectedElementForEdit.type", ["loc", [null, [246, 29], [246, 56]]]], "folder"], [], ["loc", [null, [246, 21], [246, 66]]]], ["subexpr", "not-eq", [["get", "selectedElementForEdit.type", ["loc", [null, [246, 75], [246, 102]]]], "desk"], [], ["loc", [null, [246, 67], [246, 110]]]]], [], ["loc", [null, [246, 16], [246, 111]]]]], [], 4, null, ["loc", [null, [246, 10], [254, 17]]]]],
              locals: [],
              templates: [child0, child1, child2, child3, child4]
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 255,
                    "column": 8
                  },
                  "end": {
                    "line": 262,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/fd-appstruct-form.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "ui info message");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("div");
                dom.setAttribute(el2, "class", "header");
                var el3 = dom.createTextNode("\n              ");
                dom.appendChild(el2, el3);
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("\n            ");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("p");
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element0 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
                morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 0, 0);
                return morphs;
              },
              statements: [["inline", "t", ["forms.fd-appstruct-form.tab.selected-element-null"], [], ["loc", [null, [258, 14], [258, 71]]]], ["inline", "t", ["forms.fd-appstruct-form.tab.selected-element-change"], [], ["loc", [null, [260, 15], [260, 74]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 202,
                  "column": 6
                },
                "end": {
                  "line": 263,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/fd-appstruct-form.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["subexpr", "not-eq", [["get", "jstreeSelectedNodesRight.length", ["loc", [null, [203, 22], [203, 53]]]], 0], [], ["loc", [null, [203, 14], [203, 56]]]]], [], 0, 1, ["loc", [null, [203, 8], [262, 15]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 141,
                "column": 2
              },
              "end": {
                "line": 265,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-appstruct-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("form");
            dom.setAttribute(el1, "class", "ui form segment");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "ui segment");
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3, "class", "ui large header");
            var el4 = dom.createTextNode("\n          ");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n        ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n      ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element14 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createMorphAt(dom.childAt(element14, [1, 1]), 1, 1);
            morphs[1] = dom.createMorphAt(element14, 3, 3);
            morphs[2] = dom.createMorphAt(element14, 4, 4);
            return morphs;
          },
          statements: [["inline", "t", ["forms.fd-appstruct-form.form-config-panel.caption"], [], ["loc", [null, [145, 10], [145, 67]]]], ["block", "ui-tab-segment", [], ["tab", "first", "title", ["subexpr", "t", ["forms.fd-appstruct-form.form-config-panel.app-properties-header"], [], ["loc", [null, [148, 42], [148, 111]]]], "theme", "", "active", true], 0, null, ["loc", [null, [148, 6], [201, 25]]]], ["block", "ui-tab-segment", [], ["tab", "second", "title", ["subexpr", "t", ["forms.fd-appstruct-form.form-config-panel.forms-properties-header"], [], ["loc", [null, [202, 43], [202, 114]]]], "theme", ""], 1, null, ["loc", [null, [202, 6], [263, 25]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 139,
              "column": 0
            },
            "end": {
              "line": 267,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-appstruct-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["block", "fd-tabs", [], ["tabsMenuTheme", "vertical tabular", "class", "ui segments horizontal right-tabs"], 0, null, ["loc", [null, [141, 2], [265, 14]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 268,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-appstruct-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h3");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "button");
        var el5 = dom.createElement("i");
        dom.setAttribute(el5, "class", "sitemap icon");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "class", "ui  button");
        dom.setAttribute(el4, "type", "button");
        var el5 = dom.createElement("i");
        dom.setAttribute(el5, "class", "settings icon");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "panel-wrapper");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "panel-left closable");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui buttons");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "remove icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "class", "ui button create-button");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "add circle icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "add circle icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "pencil icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "add circle icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "list ul icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "edit icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "class", "ui button icon");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "list icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui segments");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "ui segment");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "field");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "ui segment overflow-panel");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "panel-toolbar");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("i");
        dom.setAttribute(el5, "class", "right long arrow icon");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "panel-right");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui buttons");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "plus icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "edit icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "remove icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "folder icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "arrow up icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "arrow down icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "class", "ui button icon");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "arrow save icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui segments");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "ui segment");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "field");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "ui segment overflow-panel");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element18 = dom.childAt(fragment, [0]);
        var element19 = dom.childAt(element18, [5, 1]);
        var element20 = dom.childAt(element19, [1]);
        var element21 = dom.childAt(element19, [3]);
        var element22 = dom.childAt(element18, [7]);
        var element23 = dom.childAt(element22, [1]);
        var element24 = dom.childAt(element23, [1]);
        var element25 = dom.childAt(element24, [1]);
        var element26 = dom.childAt(element24, [3]);
        var element27 = dom.childAt(element24, [5]);
        var element28 = dom.childAt(element24, [7]);
        var element29 = dom.childAt(element24, [9]);
        var element30 = dom.childAt(element24, [11]);
        var element31 = dom.childAt(element23, [3]);
        var element32 = dom.childAt(element22, [3]);
        var element33 = dom.childAt(element32, [3]);
        var element34 = dom.childAt(element22, [5]);
        var element35 = dom.childAt(element34, [1]);
        var element36 = dom.childAt(element35, [1]);
        var element37 = dom.childAt(element35, [3]);
        var element38 = dom.childAt(element35, [5]);
        var element39 = dom.childAt(element35, [7]);
        var element40 = dom.childAt(element35, [9]);
        var element41 = dom.childAt(element35, [11]);
        var element42 = dom.childAt(element35, [13]);
        var element43 = dom.childAt(element34, [3]);
        var morphs = new Array(49);
        morphs[0] = dom.createAttrMorph(element18, 'class');
        morphs[1] = dom.createMorphAt(element18, 1, 1);
        morphs[2] = dom.createMorphAt(dom.childAt(element18, [3]), 0, 0);
        morphs[3] = dom.createAttrMorph(element20, 'class');
        morphs[4] = dom.createElementMorph(element20);
        morphs[5] = dom.createMorphAt(element20, 1, 1);
        morphs[6] = dom.createElementMorph(element21);
        morphs[7] = dom.createMorphAt(element21, 1, 1);
        morphs[8] = dom.createMorphAt(element19, 5, 5);
        morphs[9] = dom.createAttrMorph(element25, 'class');
        morphs[10] = dom.createAttrMorph(element25, 'title');
        morphs[11] = dom.createElementMorph(element25);
        morphs[12] = dom.createAttrMorph(element26, 'title');
        morphs[13] = dom.createElementMorph(element26);
        morphs[14] = dom.createAttrMorph(element27, 'class');
        morphs[15] = dom.createAttrMorph(element27, 'title');
        morphs[16] = dom.createElementMorph(element27);
        morphs[17] = dom.createAttrMorph(element28, 'class');
        morphs[18] = dom.createAttrMorph(element28, 'title');
        morphs[19] = dom.createElementMorph(element28);
        morphs[20] = dom.createAttrMorph(element29, 'class');
        morphs[21] = dom.createAttrMorph(element29, 'title');
        morphs[22] = dom.createElementMorph(element29);
        morphs[23] = dom.createAttrMorph(element30, 'title');
        morphs[24] = dom.createElementMorph(element30);
        morphs[25] = dom.createMorphAt(dom.childAt(element31, [1]), 1, 1);
        morphs[26] = dom.createMorphAt(dom.childAt(element31, [3]), 1, 1);
        morphs[27] = dom.createMorphAt(dom.childAt(element31, [5]), 1, 1);
        morphs[28] = dom.createMorphAt(element32, 1, 1);
        morphs[29] = dom.createAttrMorph(element33, 'class');
        morphs[30] = dom.createElementMorph(element33);
        morphs[31] = dom.createAttrMorph(element36, 'class');
        morphs[32] = dom.createElementMorph(element36);
        morphs[33] = dom.createAttrMorph(element37, 'class');
        morphs[34] = dom.createElementMorph(element37);
        morphs[35] = dom.createAttrMorph(element38, 'class');
        morphs[36] = dom.createElementMorph(element38);
        morphs[37] = dom.createAttrMorph(element39, 'class');
        morphs[38] = dom.createElementMorph(element39);
        morphs[39] = dom.createAttrMorph(element40, 'class');
        morphs[40] = dom.createElementMorph(element40);
        morphs[41] = dom.createAttrMorph(element41, 'class');
        morphs[42] = dom.createElementMorph(element41);
        morphs[43] = dom.createElementMorph(element42);
        morphs[44] = dom.createMorphAt(dom.childAt(element43, [1]), 1, 1);
        morphs[45] = dom.createMorphAt(dom.childAt(element43, [3]), 1, 1);
        morphs[46] = dom.createMorphAt(dom.childAt(element43, [5]), 1, 1);
        morphs[47] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[48] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [1, 47], [1, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [2, 26], [2, 31]]]]], [], []]], ["loc", [null, [2, 2], [2, 33]]]], ["inline", "t", ["forms.fd-appstruct-form.caption"], [], ["loc", [null, [3, 6], [3, 45]]]], ["attribute", "class", ["concat", ["ui button ", ["subexpr", "if", [["subexpr", "not", [["get", "processMethodologyValue", ["loc", [null, [6, 41], [6, 64]]]]], [], ["loc", [null, [6, 36], [6, 65]]]], " disabled"], [], ["loc", [null, [6, 31], [6, 79]]]]]]], ["element", "action", ["openProcessEditorForm"], [], ["loc", [null, [6, 95], [6, 129]]]], ["inline", "t", ["forms.fd-appstruct-form.button-precess-editor"], [], ["loc", [null, [6, 158], [6, 211]]]], ["element", "action", ["openGenerationForm"], [], ["loc", [null, [7, 47], [7, 78]]]], ["inline", "t", ["forms.fd-appstruct-form.button-generation"], [], ["loc", [null, [7, 108], [7, 157]]]], ["block", "if", [["subexpr", "not", [["get", "singleModeStage", ["loc", [null, [8, 17], [8, 32]]]]], [], ["loc", [null, [8, 12], [8, 33]]]]], [], 0, null, ["loc", [null, [8, 6], [12, 13]]]], ["attribute", "class", ["concat", ["ui button icon ", ["get", "removeLeftNodeDisabled", ["loc", [null, [19, 40], [19, 62]]]]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["forms.fd-appstruct-form.remove-text"], [], ["loc", [null, [19, 87], [19, 130]]]]]]], ["element", "action", ["removeLeftNode"], ["on", "click"], ["loc", [null, [19, 132], [19, 171]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["forms.fd-appstruct-form.add-class-text"], [], ["loc", [null, [22, 69], [22, 115]]]]]]], ["element", "action", ["addLeftClass"], [], ["loc", [null, [22, 117], [22, 142]]]], ["attribute", "class", ["concat", ["ui button create-button ", ["get", "addLeftNodeDisabled", ["loc", [null, [25, 49], [25, 68]]]]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["forms.fd-appstruct-form.add-editform-text"], [], ["loc", [null, [25, 93], [25, 142]]]]]]], ["element", "action", ["addLeftEditForm"], [], ["loc", [null, [25, 144], [25, 172]]]], ["attribute", "class", ["concat", ["ui button create-button ", ["get", "addLeftNodeDisabled", ["loc", [null, [28, 49], [28, 68]]]]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["forms.fd-appstruct-form.add-listform-text"], [], ["loc", [null, [28, 93], [28, 142]]]]]]], ["element", "action", ["addLeftListForm"], [], ["loc", [null, [28, 144], [28, 172]]]], ["attribute", "class", ["concat", ["ui button icon ", ["get", "editLeftNodeDisabled", ["loc", [null, [31, 40], [31, 60]]]]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["forms.fd-appstruct-form.edit-text"], [], ["loc", [null, [31, 85], [31, 126]]]]]]], ["element", "action", ["editLeftNode"], ["on", "click"], ["loc", [null, [31, 128], [31, 165]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["forms.fd-appstruct-form.list-classes-text"], [], ["loc", [null, [34, 60], [34, 109]]]]]]], ["element", "action", ["listLeft"], ["on", "click"], ["loc", [null, [34, 111], [34, 144]]]], ["inline", "t", ["forms.fd-appstruct-form.all-forms-panel-caption"], [], ["loc", [null, [40, 10], [40, 65]]]], ["inline", "flexberry-textbox", [], ["placeholder", ["subexpr", "t", ["forms.fd-appstruct-form.search"], [], ["loc", [null, [45, 24], [45, 60]]]], "value", ["subexpr", "@mut", [["get", "searchTermLeft", ["loc", [null, [46, 18], [46, 32]]]]], [], []]], ["loc", [null, [43, 10], [47, 12]]]], ["inline", "ember-jstree", [], ["actionReceiver", ["subexpr", "@mut", [["get", "jstreeActionReceiverLeft", ["loc", [null, [51, 27], [51, 51]]]]], [], []], "selectedNodes", ["subexpr", "@mut", [["get", "jstreeSelectedNodesLeft", ["loc", [null, [52, 26], [52, 49]]]]], [], []], "data", ["subexpr", "@mut", [["get", "model.leftTreeNodes", ["loc", [null, [53, 17], [53, 36]]]]], [], []], "plugins", ["subexpr", "@mut", [["get", "pluginsLeft", ["loc", [null, [54, 20], [54, 31]]]]], [], []], "searchTerm", ["subexpr", "@mut", [["get", "searchTermLeft", ["loc", [null, [55, 23], [55, 37]]]]], [], []], "searchOptions", ["subexpr", "@mut", [["get", "searchOptions", ["loc", [null, [56, 26], [56, 39]]]]], [], []], "typesOptions", ["subexpr", "@mut", [["get", "typesOptions", ["loc", [null, [57, 25], [57, 37]]]]], [], []]], ["loc", [null, [50, 10], [58, 12]]]], ["block", "ui-popup", [], ["content", ["subexpr", "@mut", [["get", "popupMessage", ["loc", [null, [64, 26], [64, 38]]]]], [], []]], 1, null, ["loc", [null, [64, 6], [68, 19]]]], ["attribute", "class", ["concat", ["ui button icon flexberry-button move ", ["get", "moveRightDisabled", ["loc", [null, [69, 60], [69, 77]]]]]]], ["element", "action", ["moveRightHighlighted"], ["on", "click"], ["loc", [null, [69, 95], [69, 140]]]], ["attribute", "class", ["concat", ["ui button icon ", ["get", "addRightNodeDisabled", ["loc", [null, [76, 40], [76, 60]]]]]]], ["element", "action", ["addUrlNode"], ["on", "click"], ["loc", [null, [76, 78], [76, 113]]]], ["attribute", "class", ["concat", ["ui button icon ", ["get", "editRightNodeDisabled", ["loc", [null, [79, 40], [79, 61]]]]]]], ["element", "action", ["editRightNode"], ["on", "click"], ["loc", [null, [79, 79], [79, 117]]]], ["attribute", "class", ["concat", ["ui button icon ", ["get", "removeRightNodeDisabled", ["loc", [null, [82, 40], [82, 63]]]]]]], ["element", "action", ["removeRightNode"], ["on", "click"], ["loc", [null, [82, 81], [82, 121]]]], ["attribute", "class", ["concat", ["ui button icon ", ["get", "addFolderNodeDisabled", ["loc", [null, [85, 40], [85, 61]]]]]]], ["element", "action", ["addFolderNode"], ["on", "click"], ["loc", [null, [85, 79], [85, 117]]]], ["attribute", "class", ["concat", ["ui button icon ", ["get", "indexSelectedRight.upRightNodeDisabled", ["loc", [null, [88, 40], [88, 78]]]]]]], ["element", "action", ["upRightNode"], ["on", "click"], ["loc", [null, [88, 96], [88, 132]]]], ["attribute", "class", ["concat", ["ui button icon ", ["get", "indexSelectedRight.downRightNodeDisabled", ["loc", [null, [91, 40], [91, 80]]]]]]], ["element", "action", ["downRightNode"], ["on", "click"], ["loc", [null, [91, 98], [91, 136]]]], ["element", "action", ["saveTree"], ["on", "click"], ["loc", [null, [94, 53], [94, 86]]]], ["inline", "t", ["forms.fd-appstruct-form.app-forms-panel-caption"], [], ["loc", [null, [100, 10], [100, 65]]]], ["inline", "flexberry-textbox", [], ["placeholder", ["subexpr", "t", ["forms.fd-appstruct-form.search"], [], ["loc", [null, [105, 24], [105, 60]]]], "value", ["subexpr", "@mut", [["get", "searchTermRight", ["loc", [null, [106, 18], [106, 33]]]]], [], []]], ["loc", [null, [103, 10], [107, 12]]]], ["inline", "ember-jstree", [], ["actionReceiver", ["subexpr", "@mut", [["get", "jstreeActionReceiverRight", ["loc", [null, [111, 27], [111, 52]]]]], [], []], "selectedNodes", ["subexpr", "@mut", [["get", "jstreeSelectedNodesRight", ["loc", [null, [112, 26], [112, 50]]]]], [], []], "data", ["subexpr", "@mut", [["get", "model.rightTreeNodes", ["loc", [null, [113, 17], [113, 37]]]]], [], []], "plugins", ["subexpr", "@mut", [["get", "pluginsRight", ["loc", [null, [114, 20], [114, 32]]]]], [], []], "searchTerm", ["subexpr", "@mut", [["get", "searchTermRight", ["loc", [null, [115, 23], [115, 38]]]]], [], []], "searchOptions", ["subexpr", "@mut", [["get", "searchOptions", ["loc", [null, [116, 26], [116, 39]]]]], [], []], "typesOptions", ["subexpr", "@mut", [["get", "typesOptions", ["loc", [null, [117, 25], [117, 37]]]]], [], []], "treeObject", ["subexpr", "@mut", [["get", "jstreeObjectRight", ["loc", [null, [118, 23], [118, 40]]]]], [], []]], ["loc", [null, [110, 10], [119, 12]]]], ["block", "if", [["get", "_showModalDialog", ["loc", [null, [126, 6], [126, 22]]]]], [], 2, null, ["loc", [null, [126, 0], [137, 7]]]], ["block", "fd-config-panel", [], [], 3, null, ["loc", [null, [139, 0], [267, 20]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define("dummy/templates/fd-association-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-association-edit-form.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [10, 14], [10, 26]]]]], [], []]], ["loc", [null, [5, 4], [11, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-association-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [4, 10], [4, 23]]]]], [], 0, null, ["loc", [null, [4, 2], [12, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 8
              },
              "end": {
                "line": 31,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-association-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [28, 66], [28, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [29, 12], [29, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 32,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-association-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [24, 60], [24, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [25, 10], [25, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [27, 18], [27, 29]]]]], [], 0, null, ["loc", [null, [27, 8], [31, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 182,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-association-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [3]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var element7 = dom.childAt(element2, [11]);
        var element8 = dom.childAt(element2, [13]);
        var element9 = dom.childAt(element2, [15]);
        var element10 = dom.childAt(element2, [17]);
        var element11 = dom.childAt(element2, [19]);
        var element12 = dom.childAt(element2, [21]);
        var element13 = dom.childAt(element2, [23]);
        var element14 = dom.childAt(element2, [25]);
        var element15 = dom.childAt(element2, [27]);
        var element16 = dom.childAt(element2, [29]);
        var element17 = dom.childAt(element2, [31]);
        var element18 = dom.childAt(element2, [33]);
        var element19 = dom.childAt(element2, [35]);
        var element20 = dom.childAt(element2, [37]);
        var element21 = dom.childAt(element2, [39]);
        var element22 = dom.childAt(element2, [41]);
        var element23 = dom.childAt(element2, [43]);
        var morphs = new Array(48);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createAttrMorph(element2, 'class');
        morphs[3] = dom.createMorphAt(element2, 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[5] = dom.createMorphAt(element3, 1, 1);
        morphs[6] = dom.createElementMorph(element4);
        morphs[7] = dom.createMorphAt(element4, 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
        morphs[9] = dom.createMorphAt(element5, 3, 3);
        morphs[10] = dom.createMorphAt(dom.childAt(element6, [1]), 0, 0);
        morphs[11] = dom.createMorphAt(element6, 3, 3);
        morphs[12] = dom.createMorphAt(element6, 5, 5);
        morphs[13] = dom.createMorphAt(dom.childAt(element7, [1]), 0, 0);
        morphs[14] = dom.createMorphAt(element7, 3, 3);
        morphs[15] = dom.createMorphAt(element7, 5, 5);
        morphs[16] = dom.createMorphAt(dom.childAt(element8, [1]), 0, 0);
        morphs[17] = dom.createMorphAt(element8, 3, 3);
        morphs[18] = dom.createMorphAt(dom.childAt(element9, [1]), 0, 0);
        morphs[19] = dom.createMorphAt(element9, 3, 3);
        morphs[20] = dom.createMorphAt(dom.childAt(element10, [1]), 0, 0);
        morphs[21] = dom.createMorphAt(element10, 3, 3);
        morphs[22] = dom.createMorphAt(dom.childAt(element11, [1]), 0, 0);
        morphs[23] = dom.createMorphAt(element11, 3, 3);
        morphs[24] = dom.createMorphAt(dom.childAt(element12, [1]), 0, 0);
        morphs[25] = dom.createMorphAt(element12, 3, 3);
        morphs[26] = dom.createMorphAt(dom.childAt(element13, [1]), 0, 0);
        morphs[27] = dom.createMorphAt(element13, 3, 3);
        morphs[28] = dom.createMorphAt(dom.childAt(element14, [1]), 0, 0);
        morphs[29] = dom.createMorphAt(element14, 3, 3);
        morphs[30] = dom.createMorphAt(dom.childAt(element15, [1]), 0, 0);
        morphs[31] = dom.createMorphAt(element15, 3, 3);
        morphs[32] = dom.createMorphAt(dom.childAt(element16, [1]), 0, 0);
        morphs[33] = dom.createMorphAt(element16, 3, 3);
        morphs[34] = dom.createMorphAt(dom.childAt(element17, [1]), 0, 0);
        morphs[35] = dom.createMorphAt(element17, 3, 3);
        morphs[36] = dom.createMorphAt(dom.childAt(element18, [1]), 0, 0);
        morphs[37] = dom.createMorphAt(element18, 3, 3);
        morphs[38] = dom.createMorphAt(dom.childAt(element19, [1]), 0, 0);
        morphs[39] = dom.createMorphAt(element19, 3, 3);
        morphs[40] = dom.createMorphAt(dom.childAt(element20, [1]), 0, 0);
        morphs[41] = dom.createMorphAt(element20, 3, 3);
        morphs[42] = dom.createMorphAt(dom.childAt(element21, [1]), 0, 0);
        morphs[43] = dom.createMorphAt(element21, 3, 3);
        morphs[44] = dom.createMorphAt(dom.childAt(element22, [1]), 0, 0);
        morphs[45] = dom.createMorphAt(element22, 3, 3);
        morphs[46] = dom.createMorphAt(dom.childAt(element23, [1]), 0, 0);
        morphs[47] = dom.createMorphAt(element23, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-association-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 68]]]], ["block", "if", [["get", "errorMessages", ["loc", [null, [3, 6], [3, 19]]]]], [], 0, null, ["loc", [null, [3, 0], [13, 7]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [14, 47], [14, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [15, 26], [15, 31]]]]], [], []]], ["loc", [null, [15, 2], [15, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [18, 43], [18, 55]]]]], [], []]], ["loc", [null, [18, 6], [18, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [23, 16], [23, 24]]]]], [], 1, null, ["loc", [null, [23, 6], [32, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [33, 59], [33, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [34, 8], [34, 49]]]], ["inline", "t", ["forms.fd-association-edit-form.name-caption"], [], ["loc", [null, [39, 11], [39, 62]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [42, 12], [42, 22]]]]], [], []]], ["loc", [null, [40, 4], [43, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.start-class-caption"], [], ["loc", [null, [46, 11], [46, 69]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "@mut", [["get", "implementationsName", ["loc", [null, [49, 12], [49, 31]]]]], [], []], "value", ["subexpr", "@mut", [["get", "startClassName", ["loc", [null, [50, 12], [50, 26]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonlyClass", ["loc", [null, [51, 15], [51, 28]]]]], [], []], "onChange", ["subexpr", "action", ["changeStartClass"], [], ["loc", [null, [52, 15], [52, 42]]]]], ["loc", [null, [47, 4], [53, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.startClass", ["loc", [null, [54, 40], [54, 63]]]]], [], []], "pointing", "pointing"], ["loc", [null, [54, 4], [54, 85]]]], ["inline", "t", ["forms.fd-association-edit-form.end-class-caption"], [], ["loc", [null, [57, 11], [57, 67]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "@mut", [["get", "implementationsName", ["loc", [null, [60, 12], [60, 31]]]]], [], []], "value", ["subexpr", "@mut", [["get", "endClassName", ["loc", [null, [61, 12], [61, 24]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonlyClass", ["loc", [null, [62, 15], [62, 28]]]]], [], []], "onChange", ["subexpr", "action", ["changeEndClass"], [], ["loc", [null, [63, 15], [63, 40]]]]], ["loc", [null, [58, 4], [64, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.endClass", ["loc", [null, [65, 40], [65, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [65, 4], [65, 83]]]], ["inline", "t", ["forms.fd-association-edit-form.description-caption"], [], ["loc", [null, [68, 11], [68, 69]]]], ["inline", "flexberry-textarea", [], ["value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [71, 12], [71, 29]]]]], [], []]], ["loc", [null, [69, 4], [72, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.start-role-caption"], [], ["loc", [null, [75, 11], [75, 68]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.startRole", ["loc", [null, [78, 12], [78, 27]]]]], [], []]], ["loc", [null, [76, 4], [79, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.start-multiplicity-caption"], [], ["loc", [null, [82, 11], [82, 76]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.startMultiplicity", ["loc", [null, [85, 12], [85, 35]]]]], [], []]], ["loc", [null, [83, 4], [86, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.end-role-access-modifier-caption"], [], ["loc", [null, [89, 11], [89, 82]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "@mut", [["get", "itemsAccessModifier", ["loc", [null, [92, 12], [92, 31]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.endRoleAccessModifier", ["loc", [null, [93, 12], [93, 39]]]]], [], []]], ["loc", [null, [90, 4], [94, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.start-role-stored-caption"], [], ["loc", [null, [97, 11], [97, 75]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.startRoleStored", ["loc", [null, [100, 12], [100, 33]]]]], [], []]], ["loc", [null, [98, 4], [101, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.end-role-caption"], [], ["loc", [null, [104, 11], [104, 66]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.endRole", ["loc", [null, [107, 12], [107, 25]]]]], [], []]], ["loc", [null, [105, 4], [108, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.end-multiplicity-caption"], [], ["loc", [null, [111, 11], [111, 74]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.endMultiplicity", ["loc", [null, [114, 12], [114, 33]]]]], [], []]], ["loc", [null, [112, 4], [115, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.auto-generate-type-usage-caption"], [], ["loc", [null, [118, 11], [118, 82]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.autoGenerateTypeUsage", ["loc", [null, [121, 12], [121, 39]]]]], [], []]], ["loc", [null, [119, 4], [122, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.type-usage-caption"], [], ["loc", [null, [125, 11], [125, 68]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.typeUsage", ["loc", [null, [128, 12], [128, 27]]]]], [], []]], ["loc", [null, [126, 4], [129, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.storage"], [], ["loc", [null, [132, 11], [132, 57]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.storage", ["loc", [null, [135, 12], [135, 25]]]]], [], []]], ["loc", [null, [133, 4], [136, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.auto-store-master-disabled-caption"], [], ["loc", [null, [139, 11], [139, 84]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.autoStoreMasterDisabled", ["loc", [null, [142, 12], [142, 41]]]]], [], []]], ["loc", [null, [140, 4], [143, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.pb-master-custom-attributes-caption"], [], ["loc", [null, [146, 11], [146, 85]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBMasterCustomAttributes", ["loc", [null, [149, 12], [149, 42]]]]], [], []]], ["loc", [null, [147, 4], [150, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.pb-master-get-start-caption"], [], ["loc", [null, [153, 11], [153, 77]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBMasterGetStart", ["loc", [null, [156, 12], [156, 34]]]]], [], []]], ["loc", [null, [154, 4], [157, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.pb-master-get-end-caption"], [], ["loc", [null, [160, 11], [160, 75]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBMasterGetEnd", ["loc", [null, [163, 12], [163, 32]]]]], [], []]], ["loc", [null, [161, 4], [164, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.pb-master-set-start-caption"], [], ["loc", [null, [167, 11], [167, 77]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBMasterSetStart", ["loc", [null, [170, 12], [170, 34]]]]], [], []]], ["loc", [null, [168, 4], [171, 6]]]], ["inline", "t", ["forms.fd-association-edit-form.pb-master-set-end-caption"], [], ["loc", [null, [174, 11], [174, 75]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "model.pBMasterSetEnd", ["loc", [null, [177, 12], [177, 32]]]]], [], []]], ["loc", [null, [175, 4], [178, 6]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/fd-association-list-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-association-list-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.fd-association-list-form.caption"], [], ["loc", [null, [2, 4], [2, 50]]]], ["inline", "flexberry-objectlistview", [], ["modelName", "fd-dev-association", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 12], [8, 17]]]]], [], []], "createNewButton", true, "refreshButton", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [11, 12], [11, 27]]]]], [], []], "orderable", true, "enableFilters", true, "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [14, 12], [14, 19]]]]], [], []], "disableHierarchicalMode", true, "applyFilters", ["subexpr", "action", ["applyFilters"], [], ["loc", [null, [16, 17], [16, 40]]]], "resetFilters", ["subexpr", "action", ["resetFilters"], [], ["loc", [null, [17, 17], [17, 40]]]], "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [18, 17], [18, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [19, 23], [19, 52]]]], "showEditMenuItemInRow", true, "showDeleteMenuItemInRow", true, "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [22, 10], [22, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [23, 17], [23, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [24, 18], [24, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [25, 22], [25, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [26, 20], [26, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [27, 16], [27, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [28, 17], [28, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [29, 13], [29, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [30, 13], [30, 32]]]], "componentName", "FdAssociationListForm"], ["loc", [null, [4, 2], [32, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-association-list-form/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-association-list-form/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-business-server-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 8
              },
              "end": {
                "line": 20,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-business-server-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [17, 66], [17, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [18, 12], [18, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-business-server-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [13, 60], [13, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [14, 10], [14, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [16, 18], [16, 29]]]]], [], 0, null, ["loc", [null, [16, 8], [20, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 116,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-business-server-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var element7 = dom.childAt(element2, [11]);
        var element8 = dom.childAt(element2, [13]);
        var element9 = dom.childAt(element2, [15]);
        var element10 = dom.childAt(element2, [17]);
        var element11 = dom.childAt(element2, [19]);
        var element12 = dom.childAt(element2, [21]);
        var morphs = new Array(23);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createMorphAt(element2, 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(element3, 1, 1);
        morphs[5] = dom.createElementMorph(element4);
        morphs[6] = dom.createMorphAt(element4, 1, 1);
        morphs[7] = dom.createMorphAt(element5, 1, 1);
        morphs[8] = dom.createMorphAt(element5, 3, 3);
        morphs[9] = dom.createMorphAt(element6, 1, 1);
        morphs[10] = dom.createMorphAt(element6, 3, 3);
        morphs[11] = dom.createMorphAt(element7, 1, 1);
        morphs[12] = dom.createMorphAt(element7, 3, 3);
        morphs[13] = dom.createMorphAt(element8, 1, 1);
        morphs[14] = dom.createMorphAt(element8, 3, 3);
        morphs[15] = dom.createMorphAt(dom.childAt(element9, [1]), 0, 0);
        morphs[16] = dom.createMorphAt(element9, 3, 3);
        morphs[17] = dom.createMorphAt(dom.childAt(element10, [1]), 0, 0);
        morphs[18] = dom.createMorphAt(element10, 3, 3);
        morphs[19] = dom.createMorphAt(dom.childAt(element11, [1]), 0, 0);
        morphs[20] = dom.createMorphAt(element11, 3, 3);
        morphs[21] = dom.createMorphAt(dom.childAt(element12, [1]), 0, 0);
        morphs[22] = dom.createMorphAt(element12, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-business-server-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 72]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [3, 47], [3, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [4, 26], [4, 31]]]]], [], []]], ["loc", [null, [4, 2], [4, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [7, 43], [7, 55]]]]], [], []]], ["loc", [null, [7, 6], [7, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [12, 16], [12, 24]]]]], [], 0, null, ["loc", [null, [12, 6], [21, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [22, 59], [22, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [23, 8], [23, 49]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [30, 16], [30, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [31, 13], [31, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [33, 10], [33, 20]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [34, 14], [34, 31]]]], "error", ""], [], ["loc", [null, [34, 10], [34, 43]]]], "label", ["subexpr", "t", ["forms.fd-business-server-edit-form.name-caption"], [], ["loc", [null, [35, 10], [35, 63]]]]], ["loc", [null, [28, 2], [36, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [37, 38], [37, 55]]]]], [], []], "pointing", "pointing"], ["loc", [null, [37, 2], [37, 77]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [43, 16], [43, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [44, 13], [44, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [46, 10], [46, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [47, 14], [47, 38]]]], "error", ""], [], ["loc", [null, [47, 10], [47, 50]]]], "label", ["subexpr", "t", ["forms.fd-business-server-edit-form.description-caption"], [], ["loc", [null, [48, 10], [48, 70]]]]], ["loc", [null, [41, 2], [49, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [50, 38], [50, 62]]]]], [], []], "pointing", "pointing"], ["loc", [null, [50, 2], [50, 84]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [56, 16], [56, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [57, 13], [57, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.packet", ["loc", [null, [59, 10], [59, 22]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.packet", ["loc", [null, [60, 14], [60, 33]]]], "error", ""], [], ["loc", [null, [60, 10], [60, 45]]]], "label", ["subexpr", "t", ["forms.fd-business-server-edit-form.packet-caption"], [], ["loc", [null, [61, 10], [61, 65]]]]], ["loc", [null, [54, 2], [62, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.packet", ["loc", [null, [63, 38], [63, 57]]]]], [], []], "pointing", "pointing"], ["loc", [null, [63, 2], [63, 79]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [69, 16], [69, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [70, 13], [70, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.namespacePostfix", ["loc", [null, [72, 10], [72, 32]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.namespacePostfix", ["loc", [null, [73, 14], [73, 43]]]], "error", ""], [], ["loc", [null, [73, 10], [73, 55]]]], "label", ["subexpr", "t", ["forms.fd-business-server-edit-form.namespacePostfix-caption"], [], ["loc", [null, [74, 10], [74, 75]]]]], ["loc", [null, [67, 2], [75, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.namespacePostfix", ["loc", [null, [76, 38], [76, 67]]]]], [], []], "pointing", "pointing"], ["loc", [null, [76, 2], [76, 89]]]], ["inline", "t", ["forms.fd-business-server-edit-form.pBMembers-caption"], [], ["loc", [null, [80, 9], [80, 69]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [83, 13], [83, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.pBMembers", ["loc", [null, [84, 10], [84, 25]]]]], [], []]], ["loc", [null, [81, 2], [85, 4]]]], ["inline", "t", ["forms.fd-business-server-edit-form.generateComPlusServer-caption"], [], ["loc", [null, [89, 9], [89, 81]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [92, 13], [92, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.generateComPlusServer", ["loc", [null, [93, 10], [93, 37]]]]], [], []]], ["loc", [null, [90, 2], [94, 4]]]], ["inline", "t", ["forms.fd-business-server-edit-form.generateHttpRemoteServer-caption"], [], ["loc", [null, [98, 9], [98, 84]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [101, 13], [101, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.generateHttpRemoteServer", ["loc", [null, [102, 10], [102, 40]]]]], [], []]], ["loc", [null, [99, 2], [103, 4]]]], ["inline", "t", ["forms.fd-business-server-edit-form.publishToEBSD-caption"], [], ["loc", [null, [107, 9], [107, 73]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [110, 13], [110, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.publishToEBSD", ["loc", [null, [111, 10], [111, 29]]]]], [], []]], ["loc", [null, [108, 2], [112, 4]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/fd-class-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-class-edit-form.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [10, 14], [10, 26]]]]], [], []]], ["loc", [null, [5, 4], [11, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-class-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [4, 10], [4, 23]]]]], [], 0, null, ["loc", [null, [4, 2], [12, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 28,
                "column": 8
              },
              "end": {
                "line": 32,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-class-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element10 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element10);
            morphs[1] = dom.createMorphAt(element10, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [29, 66], [29, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [30, 12], [30, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 24,
              "column": 6
            },
            "end": {
              "line": 33,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-class-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element11 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element11);
          morphs[1] = dom.createMorphAt(element11, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [25, 60], [25, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [26, 10], [26, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [28, 18], [28, 29]]]]], [], 0, null, ["loc", [null, [28, 8], [32, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 165,
                "column": 2
              },
              "end": {
                "line": 176,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-class-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("  ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "field");
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("label");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n  ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
            morphs[1] = dom.createMorphAt(element0, 3, 3);
            morphs[2] = dom.createMorphAt(element0, 5, 5);
            return morphs;
          },
          statements: [["inline", "t", ["forms.fd-class-edit-form.businessServerEvents-caption"], [], ["loc", [null, [167, 11], [167, 72]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "flexberry-enum", ["i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events"], [], ["loc", [null, [170, 12], [170, 93]]]], "value", ["subexpr", "@mut", [["get", "model.businessServerEvents", ["loc", [null, [171, 12], [171, 38]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [172, 15], [172, 23]]]]], [], []]], ["loc", [null, [168, 4], [173, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.businessServerEvents", ["loc", [null, [174, 40], [174, 73]]]]], [], []], "pointing", "pointing"], ["loc", [null, [174, 4], [174, 95]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 66,
              "column": 0
            },
            "end": {
              "line": 211,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-class-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "field");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("label");
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var element2 = dom.childAt(fragment, [3]);
          var element3 = dom.childAt(fragment, [5]);
          var element4 = dom.childAt(fragment, [7]);
          var element5 = dom.childAt(fragment, [9]);
          var element6 = dom.childAt(fragment, [11]);
          var element7 = dom.childAt(fragment, [13]);
          var element8 = dom.childAt(fragment, [17]);
          var element9 = dom.childAt(fragment, [19]);
          var morphs = new Array(23);
          morphs[0] = dom.createMorphAt(element1, 1, 1);
          morphs[1] = dom.createMorphAt(element1, 3, 3);
          morphs[2] = dom.createMorphAt(element2, 1, 1);
          morphs[3] = dom.createMorphAt(element2, 3, 3);
          morphs[4] = dom.createMorphAt(dom.childAt(element3, [1]), 0, 0);
          morphs[5] = dom.createMorphAt(element3, 3, 3);
          morphs[6] = dom.createMorphAt(element3, 5, 5);
          morphs[7] = dom.createMorphAt(element4, 1, 1);
          morphs[8] = dom.createMorphAt(element4, 3, 3);
          morphs[9] = dom.createMorphAt(element5, 1, 1);
          morphs[10] = dom.createMorphAt(element5, 3, 3);
          morphs[11] = dom.createMorphAt(element6, 1, 1);
          morphs[12] = dom.createMorphAt(element6, 3, 3);
          morphs[13] = dom.createMorphAt(dom.childAt(element7, [1]), 0, 0);
          morphs[14] = dom.createMorphAt(element7, 3, 3);
          morphs[15] = dom.createMorphAt(element7, 5, 5);
          morphs[16] = dom.createMorphAt(fragment, 15, 15, contextualElement);
          morphs[17] = dom.createMorphAt(dom.childAt(element8, [1]), 0, 0);
          morphs[18] = dom.createMorphAt(element8, 3, 3);
          morphs[19] = dom.createMorphAt(element8, 5, 5);
          morphs[20] = dom.createMorphAt(dom.childAt(element9, [1]), 0, 0);
          morphs[21] = dom.createMorphAt(element9, 3, 3);
          morphs[22] = dom.createMorphAt(element9, 5, 5);
          return morphs;
        },
        statements: [["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [74, 18], [74, 62]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [75, 15], [75, 23]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [77, 12], [77, 22]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [78, 16], [78, 33]]]], "error", ""], [], ["loc", [null, [78, 12], [78, 45]]]], "label", ["subexpr", "t", ["forms.fd-class-edit-form.name-caption"], [], ["loc", [null, [79, 12], [79, 55]]]]], ["loc", [null, [72, 4], [80, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [81, 40], [81, 57]]]]], [], []], "pointing", "pointing"], ["loc", [null, [81, 4], [81, 79]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [87, 18], [87, 62]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [88, 15], [88, 23]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.publishName", ["loc", [null, [90, 12], [90, 29]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.publishName", ["loc", [null, [91, 16], [91, 40]]]], "error", ""], [], ["loc", [null, [91, 12], [91, 52]]]], "label", ["subexpr", "t", ["forms.fd-class-edit-form.publishName-caption"], [], ["loc", [null, [92, 12], [92, 62]]]]], ["loc", [null, [85, 4], [93, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.publishName", ["loc", [null, [94, 40], [94, 64]]]]], [], []], "pointing", "pointing"], ["loc", [null, [94, 4], [94, 86]]]], ["inline", "t", ["forms.fd-class-edit-form.stored-caption"], [], ["loc", [null, [98, 11], [98, 58]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [101, 15], [101, 23]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.stored", ["loc", [null, [102, 12], [102, 24]]]]], [], []]], ["loc", [null, [99, 4], [103, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.stored", ["loc", [null, [104, 40], [104, 59]]]]], [], []], "pointing", "pointing"], ["loc", [null, [104, 4], [104, 81]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [110, 18], [110, 62]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [111, 15], [111, 23]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.storage", ["loc", [null, [113, 12], [113, 25]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.storage", ["loc", [null, [114, 16], [114, 36]]]], "error", ""], [], ["loc", [null, [114, 12], [114, 48]]]], "label", ["subexpr", "t", ["forms.fd-class-edit-form.storage-caption"], [], ["loc", [null, [115, 12], [115, 58]]]]], ["loc", [null, [108, 4], [116, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.storage", ["loc", [null, [117, 40], [117, 60]]]]], [], []], "pointing", "pointing"], ["loc", [null, [117, 4], [117, 82]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [123, 18], [123, 62]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [124, 15], [124, 23]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.packet", ["loc", [null, [126, 12], [126, 24]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.packet", ["loc", [null, [127, 16], [127, 35]]]], "error", ""], [], ["loc", [null, [127, 12], [127, 47]]]], "label", ["subexpr", "t", ["forms.fd-class-edit-form.packet-caption"], [], ["loc", [null, [128, 12], [128, 57]]]]], ["loc", [null, [121, 4], [129, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.packet", ["loc", [null, [130, 40], [130, 59]]]]], [], []], "pointing", "pointing"], ["loc", [null, [130, 4], [130, 81]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [136, 18], [136, 62]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [137, 15], [137, 23]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.namespacePostfix", ["loc", [null, [139, 12], [139, 34]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.namespacePostfix", ["loc", [null, [140, 16], [140, 45]]]], "error", ""], [], ["loc", [null, [140, 12], [140, 57]]]], "label", ["subexpr", "t", ["forms.fd-class-edit-form.namespacePostfix-caption"], [], ["loc", [null, [141, 12], [141, 67]]]]], ["loc", [null, [134, 4], [142, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.namespacePostfix", ["loc", [null, [143, 40], [143, 69]]]]], [], []], "pointing", "pointing"], ["loc", [null, [143, 4], [143, 91]]]], ["inline", "t", ["forms.fd-class-edit-form.businessServerClass-caption"], [], ["loc", [null, [147, 11], [147, 71]]]], ["inline", "flexberry-lookup", [], ["choose", "showLookupDialog", "remove", "removeLookupValue", "value", ["subexpr", "@mut", [["get", "model.businessServerClass", ["loc", [null, [152, 12], [152, 37]]]]], [], []], "displayAttributeName", "name", "relationName", "businessServerClass", "projection", "ListFormView", "title", ["subexpr", "t", ["forms.fd-class-edit-form.businessServerClass-caption"], [], ["loc", [null, [156, 12], [156, 70]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [157, 15], [157, 23]]]]], [], []], "dropdown", true, "dropdownIsSearch", true, "lookupLimitPredicate", ["subexpr", "@mut", [["get", "lookupStereotypeLimitPredicate", ["loc", [null, [160, 27], [160, 57]]]]], [], []]], ["loc", [null, [148, 4], [161, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.businessServerClass", ["loc", [null, [162, 40], [162, 72]]]]], [], []], "pointing", "pointing"], ["loc", [null, [162, 4], [162, 94]]]], ["block", "if", [["get", "model.businessServerClass", ["loc", [null, [165, 8], [165, 33]]]]], [], 0, null, ["loc", [null, [165, 2], [176, 9]]]], ["inline", "t", ["forms.fd-class-edit-form.views-caption"], [], ["loc", [null, [179, 11], [179, 57]]]], ["inline", "flexberry-groupedit", [], ["componentName", "viewsGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [183, 26], [183, 41]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.views", ["loc", [null, [184, 22], [184, 54]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.views", ["loc", [null, [185, 14], [185, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [186, 15], [186, 23]]]]], [], []], "orderable", false, "rowClickable", true, "rowClick", "rowClick", "editOnSeparateRoute", true, "editFormRoute", "fd-view-edit-form", "class", ["subexpr", "if", [["get", "model.errors.views", ["loc", [null, [192, 16], [192, 34]]]], "error", ""], [], ["loc", [null, [192, 12], [192, 46]]]]], ["loc", [null, [180, 4], [193, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.views", ["loc", [null, [194, 40], [194, 58]]]]], [], []], "pointing", "pointing"], ["loc", [null, [194, 4], [194, 80]]]], ["inline", "t", ["forms.fd-class-edit-form.classStorageTypes-caption"], [], ["loc", [null, [198, 11], [198, 69]]]], ["inline", "flexberry-groupedit", [], ["componentName", "classStorageTypesGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [202, 26], [202, 41]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.classStorageTypes", ["loc", [null, [203, 22], [203, 66]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.classStorageTypes", ["loc", [null, [204, 14], [204, 37]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [205, 15], [205, 23]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.classStorageTypes", ["loc", [null, [207, 16], [207, 46]]]], "error", ""], [], ["loc", [null, [207, 12], [207, 58]]]]], ["loc", [null, [199, 4], [208, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.classStorageTypes", ["loc", [null, [209, 40], [209, 70]]]]], [], []], "pointing", "pointing"], ["loc", [null, [209, 4], [209, 92]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 213,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-class-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element12 = dom.childAt(fragment, [4]);
        var element13 = dom.childAt(element12, [5, 1]);
        var element14 = dom.childAt(element13, [3]);
        var element15 = dom.childAt(element12, [7]);
        var element16 = dom.childAt(element12, [9]);
        var morphs = new Array(14);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createAttrMorph(element12, 'class');
        morphs[3] = dom.createMorphAt(element12, 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element12, [3, 1]), 1, 1);
        morphs[5] = dom.createMorphAt(element13, 1, 1);
        morphs[6] = dom.createElementMorph(element14);
        morphs[7] = dom.createMorphAt(element14, 1, 1);
        morphs[8] = dom.createMorphAt(element15, 1, 1);
        morphs[9] = dom.createMorphAt(element15, 3, 3);
        morphs[10] = dom.createMorphAt(dom.childAt(element16, [1]), 0, 0);
        morphs[11] = dom.createMorphAt(element16, 3, 3);
        morphs[12] = dom.createMorphAt(element16, 5, 5);
        morphs[13] = dom.createMorphAt(element12, 11, 11);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-class-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 62]]]], ["block", "if", [["get", "errorMessages", ["loc", [null, [3, 6], [3, 19]]]]], [], 0, null, ["loc", [null, [3, 0], [13, 7]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [15, 47], [15, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [16, 26], [16, 31]]]]], [], []]], ["loc", [null, [16, 2], [16, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [19, 43], [19, 55]]]]], [], []]], ["loc", [null, [19, 6], [19, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [24, 16], [24, 24]]]]], [], 1, null, ["loc", [null, [24, 6], [33, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [34, 59], [34, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [35, 8], [35, 49]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [42, 16], [42, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [43, 13], [43, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.caption", ["loc", [null, [45, 10], [45, 23]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.caption", ["loc", [null, [46, 14], [46, 34]]]], "error", ""], [], ["loc", [null, [46, 10], [46, 46]]]], "label", ["subexpr", "t", ["forms.fd-class-edit-form.caption-caption"], [], ["loc", [null, [47, 10], [47, 56]]]]], ["loc", [null, [40, 2], [48, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.caption", ["loc", [null, [49, 38], [49, 58]]]]], [], []], "pointing", "pointing"], ["loc", [null, [49, 2], [49, 80]]]], ["inline", "t", ["forms.fd-class-edit-form.attributes-caption"], [], ["loc", [null, [52, 9], [52, 60]]]], ["inline", "flexberry-groupedit", [], ["componentName", "attributesGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [56, 24], [56, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.attributes", ["loc", [null, [57, 20], [57, 57]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.attributes", ["loc", [null, [58, 12], [58, 28]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [59, 13], [59, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.attributes", ["loc", [null, [61, 14], [61, 37]]]], "error", ""], [], ["loc", [null, [61, 10], [61, 49]]]]], ["loc", [null, [53, 2], [62, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.attributes", ["loc", [null, [63, 38], [63, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [63, 2], [63, 83]]]], ["block", "flexberry-toggler", [], ["caption", ["subexpr", "t", ["forms.fd-class-edit-form.toggler-caption"], [], ["loc", [null, [67, 12], [67, 58]]]], "expanded", true, "hasResizableOLV", true], 2, null, ["loc", [null, [66, 0], [211, 22]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define("dummy/templates/fd-class-list-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-class-list-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.fd-class-list-form.caption"], [], ["loc", [null, [2, 4], [2, 44]]]], ["inline", "flexberry-objectlistview", [], ["modelName", "fd-dev-class", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 12], [8, 17]]]]], [], []], "createNewButton", true, "refreshButton", true, "showEditMenuItemInRow", true, "showDeleteMenuItemInRow", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [13, 12], [13, 27]]]]], [], []], "enableFilters", true, "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [15, 12], [15, 19]]]]], [], []], "orderable", true, "rowClickable", true, "disableHierarchicalMode", true, "action", "onRowClick", "applyFilters", ["subexpr", "action", ["applyFilters"], [], ["loc", [null, [20, 17], [20, 40]]]], "resetFilters", ["subexpr", "action", ["resetFilters"], [], ["loc", [null, [21, 17], [21, 40]]]], "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [22, 17], [22, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [23, 23], [23, 52]]]], "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [24, 10], [24, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [25, 17], [25, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [26, 18], [26, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [27, 22], [27, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [28, 20], [28, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [29, 16], [29, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [30, 17], [30, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [31, 13], [31, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [32, 13], [32, 32]]]], "componentName", "FdClassListForm"], ["loc", [null, [4, 2], [34, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-class-list-form/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-class-list-form/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-configuration-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-configuration-edit-form.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [10, 14], [10, 26]]]]], [], []]], ["loc", [null, [5, 4], [11, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-configuration-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [4, 10], [4, 23]]]]], [], 0, null, ["loc", [null, [4, 2], [12, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 8
              },
              "end": {
                "line": 31,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-configuration-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [28, 66], [28, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [29, 12], [29, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 32,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-configuration-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [24, 60], [24, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [25, 10], [25, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [27, 18], [27, 29]]]]], [], 0, null, ["loc", [null, [27, 8], [31, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-configuration-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [3]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var morphs = new Array(12);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createAttrMorph(element2, 'class');
        morphs[3] = dom.createMorphAt(element2, 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[5] = dom.createMorphAt(element3, 1, 1);
        morphs[6] = dom.createElementMorph(element4);
        morphs[7] = dom.createMorphAt(element4, 1, 1);
        morphs[8] = dom.createMorphAt(element5, 1, 1);
        morphs[9] = dom.createMorphAt(element5, 3, 3);
        morphs[10] = dom.createMorphAt(element6, 1, 1);
        morphs[11] = dom.createMorphAt(element6, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-configuration-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 70]]]], ["block", "if", [["get", "errorMessages", ["loc", [null, [3, 6], [3, 19]]]]], [], 0, null, ["loc", [null, [3, 0], [13, 7]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [14, 47], [14, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [15, 26], [15, 31]]]]], [], []]], ["loc", [null, [15, 2], [15, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [18, 43], [18, 55]]]]], [], []]], ["loc", [null, [18, 6], [18, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [23, 16], [23, 24]]]]], [], 1, null, ["loc", [null, [23, 6], [32, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [33, 59], [33, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [34, 8], [34, 49]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [41, 16], [41, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [42, 13], [42, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [44, 10], [44, 20]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [45, 14], [45, 31]]]], "error", ""], [], ["loc", [null, [45, 10], [45, 43]]]], "label", ["subexpr", "t", ["forms.fd-configuration-edit-form.name-caption"], [], ["loc", [null, [46, 10], [46, 61]]]]], ["loc", [null, [39, 2], [47, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [48, 38], [48, 55]]]]], [], []], "pointing", "pointing"], ["loc", [null, [48, 2], [48, 77]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [54, 16], [54, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [55, 13], [55, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [57, 10], [57, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [58, 14], [58, 38]]]], "error", ""], [], ["loc", [null, [58, 10], [58, 50]]]], "label", ["subexpr", "t", ["forms.fd-configuration-edit-form.description-caption"], [], ["loc", [null, [59, 10], [59, 68]]]]], ["loc", [null, [52, 2], [60, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [61, 38], [61, 62]]]]], [], []], "pointing", "pointing"], ["loc", [null, [61, 2], [61, 84]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/fd-configuration-list-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-configuration-list-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.fd-configuration-list-form.caption"], [], ["loc", [null, [2, 4], [2, 52]]]], ["inline", "flexberry-objectlistview", [], ["modelName", "fd-configuration", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 12], [8, 17]]]]], [], []], "createNewButton", true, "refreshButton", true, "showEditMenuItemInRow", true, "showDeleteMenuItemInRow", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [13, 12], [13, 27]]]]], [], []], "orderable", true, "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [15, 17], [15, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [16, 23], [16, 52]]]], "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [17, 10], [17, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [18, 17], [18, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [19, 18], [19, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [20, 22], [20, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [21, 20], [21, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [22, 16], [22, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [23, 17], [23, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [24, 13], [24, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [25, 13], [25, 32]]]], "componentName", "FdConfigurationListForm"], ["loc", [null, [4, 2], [27, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-configuration-list-form/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-configuration-list-form/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-diagram-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-diagram-edit-form.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [10, 14], [10, 26]]]]], [], []]], ["loc", [null, [5, 4], [11, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-diagram-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [4, 10], [4, 23]]]]], [], 0, null, ["loc", [null, [4, 2], [12, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 8
              },
              "end": {
                "line": 31,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-diagram-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element3 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element3);
            morphs[1] = dom.createMorphAt(element3, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [28, 66], [28, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [29, 12], [29, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 32,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-diagram-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element4 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element4);
          morphs[1] = dom.createMorphAt(element4, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [24, 60], [24, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [25, 10], [25, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [27, 18], [27, 29]]]]], [], 0, null, ["loc", [null, [27, 8], [31, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 54,
                  "column": 6
                },
                "end": {
                  "line": 83,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/fd-diagram-edit-form.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui small dividing header");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("label");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [3]);
              var element1 = dom.childAt(fragment, [7]);
              var morphs = new Array(6);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createMorphAt(element0, 1, 1);
              morphs[2] = dom.createMorphAt(element0, 3, 3);
              morphs[3] = dom.createMorphAt(dom.childAt(fragment, [5]), 0, 0);
              morphs[4] = dom.createMorphAt(element1, 1, 1);
              morphs[5] = dom.createMorphAt(element1, 3, 3);
              return morphs;
            },
            statements: [["inline", "t", ["forms.fd-diagram-edit-form.form-config-panel.diagram-properties-header"], [], ["loc", [null, [56, 10], [56, 88]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [61, 24], [61, 68]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [62, 21], [62, 29]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [64, 18], [64, 28]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [65, 22], [65, 39]]]], "error", ""], [], ["loc", [null, [65, 18], [65, 51]]]], "label", ["subexpr", "t", ["forms.fd-diagram-edit-form.name-caption"], [], ["loc", [null, [66, 18], [66, 63]]]]], ["loc", [null, [59, 10], [67, 12]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [68, 46], [68, 63]]]]], [], []], "pointing", "pointing"], ["loc", [null, [68, 10], [68, 85]]]], ["inline", "t", ["forms.fd-diagram-edit-form.description-caption"], [], ["loc", [null, [71, 15], [71, 69]]]], ["inline", "flexberry-textarea", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [75, 24], [75, 68]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [76, 21], [76, 29]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [78, 18], [78, 35]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [79, 22], [79, 46]]]], "error", ""], [], ["loc", [null, [79, 18], [79, 58]]]]], ["loc", [null, [73, 10], [80, 12]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [81, 46], [81, 70]]]]], [], []], "pointing", "pointing"], ["loc", [null, [81, 10], [81, 92]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 84,
                  "column": 6
                },
                "end": {
                  "line": 88,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/fd-diagram-edit-form.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui small dividing header");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["inline", "t", ["forms.fd-diagram-edit-form.form-config-panel.primitive-properties-header"], [], ["loc", [null, [86, 10], [86, 90]]]]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 89,
                  "column": 6
                },
                "end": {
                  "line": 93,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/fd-diagram-edit-form.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui small dividing header");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["inline", "t", ["forms.fd-diagram-edit-form.form-config-panel.add-primitive-header"], [], ["loc", [null, [91, 10], [91, 83]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 47,
                "column": 2
              },
              "end": {
                "line": 95,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-diagram-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("form");
            dom.setAttribute(el1, "class", "ui form segment");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "ui segment");
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3, "class", "ui large header");
            var el4 = dom.createTextNode("\n          ");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n        ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n      ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createMorphAt(dom.childAt(element2, [1, 1]), 1, 1);
            morphs[1] = dom.createMorphAt(element2, 3, 3);
            morphs[2] = dom.createMorphAt(element2, 4, 4);
            morphs[3] = dom.createMorphAt(element2, 5, 5);
            return morphs;
          },
          statements: [["inline", "t", ["forms.fd-diagram-edit-form.form-config-panel.caption"], [], ["loc", [null, [51, 10], [51, 70]]]], ["block", "ui-tab-segment", [], ["tab", "first", "title", ["subexpr", "t", ["forms.fd-diagram-edit-form.form-config-panel.diagram-properties-header"], [], ["loc", [null, [54, 42], [54, 118]]]], "theme", "", "active", true], 0, null, ["loc", [null, [54, 6], [83, 25]]]], ["block", "ui-tab-segment", [], ["tab", "second", "title", ["subexpr", "t", ["forms.fd-diagram-edit-form.form-config-panel.primitive-properties-header"], [], ["loc", [null, [84, 43], [84, 121]]]], "theme", ""], 1, null, ["loc", [null, [84, 6], [88, 25]]]], ["block", "ui-tab-segment", [], ["tab", "active-tree-tab", "title", ["subexpr", "t", ["forms.fd-diagram-edit-form.form-config-panel.add-primitive-header"], [], ["loc", [null, [89, 52], [89, 123]]]], "theme", ""], 2, null, ["loc", [null, [89, 6], [93, 25]]]]],
          locals: [],
          templates: [child0, child1, child2]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 45,
              "column": 0
            },
            "end": {
              "line": 97,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-diagram-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["block", "fd-tabs", [], ["tabsMenuTheme", "vertical tabular", "class", "ui segments horizontal right-tabs"], 0, null, ["loc", [null, [47, 2], [95, 14]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 98,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-diagram-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "sixteen wide");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element5 = dom.childAt(fragment, [3]);
        var element6 = dom.childAt(element5, [5, 1]);
        var element7 = dom.childAt(element6, [3]);
        var morphs = new Array(9);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createAttrMorph(element5, 'class');
        morphs[3] = dom.createMorphAt(element5, 1, 1);
        morphs[4] = dom.createMorphAt(element6, 1, 1);
        morphs[5] = dom.createElementMorph(element7);
        morphs[6] = dom.createMorphAt(element7, 1, 1);
        morphs[7] = dom.createMorphAt(dom.childAt(element5, [7]), 1, 1);
        morphs[8] = dom.createMorphAt(fragment, 5, 5, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["content", "model.name", ["loc", [null, [1, 22], [1, 36]]]], ["block", "if", [["get", "errorMessages", ["loc", [null, [3, 6], [3, 19]]]]], [], 0, null, ["loc", [null, [3, 0], [13, 7]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [14, 47], [14, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [15, 26], [15, 31]]]]], [], []]], ["loc", [null, [15, 2], [15, 33]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [23, 16], [23, 24]]]]], [], 1, null, ["loc", [null, [23, 6], [32, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [33, 59], [33, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [34, 8], [34, 49]]]], ["inline", "fd-uml-diagram", [], ["primitives", ["subexpr", "@mut", [["get", "model.primitives", ["loc", [null, [40, 32], [40, 48]]]]], [], []]], ["loc", [null, [40, 4], [40, 50]]]], ["block", "fd-config-panel", [], [], 2, null, ["loc", [null, [45, 0], [97, 20]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define("dummy/templates/fd-diagram-list-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-diagram-list-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.fd-diagram-list-form.caption"], [], ["loc", [null, [2, 4], [2, 46]]]], ["inline", "flexberry-objectlistview", [], ["modelName", "fd-dev-uml-cad", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 12], [8, 17]]]]], [], []], "createNewButton", true, "refreshButton", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [11, 12], [11, 27]]]]], [], []], "orderable", true, "enableFilters", true, "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [14, 12], [14, 19]]]]], [], []], "disableHierarchicalMode", true, "applyFilters", ["subexpr", "action", ["applyFilters"], [], ["loc", [null, [16, 17], [16, 40]]]], "resetFilters", ["subexpr", "action", ["resetFilters"], [], ["loc", [null, [17, 17], [17, 40]]]], "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [18, 17], [18, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [19, 23], [19, 52]]]], "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [20, 10], [20, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [21, 17], [21, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [22, 18], [22, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [23, 22], [23, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [24, 20], [24, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [25, 16], [25, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [26, 17], [26, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [27, 13], [27, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [28, 13], [28, 32]]]], "componentName", "FdDiagramListForm"], ["loc", [null, [4, 2], [30, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-diagram-list-form/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-diagram-list-form/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-edit-form-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 8
              },
              "end": {
                "line": 20,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-edit-form-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [17, 66], [17, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [18, 12], [18, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-edit-form-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [13, 60], [13, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [14, 10], [14, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [16, 18], [16, 29]]]]], [], 0, null, ["loc", [null, [16, 8], [20, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 235,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-edit-form-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var element7 = dom.childAt(element2, [11]);
        var element8 = dom.childAt(element2, [13]);
        var element9 = dom.childAt(element2, [15]);
        var element10 = dom.childAt(element2, [17]);
        var element11 = dom.childAt(element2, [19]);
        var element12 = dom.childAt(element2, [21]);
        var element13 = dom.childAt(element2, [23]);
        var element14 = dom.childAt(element2, [25]);
        var element15 = dom.childAt(element2, [27]);
        var element16 = dom.childAt(element2, [29]);
        var element17 = dom.childAt(element2, [31]);
        var element18 = dom.childAt(element2, [33]);
        var element19 = dom.childAt(element2, [35]);
        var element20 = dom.childAt(element2, [37]);
        var element21 = dom.childAt(element2, [39]);
        var morphs = new Array(44);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createMorphAt(element2, 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(element3, 1, 1);
        morphs[5] = dom.createElementMorph(element4);
        morphs[6] = dom.createMorphAt(element4, 1, 1);
        morphs[7] = dom.createMorphAt(element5, 1, 1);
        morphs[8] = dom.createMorphAt(element5, 3, 3);
        morphs[9] = dom.createMorphAt(element6, 1, 1);
        morphs[10] = dom.createMorphAt(element6, 3, 3);
        morphs[11] = dom.createMorphAt(element7, 1, 1);
        morphs[12] = dom.createMorphAt(element7, 3, 3);
        morphs[13] = dom.createMorphAt(dom.childAt(element8, [1]), 0, 0);
        morphs[14] = dom.createMorphAt(element8, 3, 3);
        morphs[15] = dom.createMorphAt(dom.childAt(element9, [1]), 0, 0);
        morphs[16] = dom.createMorphAt(element9, 3, 3);
        morphs[17] = dom.createMorphAt(element10, 1, 1);
        morphs[18] = dom.createMorphAt(element10, 3, 3);
        morphs[19] = dom.createMorphAt(element11, 1, 1);
        morphs[20] = dom.createMorphAt(element11, 3, 3);
        morphs[21] = dom.createMorphAt(dom.childAt(element12, [1]), 0, 0);
        morphs[22] = dom.createMorphAt(element12, 3, 3);
        morphs[23] = dom.createMorphAt(dom.childAt(element13, [1]), 0, 0);
        morphs[24] = dom.createMorphAt(element13, 3, 3);
        morphs[25] = dom.createMorphAt(element14, 1, 1);
        morphs[26] = dom.createMorphAt(element14, 3, 3);
        morphs[27] = dom.createMorphAt(element15, 1, 1);
        morphs[28] = dom.createMorphAt(element15, 3, 3);
        morphs[29] = dom.createMorphAt(element16, 1, 1);
        morphs[30] = dom.createMorphAt(element16, 3, 3);
        morphs[31] = dom.createMorphAt(element17, 1, 1);
        morphs[32] = dom.createMorphAt(element17, 3, 3);
        morphs[33] = dom.createMorphAt(dom.childAt(element18, [1]), 0, 0);
        morphs[34] = dom.createMorphAt(element18, 3, 3);
        morphs[35] = dom.createMorphAt(dom.childAt(element19, [1]), 0, 0);
        morphs[36] = dom.createMorphAt(element19, 3, 3);
        morphs[37] = dom.createMorphAt(element19, 5, 5);
        morphs[38] = dom.createMorphAt(dom.childAt(element20, [1]), 0, 0);
        morphs[39] = dom.createMorphAt(element20, 3, 3);
        morphs[40] = dom.createMorphAt(element20, 5, 5);
        morphs[41] = dom.createMorphAt(dom.childAt(element21, [1]), 0, 0);
        morphs[42] = dom.createMorphAt(element21, 3, 3);
        morphs[43] = dom.createMorphAt(element21, 5, 5);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-edit-form-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 66]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [3, 47], [3, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [4, 26], [4, 31]]]]], [], []]], ["loc", [null, [4, 2], [4, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [7, 43], [7, 55]]]]], [], []]], ["loc", [null, [7, 6], [7, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [12, 16], [12, 24]]]]], [], 0, null, ["loc", [null, [12, 6], [21, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [22, 59], [22, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [23, 8], [23, 49]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [30, 16], [30, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [31, 13], [31, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [33, 10], [33, 20]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [34, 14], [34, 31]]]], "error", ""], [], ["loc", [null, [34, 10], [34, 43]]]], "label", ["subexpr", "t", ["forms.fd-edit-form-edit-form.name-caption"], [], ["loc", [null, [35, 10], [35, 57]]]]], ["loc", [null, [28, 2], [36, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [37, 38], [37, 55]]]]], [], []], "pointing", "pointing"], ["loc", [null, [37, 2], [37, 77]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [43, 16], [43, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [44, 13], [44, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [46, 10], [46, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [47, 14], [47, 38]]]], "error", ""], [], ["loc", [null, [47, 10], [47, 50]]]], "label", ["subexpr", "t", ["forms.fd-edit-form-edit-form.description-caption"], [], ["loc", [null, [48, 10], [48, 64]]]]], ["loc", [null, [41, 2], [49, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [50, 38], [50, 62]]]]], [], []], "pointing", "pointing"], ["loc", [null, [50, 2], [50, 84]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [56, 16], [56, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [57, 13], [57, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.caption", ["loc", [null, [59, 10], [59, 23]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.caption", ["loc", [null, [60, 14], [60, 34]]]], "error", ""], [], ["loc", [null, [60, 10], [60, 46]]]], "label", ["subexpr", "t", ["forms.fd-edit-form-edit-form.caption-caption"], [], ["loc", [null, [61, 10], [61, 60]]]]], ["loc", [null, [54, 2], [62, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.caption", ["loc", [null, [63, 38], [63, 58]]]]], [], []], "pointing", "pointing"], ["loc", [null, [63, 2], [63, 80]]]], ["inline", "t", ["forms.fd-edit-form-edit-form.generateDependedForm-caption"], [], ["loc", [null, [67, 9], [67, 74]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [70, 13], [70, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.generateDependedForm", ["loc", [null, [71, 10], [71, 36]]]]], [], []]], ["loc", [null, [68, 2], [72, 4]]]], ["inline", "t", ["forms.fd-edit-form-edit-form.fixDependedForm-caption"], [], ["loc", [null, [76, 9], [76, 69]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [79, 13], [79, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.fixDependedForm", ["loc", [null, [80, 10], [80, 31]]]]], [], []]], ["loc", [null, [77, 2], [81, 4]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [87, 16], [87, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [88, 13], [88, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.packet", ["loc", [null, [90, 10], [90, 22]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.packet", ["loc", [null, [91, 14], [91, 33]]]], "error", ""], [], ["loc", [null, [91, 10], [91, 45]]]], "label", ["subexpr", "t", ["forms.fd-edit-form-edit-form.packet-caption"], [], ["loc", [null, [92, 10], [92, 59]]]]], ["loc", [null, [85, 2], [93, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.packet", ["loc", [null, [94, 38], [94, 57]]]]], [], []], "pointing", "pointing"], ["loc", [null, [94, 2], [94, 79]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [100, 16], [100, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [101, 13], [101, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.namespacePostfix", ["loc", [null, [103, 10], [103, 32]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.namespacePostfix", ["loc", [null, [104, 14], [104, 43]]]], "error", ""], [], ["loc", [null, [104, 10], [104, 55]]]], "label", ["subexpr", "t", ["forms.fd-edit-form-edit-form.namespacePostfix-caption"], [], ["loc", [null, [105, 10], [105, 69]]]]], ["loc", [null, [98, 2], [106, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.namespacePostfix", ["loc", [null, [107, 38], [107, 67]]]]], [], []], "pointing", "pointing"], ["loc", [null, [107, 2], [107, 89]]]], ["inline", "t", ["forms.fd-edit-form-edit-form.pBCustomAttributes-caption"], [], ["loc", [null, [111, 9], [111, 72]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [114, 13], [114, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.pBCustomAttributes", ["loc", [null, [115, 10], [115, 34]]]]], [], []]], ["loc", [null, [112, 2], [116, 4]]]], ["inline", "t", ["forms.fd-edit-form-edit-form.pBMembers-caption"], [], ["loc", [null, [120, 9], [120, 63]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [123, 13], [123, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.pBMembers", ["loc", [null, [124, 10], [124, 25]]]]], [], []]], ["loc", [null, [121, 2], [125, 4]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [131, 16], [131, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [132, 13], [132, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.propertyLookup", ["loc", [null, [134, 10], [134, 30]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.propertyLookup", ["loc", [null, [135, 14], [135, 41]]]], "error", ""], [], ["loc", [null, [135, 10], [135, 53]]]], "label", ["subexpr", "t", ["forms.fd-edit-form-edit-form.propertyLookup-caption"], [], ["loc", [null, [136, 10], [136, 67]]]]], ["loc", [null, [129, 2], [137, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.propertyLookup", ["loc", [null, [138, 38], [138, 65]]]]], [], []], "pointing", "pointing"], ["loc", [null, [138, 2], [138, 87]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [144, 16], [144, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [145, 13], [145, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.editFormOperations", ["loc", [null, [147, 10], [147, 34]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.editFormOperations", ["loc", [null, [148, 14], [148, 45]]]], "error", ""], [], ["loc", [null, [148, 10], [148, 57]]]], "label", ["subexpr", "t", ["forms.fd-edit-form-edit-form.editFormOperations-caption"], [], ["loc", [null, [149, 10], [149, 71]]]]], ["loc", [null, [142, 2], [150, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.editFormOperations", ["loc", [null, [151, 38], [151, 69]]]]], [], []], "pointing", "pointing"], ["loc", [null, [151, 2], [151, 91]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [157, 16], [157, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [158, 13], [158, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.printContainer", ["loc", [null, [160, 10], [160, 30]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.printContainer", ["loc", [null, [161, 14], [161, 41]]]], "error", ""], [], ["loc", [null, [161, 10], [161, 53]]]], "label", ["subexpr", "t", ["forms.fd-edit-form-edit-form.printContainer-caption"], [], ["loc", [null, [162, 10], [162, 67]]]]], ["loc", [null, [155, 2], [163, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.printContainer", ["loc", [null, [164, 38], [164, 65]]]]], [], []], "pointing", "pointing"], ["loc", [null, [164, 2], [164, 87]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [170, 16], [170, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [171, 13], [171, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.scriptName", ["loc", [null, [173, 10], [173, 26]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.scriptName", ["loc", [null, [174, 14], [174, 37]]]], "error", ""], [], ["loc", [null, [174, 10], [174, 49]]]], "label", ["subexpr", "t", ["forms.fd-edit-form-edit-form.scriptName-caption"], [], ["loc", [null, [175, 10], [175, 63]]]]], ["loc", [null, [168, 2], [176, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.scriptName", ["loc", [null, [177, 38], [177, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [177, 2], [177, 83]]]], ["inline", "t", ["forms.fd-edit-form-edit-form.publishToEBSD-caption"], [], ["loc", [null, [181, 9], [181, 67]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [184, 13], [184, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.publishToEBSD", ["loc", [null, [185, 10], [185, 29]]]]], [], []]], ["loc", [null, [182, 2], [186, 4]]]], ["inline", "t", ["forms.fd-edit-form-edit-form.attributes-caption"], [], ["loc", [null, [190, 9], [190, 64]]]], ["inline", "flexberry-groupedit", [], ["componentName", "attributesGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [194, 24], [194, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.attributes", ["loc", [null, [195, 20], [195, 57]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.attributes", ["loc", [null, [196, 12], [196, 28]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [197, 13], [197, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.attributes", ["loc", [null, [199, 14], [199, 37]]]], "error", ""], [], ["loc", [null, [199, 10], [199, 49]]]]], ["loc", [null, [191, 2], [200, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.attributes", ["loc", [null, [201, 38], [201, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [201, 2], [201, 83]]]], ["inline", "t", ["forms.fd-edit-form-edit-form.formViews-caption"], [], ["loc", [null, [205, 9], [205, 63]]]], ["inline", "flexberry-groupedit", [], ["componentName", "formViewsGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [209, 24], [209, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.formViews", ["loc", [null, [210, 20], [210, 56]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.formViews", ["loc", [null, [211, 12], [211, 27]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [212, 13], [212, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.formViews", ["loc", [null, [214, 14], [214, 36]]]], "error", ""], [], ["loc", [null, [214, 10], [214, 48]]]]], ["loc", [null, [206, 2], [215, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.formViews", ["loc", [null, [216, 38], [216, 60]]]]], [], []], "pointing", "pointing"], ["loc", [null, [216, 2], [216, 82]]]], ["inline", "t", ["forms.fd-edit-form-edit-form.methods-caption"], [], ["loc", [null, [220, 9], [220, 61]]]], ["inline", "flexberry-groupedit", [], ["componentName", "methodsGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [224, 24], [224, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.methods", ["loc", [null, [225, 20], [225, 54]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.methods", ["loc", [null, [226, 12], [226, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [227, 13], [227, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.methods", ["loc", [null, [229, 14], [229, 34]]]], "error", ""], [], ["loc", [null, [229, 10], [229, 46]]]]], ["loc", [null, [221, 2], [230, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.methods", ["loc", [null, [231, 38], [231, 58]]]]], [], []], "pointing", "pointing"], ["loc", [null, [231, 2], [231, 80]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/fd-editform-constructor", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 11,
                "column": 8
              },
              "end": {
                "line": 15,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-editform-constructor.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            dom.setAttribute(el1, "class", "ui button save-close-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element21 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element21);
            morphs[1] = dom.createMorphAt(element21, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["save", true], [], ["loc", [null, [12, 68], [12, 90]]]], ["inline", "t", ["forms.edit-form.saveAndClose-button-text"], [], ["loc", [null, [13, 12], [13, 60]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 7,
              "column": 6
            },
            "end": {
              "line": 16,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-editform-constructor.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element22 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element22);
          morphs[1] = dom.createMorphAt(element22, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [8, 60], [8, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [9, 10], [9, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [11, 18], [11, 29]]]]], [], 0, null, ["loc", [null, [11, 8], [15, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 26,
              "column": 2
            },
            "end": {
              "line": 37,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/fd-editform-constructor.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "fd-editform-row", [], ["row", ["subexpr", "@mut", [["get", "row", ["loc", [null, [28, 10], [28, 13]]]]], [], []], "selectedItem", ["subexpr", "readonly", [["get", "selectedItem", ["loc", [null, [29, 29], [29, 41]]]]], [], ["loc", [null, [29, 19], [29, 42]]]], "selectItemAction", ["subexpr", "action", ["selectItem"], [], ["loc", [null, [30, 23], [30, 44]]]], "setDragItemAction", ["subexpr", "action", ["setDragItem"], [], ["loc", [null, [31, 24], [31, 46]]]], "getDragItemAction", ["subexpr", "action", ["getDragItem"], [], ["loc", [null, [32, 24], [32, 46]]]], "moveDragItemAction", ["subexpr", "action", ["moveDragItem"], [], ["loc", [null, [33, 25], [33, 48]]]], "getComponentPropertiesAction", ["subexpr", "action", ["getComponentProperties"], [], ["loc", [null, [34, 35], [34, 68]]]], "showLookupAction", ["subexpr", "action", ["showLookup"], [], ["loc", [null, [35, 23], [35, 44]]]]], ["loc", [null, [27, 4], [36, 6]]]]],
        locals: ["row"],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 41,
                "column": 2
              },
              "end": {
                "line": 50,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-editform-constructor.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["forms.fd-editform-constructor.form-config-panel.remove-approve"], [], ["loc", [null, [49, 4], [49, 74]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 40,
              "column": 0
            },
            "end": {
              "line": 51,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-editform-constructor.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "modal-dialog", [], ["title", ["subexpr", "t", ["forms.fd-editform-constructor.form-config-panel.remove-control"], [], ["loc", [null, [42, 10], [42, 78]]]], "ok", ["subexpr", "action", ["removeSelectedItem", true], [], ["loc", [null, [43, 7], [43, 41]]]], "settings", ["subexpr", "hash", [], ["onHidden", ["subexpr", "action", [["get", "set", ["loc", [null, [45, 23], [45, 26]]]], "_showModalDialog", false], [], ["loc", [null, [45, 15], [45, 52]]]], "context", ".pusher:first"], ["loc", [null, [44, 13], [47, 5]]]]], 0, null, ["loc", [null, [41, 2], [50, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 54,
                "column": 2
              },
              "end": {
                "line": 64,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-editform-constructor.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "fd-objectlistview", [], ["view", ["subexpr", "@mut", [["get", "_lookupView", ["loc", [null, [63, 29], [63, 40]]]]], [], []], "types", ["subexpr", "@mut", [["get", "_lookupTypes", ["loc", [null, [63, 47], [63, 59]]]]], [], []]], ["loc", [null, [63, 4], [63, 61]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 53,
              "column": 0
            },
            "end": {
              "line": 65,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-editform-constructor.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "modal-dialog", [], ["title", ["subexpr", "@mut", [["get", "_lookupCaption", ["loc", [null, [55, 10], [55, 24]]]]], [], []], "useOkButton", false, "useCloseButton", false, "settings", ["subexpr", "hash", [], ["onHidden", ["subexpr", "action", [["get", "set", ["loc", [null, [59, 23], [59, 26]]]], "_showLookupDialog", false], [], ["loc", [null, [59, 15], [59, 53]]]], "context", ".pusher:first"], ["loc", [null, [58, 13], [61, 5]]]]], 0, null, ["loc", [null, [54, 2], [64, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child4 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 75,
                  "column": 6
                },
                "end": {
                  "line": 87,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/fd-editform-constructor.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui small dividing header");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("label");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("label");
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element18 = dom.childAt(fragment, [3]);
              var element19 = dom.childAt(fragment, [5]);
              var morphs = new Array(5);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createMorphAt(dom.childAt(element18, [1]), 0, 0);
              morphs[2] = dom.createMorphAt(element18, 3, 3);
              morphs[3] = dom.createMorphAt(dom.childAt(element19, [1]), 0, 0);
              morphs[4] = dom.createMorphAt(element19, 3, 3);
              return morphs;
            },
            statements: [["inline", "t", ["forms.fd-editform-constructor.form-config-panel.form-properties-header"], [], ["loc", [null, [77, 10], [77, 88]]]], ["inline", "t", ["forms.fd-editform-constructor.form-config-panel.form-name"], [], ["loc", [null, [80, 17], [80, 82]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.editform.caption", ["loc", [null, [81, 36], [81, 58]]]]], [], []]], ["loc", [null, [81, 10], [81, 60]]]], ["inline", "t", ["forms.fd-editform-constructor.form-config-panel.form-description"], [], ["loc", [null, [84, 17], [84, 89]]]], ["inline", "flexberry-textarea", [], ["value", ["subexpr", "@mut", [["get", "model.editform.description", ["loc", [null, [85, 37], [85, 63]]]]], [], []]], ["loc", [null, [85, 10], [85, 65]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 89,
                  "column": 6
                },
                "end": {
                  "line": 111,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/fd-editform-constructor.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui small dividing header");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["forms.fd-editform-constructor.form-config-panel.control-properties-header"], [], ["loc", [null, [91, 10], [91, 91]]]], ["inline", "fd-visual-edit-control-tree", [], ["selectedItem", ["subexpr", "@mut", [["get", "selectedItem", ["loc", [null, [94, 23], [94, 35]]]]], [], []], "model", ["subexpr", "hash", [], ["dataobject", ["get", "model.dataobject", ["loc", [null, [96, 23], [96, 39]]]], "editform", ["get", "model.editform", ["loc", [null, [97, 21], [97, 35]]]], "attributes", ["get", "attributes", ["loc", [null, [98, 23], [98, 33]]]], "masters", ["get", "masters", ["loc", [null, [99, 20], [99, 27]]]], "details", ["get", "details", ["loc", [null, [100, 20], [100, 27]]]], "simpleTypes", ["get", "simpleTypes", ["loc", [null, [101, 24], [101, 35]]]], "typemap", ["get", "typemap", ["loc", [null, [102, 20], [102, 27]]]], "enums", ["get", "enums", ["loc", [null, [103, 18], [103, 23]]]], "types", ["get", "types", ["loc", [null, [104, 18], [104, 23]]]], "mastersType", ["get", "mastersType", ["loc", [null, [105, 24], [105, 35]]]], "detailsType", ["get", "detailsType", ["loc", [null, [106, 24], [106, 35]]]]], ["loc", [null, [95, 16], [107, 11]]]], "items", ["subexpr", "@mut", [["get", "controlsTree", ["loc", [null, [108, 16], [108, 28]]]]], [], []], "typeForm", "editform"], ["loc", [null, [93, 8], [110, 10]]]]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 166,
                    "column": 8
                  },
                  "end": {
                    "line": 199,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/fd-editform-constructor.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "ui small dividing header");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "ui segments panel-wrapper");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("div");
                dom.setAttribute(el2, "class", "field");
                var el3 = dom.createTextNode("\n              ");
                dom.appendChild(el2, el3);
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("\n            ");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("div");
                dom.setAttribute(el2, "class", "ui segment overflow-panel");
                var el3 = dom.createTextNode("\n              ");
                dom.appendChild(el2, el3);
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("\n            ");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "class", "ui button");
                dom.setAttribute(el1, "type", "button");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element0 = dom.childAt(fragment, [3]);
                var element1 = dom.childAt(fragment, [5]);
                var element2 = dom.childAt(fragment, [7]);
                var morphs = new Array(8);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
                morphs[1] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
                morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
                morphs[3] = dom.createAttrMorph(element1, 'class');
                morphs[4] = dom.createElementMorph(element1);
                morphs[5] = dom.createMorphAt(element1, 1, 1);
                morphs[6] = dom.createElementMorph(element2);
                morphs[7] = dom.createMorphAt(element2, 1, 1);
                return morphs;
              },
              statements: [["inline", "t", ["forms.fd-editform-constructor.form-config-panel.attributes-control"], [], ["loc", [null, [168, 12], [168, 86]]]], ["inline", "flexberry-textbox", [], ["placeholder", ["subexpr", "t", ["forms.fd-editform-constructor.form-config-panel.search"], [], ["loc", [null, [174, 28], [174, 88]]]], "value", ["subexpr", "@mut", [["get", "searchTermTree", ["loc", [null, [175, 22], [175, 36]]]]], [], []]], ["loc", [null, [172, 14], [176, 16]]]], ["inline", "ember-jstree", [], ["actionReceiver", ["subexpr", "@mut", [["get", "actionReceiverNotUsedAttributesTree", ["loc", [null, [181, 31], [181, 66]]]]], [], []], "selectedNodes", ["subexpr", "@mut", [["get", "selectedNodesNotUsedAttributesTree", ["loc", [null, [182, 30], [182, 64]]]]], [], []], "data", ["subexpr", "@mut", [["get", "dataNotUsedAttributesTree", ["loc", [null, [183, 21], [183, 46]]]]], [], []], "plugins", ["subexpr", "@mut", [["get", "pluginsTree", ["loc", [null, [184, 24], [184, 35]]]]], [], []], "searchTerm", ["subexpr", "@mut", [["get", "searchTermTree", ["loc", [null, [185, 27], [185, 41]]]]], [], []], "searchOptions", ["subexpr", "@mut", [["get", "searchOptionsTree", ["loc", [null, [186, 30], [186, 47]]]]], [], []], "typesOptions", ["subexpr", "@mut", [["get", "typesOptionsTree", ["loc", [null, [187, 29], [187, 45]]]]], [], []], "treeObject", ["subexpr", "@mut", [["get", "treeObjectNotUsedAttributesTree", ["loc", [null, [188, 27], [188, 58]]]]], [], []], "eventDidBecomeReady", ["subexpr", "action", ["handleTreeDidBecomeReady"], [], ["loc", [null, [189, 36], [189, 71]]]]], ["loc", [null, [179, 14], [190, 16]]]], ["attribute", "class", ["concat", ["ui button ", ["get", "_applyDisabled", ["loc", [null, [193, 37], [193, 51]]]]]]], ["element", "action", ["setAttributeInControl"], ["on", "click"], ["loc", [null, [193, 69], [193, 115]]]], ["inline", "t", ["forms.fd-editform-constructor.form-config-panel.apply"], [], ["loc", [null, [194, 12], [194, 73]]]], ["element", "action", ["deleteEmptyControl"], ["on", "click"], ["loc", [null, [196, 50], [196, 93]]]], ["inline", "t", ["forms.fd-editform-constructor.form-config-panel.cancel"], [], ["loc", [null, [197, 12], [197, 74]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 113,
                  "column": 6
                },
                "end": {
                  "line": 200,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/fd-editform-constructor.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui small dividing header");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("button");
              dom.setAttribute(el2, "class", "ui button");
              dom.setAttribute(el2, "type", "button");
              var el3 = dom.createTextNode("\n              ");
              dom.appendChild(el2, el3);
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("button");
              dom.setAttribute(el2, "class", "ui button");
              dom.setAttribute(el2, "type", "button");
              var el3 = dom.createTextNode("\n              ");
              dom.appendChild(el2, el3);
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n            ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("button");
              dom.setAttribute(el2, "class", "ui button");
              dom.setAttribute(el2, "type", "button");
              var el3 = dom.createTextNode("\n              ");
              dom.appendChild(el2, el3);
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("button");
              dom.setAttribute(el2, "class", "ui button");
              dom.setAttribute(el2, "type", "button");
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n          ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui small dividing header");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "equal width fields");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("div");
              dom.setAttribute(el2, "class", "field");
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("button");
              dom.setAttribute(el3, "type", "button");
              var el4 = dom.createTextNode("\n              ");
              dom.appendChild(el3, el4);
              var el4 = dom.createComment("");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n            ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n          ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("div");
              dom.setAttribute(el2, "class", "field");
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("button");
              dom.setAttribute(el3, "class", "ui button");
              dom.setAttribute(el3, "type", "button");
              var el4 = dom.createTextNode("\n              ");
              dom.appendChild(el3, el4);
              var el4 = dom.createComment("");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n            ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n          ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "equal width fields");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("div");
              dom.setAttribute(el2, "class", "field");
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("button");
              dom.setAttribute(el3, "class", "ui icon button");
              dom.setAttribute(el3, "type", "button");
              var el4 = dom.createTextNode("\n              ");
              dom.appendChild(el3, el4);
              var el4 = dom.createElement("i");
              dom.setAttribute(el4, "class", "up arrow icon");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n            ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("button");
              dom.setAttribute(el3, "class", "ui icon button");
              dom.setAttribute(el3, "type", "button");
              var el4 = dom.createTextNode("\n              ");
              dom.appendChild(el3, el4);
              var el4 = dom.createElement("i");
              dom.setAttribute(el4, "class", "down arrow icon");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n            ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n          ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("div");
              dom.setAttribute(el2, "class", "field");
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("button");
              dom.setAttribute(el3, "class", "ui icon button");
              dom.setAttribute(el3, "type", "button");
              var el4 = dom.createTextNode("\n              ");
              dom.appendChild(el3, el4);
              var el4 = dom.createElement("i");
              dom.setAttribute(el4, "class", "left arrow icon");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n            ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("button");
              dom.setAttribute(el3, "class", "ui icon button");
              dom.setAttribute(el3, "type", "button");
              var el4 = dom.createTextNode("\n              ");
              dom.appendChild(el3, el4);
              var el4 = dom.createElement("i");
              dom.setAttribute(el4, "class", "right arrow icon");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n            ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n          ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element3 = dom.childAt(fragment, [3]);
              var element4 = dom.childAt(element3, [1]);
              var element5 = dom.childAt(element3, [3]);
              var element6 = dom.childAt(element3, [5]);
              var element7 = dom.childAt(fragment, [5, 1]);
              var element8 = dom.childAt(fragment, [9]);
              var element9 = dom.childAt(element8, [1, 1]);
              var element10 = dom.childAt(element8, [3, 1]);
              var element11 = dom.childAt(fragment, [11]);
              var element12 = dom.childAt(element11, [1]);
              var element13 = dom.childAt(element12, [1]);
              var element14 = dom.childAt(element12, [3]);
              var element15 = dom.childAt(element11, [3]);
              var element16 = dom.childAt(element15, [1]);
              var element17 = dom.childAt(element15, [3]);
              var morphs = new Array(26);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createElementMorph(element4);
              morphs[2] = dom.createMorphAt(element4, 1, 1);
              morphs[3] = dom.createElementMorph(element5);
              morphs[4] = dom.createMorphAt(element5, 1, 1);
              morphs[5] = dom.createElementMorph(element6);
              morphs[6] = dom.createMorphAt(element6, 1, 1);
              morphs[7] = dom.createElementMorph(element7);
              morphs[8] = dom.createMorphAt(element7, 1, 1);
              morphs[9] = dom.createMorphAt(dom.childAt(fragment, [7]), 1, 1);
              morphs[10] = dom.createAttrMorph(element9, 'class');
              morphs[11] = dom.createAttrMorph(element9, 'disabled');
              morphs[12] = dom.createElementMorph(element9);
              morphs[13] = dom.createMorphAt(element9, 1, 1);
              morphs[14] = dom.createAttrMorph(element10, 'disabled');
              morphs[15] = dom.createElementMorph(element10);
              morphs[16] = dom.createMorphAt(element10, 1, 1);
              morphs[17] = dom.createAttrMorph(element13, 'disabled');
              morphs[18] = dom.createElementMorph(element13);
              morphs[19] = dom.createAttrMorph(element14, 'disabled');
              morphs[20] = dom.createElementMorph(element14);
              morphs[21] = dom.createAttrMorph(element16, 'disabled');
              morphs[22] = dom.createElementMorph(element16);
              morphs[23] = dom.createAttrMorph(element17, 'disabled');
              morphs[24] = dom.createElementMorph(element17);
              morphs[25] = dom.createMorphAt(fragment, 13, 13, contextualElement);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["inline", "t", ["forms.fd-editform-constructor.form-config-panel.add-controls-header"], [], ["loc", [null, [115, 10], [115, 85]]]], ["element", "action", ["addControl"], [], ["loc", [null, [118, 52], [118, 75]]]], ["inline", "t", ["forms.fd-editform-constructor.form-config-panel.add-control"], [], ["loc", [null, [119, 14], [119, 81]]]], ["element", "action", ["addGroup"], [], ["loc", [null, [121, 52], [121, 73]]]], ["inline", "t", ["forms.fd-editform-constructor.form-config-panel.add-group"], [], ["loc", [null, [122, 14], [122, 79]]]], ["element", "action", ["addTab"], [], ["loc", [null, [124, 52], [124, 71]]]], ["inline", "t", ["forms.fd-editform-constructor.form-config-panel.add-tab"], [], ["loc", [null, [125, 14], [125, 77]]]], ["element", "action", ["addEmptyControl"], [], ["loc", [null, [129, 50], [129, 78]]]], ["inline", "t", ["forms.fd-editform-constructor.form-config-panel.empty-control"], [], ["loc", [null, [130, 12], [130, 81]]]], ["inline", "t", ["forms.fd-editform-constructor.form-config-panel.move-controls-header"], [], ["loc", [null, [134, 10], [134, 86]]]], ["attribute", "class", ["concat", ["ui ", ["subexpr", "if", [["get", "_moveItem", ["loc", [null, [138, 35], [138, 44]]]], "active"], [], ["loc", [null, [138, 30], [138, 55]]]], " button"]]], ["attribute", "disabled", ["subexpr", "not", [["get", "selectedItem", ["loc", [null, [138, 93], [138, 105]]]]], [], ["loc", [null, [138, 87], [138, 107]]]]], ["element", "action", [["get", "toggleProperty", ["loc", [null, [138, 117], [138, 131]]]], "_moveItem"], [], ["loc", [null, [138, 108], [138, 145]]]], ["inline", "t", ["forms.fd-editform-constructor.form-config-panel.move-control"], [], ["loc", [null, [139, 14], [139, 82]]]], ["attribute", "disabled", ["subexpr", "not", [["get", "selectedItem", ["loc", [null, [143, 67], [143, 79]]]]], [], ["loc", [null, [143, 61], [143, 81]]]]], ["element", "action", ["removeSelectedItem", false], [], ["loc", [null, [143, 82], [143, 119]]]], ["inline", "t", ["forms.fd-editform-constructor.form-config-panel.remove-control"], [], ["loc", [null, [144, 14], [144, 84]]]], ["attribute", "disabled", ["subexpr", "or", [["subexpr", "not", [["get", "selectedItem", ["loc", [null, [150, 76], [150, 88]]]]], [], ["loc", [null, [150, 71], [150, 89]]]], ["subexpr", "not", [["get", "_selectedIsRow", ["loc", [null, [150, 95], [150, 109]]]]], [], ["loc", [null, [150, 90], [150, 110]]]], ["get", "_selectedIsFirst", ["loc", [null, [150, 111], [150, 127]]]]], [], ["loc", [null, [150, 66], [150, 129]]]]], ["element", "action", ["sortSelectedItem", -1], [], ["loc", [null, [150, 130], [150, 162]]]], ["attribute", "disabled", ["subexpr", "or", [["subexpr", "not", [["get", "selectedItem", ["loc", [null, [153, 76], [153, 88]]]]], [], ["loc", [null, [153, 71], [153, 89]]]], ["subexpr", "not", [["get", "_selectedIsRow", ["loc", [null, [153, 95], [153, 109]]]]], [], ["loc", [null, [153, 90], [153, 110]]]], ["get", "_selectedIsLast", ["loc", [null, [153, 111], [153, 126]]]]], [], ["loc", [null, [153, 66], [153, 128]]]]], ["element", "action", ["sortSelectedItem", 1], [], ["loc", [null, [153, 129], [153, 160]]]], ["attribute", "disabled", ["subexpr", "or", [["subexpr", "not", [["get", "selectedItem", ["loc", [null, [158, 76], [158, 88]]]]], [], ["loc", [null, [158, 71], [158, 89]]]], ["get", "_selectedIsRow", ["loc", [null, [158, 90], [158, 104]]]], ["get", "_selectedIsFirst", ["loc", [null, [158, 105], [158, 121]]]]], [], ["loc", [null, [158, 66], [158, 123]]]]], ["element", "action", ["sortSelectedItem", -1], [], ["loc", [null, [158, 124], [158, 156]]]], ["attribute", "disabled", ["subexpr", "or", [["subexpr", "not", [["get", "selectedItem", ["loc", [null, [161, 76], [161, 88]]]]], [], ["loc", [null, [161, 71], [161, 89]]]], ["get", "_selectedIsRow", ["loc", [null, [161, 90], [161, 104]]]], ["get", "_selectedIsLast", ["loc", [null, [161, 105], [161, 120]]]]], [], ["loc", [null, [161, 66], [161, 122]]]]], ["element", "action", ["sortSelectedItem", 1], [], ["loc", [null, [161, 123], [161, 154]]]], ["block", "if", [["get", "_showNotUsedAttributesTree", ["loc", [null, [166, 14], [166, 40]]]]], [], 0, null, ["loc", [null, [166, 8], [199, 15]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 68,
                "column": 2
              },
              "end": {
                "line": 203,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-editform-constructor.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("form");
            dom.setAttribute(el1, "class", "ui form segment");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "ui segment");
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3, "class", "ui large header");
            var el4 = dom.createTextNode("\n          ");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n        ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n      ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element20 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createMorphAt(dom.childAt(element20, [1, 1]), 1, 1);
            morphs[1] = dom.createMorphAt(element20, 3, 3);
            morphs[2] = dom.createMorphAt(element20, 5, 5);
            morphs[3] = dom.createMorphAt(element20, 7, 7);
            return morphs;
          },
          statements: [["inline", "t", ["forms.fd-editform-constructor.caption"], [], ["loc", [null, [72, 10], [72, 55]]]], ["block", "ui-tab-segment", [], ["tab", "first", "title", ["subexpr", "t", ["forms.fd-editform-constructor.form-config-panel.form-properties-header"], [], ["loc", [null, [75, 42], [75, 118]]]], "theme", "", "active", true], 0, null, ["loc", [null, [75, 6], [87, 25]]]], ["block", "ui-tab-segment", [], ["tab", "control-properties", "title", ["subexpr", "t", ["forms.fd-editform-constructor.form-config-panel.control-properties-header"], [], ["loc", [null, [89, 55], [89, 134]]]], "theme", ""], 1, null, ["loc", [null, [89, 6], [111, 25]]]], ["block", "ui-tab-segment", [], ["tab", "add-controls", "title", ["subexpr", "t", ["forms.fd-editform-constructor.form-config-panel.add-controls-header"], [], ["loc", [null, [113, 49], [113, 122]]]], "theme", ""], 2, null, ["loc", [null, [113, 6], [200, 25]]]]],
          locals: [],
          templates: [child0, child1, child2]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 67,
              "column": 0
            },
            "end": {
              "line": 204,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-editform-constructor.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "fd-tabs", [], ["tabsMenuTheme", "vertical tabular", "class", "ui segments horizontal right-tabs"], 0, null, ["loc", [null, [68, 2], [203, 14]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 205,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-editform-constructor.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "class", "ui button disabled");
        dom.setAttribute(el4, "type", "button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "button");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element23 = dom.childAt(fragment, [2]);
        var element24 = dom.childAt(element23, [3, 1]);
        var element25 = dom.childAt(element24, [5]);
        var morphs = new Array(11);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createAttrMorph(element23, 'class');
        morphs[2] = dom.createMorphAt(element23, 1, 1);
        morphs[3] = dom.createMorphAt(element24, 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element24, [3]), 1, 1);
        morphs[5] = dom.createElementMorph(element25);
        morphs[6] = dom.createMorphAt(element25, 1, 1);
        morphs[7] = dom.createMorphAt(element23, 5, 5);
        morphs[8] = dom.createMorphAt(fragment, 4, 4, contextualElement);
        morphs[9] = dom.createMorphAt(fragment, 6, 6, contextualElement);
        morphs[10] = dom.createMorphAt(fragment, 8, 8, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["content", "model.editform.caption", ["loc", [null, [1, 22], [1, 48]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [3, 47], [3, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [4, 26], [4, 31]]]]], [], []]], ["loc", [null, [4, 2], [4, 33]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [7, 16], [7, 24]]]]], [], 0, null, ["loc", [null, [7, 6], [16, 17]]]], ["inline", "t", ["forms.fd-visual-edit-form.preview-mobile-variant"], [], ["loc", [null, [18, 8], [18, 64]]]], ["element", "action", ["close"], [], ["loc", [null, [20, 59], [20, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [21, 8], [21, 49]]]], ["block", "each", [["get", "controlsTree", ["loc", [null, [26, 10], [26, 22]]]]], [], 1, null, ["loc", [null, [26, 2], [37, 11]]]], ["block", "if", [["get", "_showModalDialog", ["loc", [null, [40, 6], [40, 22]]]]], [], 2, null, ["loc", [null, [40, 0], [51, 7]]]], ["block", "if", [["get", "_showLookupDialog", ["loc", [null, [53, 6], [53, 23]]]]], [], 3, null, ["loc", [null, [53, 0], [65, 7]]]], ["block", "fd-config-panel", [], [], 4, null, ["loc", [null, [67, 0], [204, 20]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  })());
});
define("dummy/templates/fd-enum-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 8
              },
              "end": {
                "line": 20,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-enum-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [17, 66], [17, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [18, 12], [18, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-enum-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [13, 60], [13, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [14, 10], [14, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [16, 18], [16, 29]]]]], [], 0, null, ["loc", [null, [16, 8], [20, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 105,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-enum-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var element7 = dom.childAt(element2, [11]);
        var element8 = dom.childAt(element2, [13]);
        var element9 = dom.childAt(element2, [15]);
        var element10 = dom.childAt(element2, [17]);
        var morphs = new Array(21);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createMorphAt(element2, 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(element3, 1, 1);
        morphs[5] = dom.createElementMorph(element4);
        morphs[6] = dom.createMorphAt(element4, 1, 1);
        morphs[7] = dom.createMorphAt(element5, 1, 1);
        morphs[8] = dom.createMorphAt(element5, 3, 3);
        morphs[9] = dom.createMorphAt(element6, 1, 1);
        morphs[10] = dom.createMorphAt(element6, 3, 3);
        morphs[11] = dom.createMorphAt(dom.childAt(element7, [1]), 0, 0);
        morphs[12] = dom.createMorphAt(element7, 3, 3);
        morphs[13] = dom.createMorphAt(element7, 5, 5);
        morphs[14] = dom.createMorphAt(element8, 1, 1);
        morphs[15] = dom.createMorphAt(element8, 3, 3);
        morphs[16] = dom.createMorphAt(element9, 1, 1);
        morphs[17] = dom.createMorphAt(element9, 3, 3);
        morphs[18] = dom.createMorphAt(dom.childAt(element10, [1]), 0, 0);
        morphs[19] = dom.createMorphAt(element10, 3, 3);
        morphs[20] = dom.createMorphAt(element10, 5, 5);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-enum-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 61]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [3, 47], [3, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [4, 26], [4, 31]]]]], [], []]], ["loc", [null, [4, 2], [4, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [7, 43], [7, 55]]]]], [], []]], ["loc", [null, [7, 6], [7, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [12, 16], [12, 24]]]]], [], 0, null, ["loc", [null, [12, 6], [21, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [22, 59], [22, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [23, 8], [23, 49]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [30, 16], [30, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [31, 13], [31, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [33, 10], [33, 20]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [34, 14], [34, 31]]]], "error", ""], [], ["loc", [null, [34, 10], [34, 43]]]], "label", ["subexpr", "t", ["forms.fd-enum-edit-form.name-caption"], [], ["loc", [null, [35, 10], [35, 52]]]]], ["loc", [null, [28, 2], [36, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [37, 38], [37, 55]]]]], [], []], "pointing", "pointing"], ["loc", [null, [37, 2], [37, 77]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [43, 16], [43, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [44, 13], [44, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [46, 10], [46, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [47, 14], [47, 38]]]], "error", ""], [], ["loc", [null, [47, 10], [47, 50]]]], "label", ["subexpr", "t", ["forms.fd-enum-edit-form.description-caption"], [], ["loc", [null, [48, 10], [48, 59]]]]], ["loc", [null, [41, 2], [49, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [50, 38], [50, 62]]]]], [], []], "pointing", "pointing"], ["loc", [null, [50, 2], [50, 84]]]], ["inline", "t", ["forms.fd-enum-edit-form.onlyShowSelectedValue-caption"], [], ["loc", [null, [54, 9], [54, 70]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [57, 13], [57, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.onlyShowSelectedValue", ["loc", [null, [58, 10], [58, 37]]]]], [], []]], ["loc", [null, [55, 2], [59, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.onlyShowSelectedValue", ["loc", [null, [60, 38], [60, 72]]]]], [], []], "pointing", "pointing"], ["loc", [null, [60, 2], [60, 94]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [66, 16], [66, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [67, 13], [67, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.packet", ["loc", [null, [69, 10], [69, 22]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.packet", ["loc", [null, [70, 14], [70, 33]]]], "error", ""], [], ["loc", [null, [70, 10], [70, 45]]]], "label", ["subexpr", "t", ["forms.fd-enum-edit-form.packet-caption"], [], ["loc", [null, [71, 10], [71, 54]]]]], ["loc", [null, [64, 2], [72, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.packet", ["loc", [null, [73, 38], [73, 57]]]]], [], []], "pointing", "pointing"], ["loc", [null, [73, 2], [73, 79]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [79, 16], [79, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [80, 13], [80, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.namespacePostfix", ["loc", [null, [82, 10], [82, 32]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.namespacePostfix", ["loc", [null, [83, 14], [83, 43]]]], "error", ""], [], ["loc", [null, [83, 10], [83, 55]]]], "label", ["subexpr", "t", ["forms.fd-enum-edit-form.namespacePostfix-caption"], [], ["loc", [null, [84, 10], [84, 64]]]]], ["loc", [null, [77, 2], [85, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.namespacePostfix", ["loc", [null, [86, 38], [86, 67]]]]], [], []], "pointing", "pointing"], ["loc", [null, [86, 2], [86, 89]]]], ["inline", "t", ["forms.fd-enum-edit-form.attributes-caption"], [], ["loc", [null, [90, 9], [90, 59]]]], ["inline", "flexberry-groupedit", [], ["componentName", "attributesGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [94, 24], [94, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.attributes", ["loc", [null, [95, 20], [95, 57]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.attributes", ["loc", [null, [96, 12], [96, 28]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [97, 13], [97, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.attributes", ["loc", [null, [99, 14], [99, 37]]]], "error", ""], [], ["loc", [null, [99, 10], [99, 49]]]]], ["loc", [null, [91, 2], [100, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.attributes", ["loc", [null, [101, 38], [101, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [101, 2], [101, 83]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/fd-external-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 8
              },
              "end": {
                "line": 20,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-external-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [17, 66], [17, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [18, 12], [18, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-external-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [13, 60], [13, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [14, 10], [14, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [16, 18], [16, 29]]]]], [], 0, null, ["loc", [null, [16, 8], [20, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 133,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-external-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var element7 = dom.childAt(element2, [11]);
        var element8 = dom.childAt(element2, [13]);
        var element9 = dom.childAt(element2, [15]);
        var element10 = dom.childAt(element2, [17]);
        var element11 = dom.childAt(element2, [19]);
        var element12 = dom.childAt(element2, [21]);
        var element13 = dom.childAt(element2, [23]);
        var morphs = new Array(25);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createMorphAt(element2, 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(element3, 1, 1);
        morphs[5] = dom.createElementMorph(element4);
        morphs[6] = dom.createMorphAt(element4, 1, 1);
        morphs[7] = dom.createMorphAt(element5, 1, 1);
        morphs[8] = dom.createMorphAt(element5, 3, 3);
        morphs[9] = dom.createMorphAt(element6, 1, 1);
        morphs[10] = dom.createMorphAt(element6, 3, 3);
        morphs[11] = dom.createMorphAt(element7, 1, 1);
        morphs[12] = dom.createMorphAt(element7, 3, 3);
        morphs[13] = dom.createMorphAt(element8, 1, 1);
        morphs[14] = dom.createMorphAt(element8, 3, 3);
        morphs[15] = dom.createMorphAt(element9, 1, 1);
        morphs[16] = dom.createMorphAt(element9, 3, 3);
        morphs[17] = dom.createMorphAt(dom.childAt(element10, [1]), 0, 0);
        morphs[18] = dom.createMorphAt(element10, 3, 3);
        morphs[19] = dom.createMorphAt(dom.childAt(element11, [1]), 0, 0);
        morphs[20] = dom.createMorphAt(element11, 3, 3);
        morphs[21] = dom.createMorphAt(dom.childAt(element12, [1]), 0, 0);
        morphs[22] = dom.createMorphAt(element12, 3, 3);
        morphs[23] = dom.createMorphAt(element13, 1, 1);
        morphs[24] = dom.createMorphAt(element13, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-external-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 65]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [3, 47], [3, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [4, 26], [4, 31]]]]], [], []]], ["loc", [null, [4, 2], [4, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [7, 43], [7, 55]]]]], [], []]], ["loc", [null, [7, 6], [7, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [12, 16], [12, 24]]]]], [], 0, null, ["loc", [null, [12, 6], [21, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [22, 59], [22, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [23, 8], [23, 49]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [30, 16], [30, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [31, 13], [31, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [33, 10], [33, 20]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [34, 14], [34, 31]]]], "error", ""], [], ["loc", [null, [34, 10], [34, 43]]]], "label", ["subexpr", "t", ["forms.fd-external-edit-form.name-caption"], [], ["loc", [null, [35, 10], [35, 56]]]]], ["loc", [null, [28, 2], [36, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [37, 38], [37, 55]]]]], [], []], "pointing", "pointing"], ["loc", [null, [37, 2], [37, 77]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [43, 16], [43, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [44, 13], [44, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [46, 10], [46, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [47, 14], [47, 38]]]], "error", ""], [], ["loc", [null, [47, 10], [47, 50]]]], "label", ["subexpr", "t", ["forms.fd-external-edit-form.description-caption"], [], ["loc", [null, [48, 10], [48, 63]]]]], ["loc", [null, [41, 2], [49, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [50, 38], [50, 62]]]]], [], []], "pointing", "pointing"], ["loc", [null, [50, 2], [50, 84]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [56, 16], [56, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [57, 13], [57, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.storeInstancesInTypeXML", ["loc", [null, [59, 10], [59, 39]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.storeInstancesInTypeXML", ["loc", [null, [60, 14], [60, 50]]]], "error", ""], [], ["loc", [null, [60, 10], [60, 62]]]], "label", ["subexpr", "t", ["forms.fd-external-edit-form.storeInstancesInTypeXML-caption"], [], ["loc", [null, [61, 10], [61, 75]]]]], ["loc", [null, [54, 2], [62, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.storeInstancesInTypeXML", ["loc", [null, [63, 38], [63, 74]]]]], [], []], "pointing", "pointing"], ["loc", [null, [63, 2], [63, 96]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [69, 16], [69, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [70, 13], [70, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.packet", ["loc", [null, [72, 10], [72, 22]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.packet", ["loc", [null, [73, 14], [73, 33]]]], "error", ""], [], ["loc", [null, [73, 10], [73, 45]]]], "label", ["subexpr", "t", ["forms.fd-external-edit-form.packet-caption"], [], ["loc", [null, [74, 10], [74, 58]]]]], ["loc", [null, [67, 2], [75, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.packet", ["loc", [null, [76, 38], [76, 57]]]]], [], []], "pointing", "pointing"], ["loc", [null, [76, 2], [76, 79]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [82, 16], [82, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [83, 13], [83, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.namespacePostfix", ["loc", [null, [85, 10], [85, 32]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.namespacePostfix", ["loc", [null, [86, 14], [86, 43]]]], "error", ""], [], ["loc", [null, [86, 10], [86, 55]]]], "label", ["subexpr", "t", ["forms.fd-external-edit-form.namespacePostfix-caption"], [], ["loc", [null, [87, 10], [87, 68]]]]], ["loc", [null, [80, 2], [88, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.namespacePostfix", ["loc", [null, [89, 38], [89, 67]]]]], [], []], "pointing", "pointing"], ["loc", [null, [89, 2], [89, 89]]]], ["inline", "t", ["forms.fd-external-edit-form.pBMembers-caption"], [], ["loc", [null, [93, 9], [93, 62]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [96, 13], [96, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.pBMembers", ["loc", [null, [97, 10], [97, 25]]]]], [], []]], ["loc", [null, [94, 2], [98, 4]]]], ["inline", "t", ["forms.fd-external-edit-form.pBCustomAttributes-caption"], [], ["loc", [null, [102, 9], [102, 71]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [105, 13], [105, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.pBCustomAttributes", ["loc", [null, [106, 10], [106, 34]]]]], [], []]], ["loc", [null, [103, 2], [107, 4]]]], ["inline", "t", ["forms.fd-external-edit-form.publishToEBSD-caption"], [], ["loc", [null, [111, 9], [111, 66]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [114, 13], [114, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.publishToEBSD", ["loc", [null, [115, 10], [115, 29]]]]], [], []]], ["loc", [null, [112, 2], [116, 4]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [122, 16], [122, 60]]]], "readonly", true, "required", true, "value", ["subexpr", "@mut", [["get", "model.stage.name", ["loc", [null, [125, 10], [125, 26]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.stage.name", ["loc", [null, [126, 14], [126, 37]]]], "error", ""], [], ["loc", [null, [126, 10], [126, 49]]]], "label", ["subexpr", "t", ["forms.fd-external-edit-form.stage.name-caption"], [], ["loc", [null, [127, 10], [127, 62]]]]], ["loc", [null, [120, 2], [128, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.stage.name", ["loc", [null, [129, 38], [129, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [129, 2], [129, 83]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/fd-generation-list-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 35,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-generation-list-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.fd-generation-list-form.caption"], [], ["loc", [null, [2, 4], [2, 49]]]], ["inline", "flexberry-objectlistview", [], ["modelName", "fd-generation", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 12], [8, 17]]]]], [], []], "createNewButton", true, "refreshButton", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [11, 12], [11, 27]]]]], [], []], "orderable", true, "enableFilters", true, "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [14, 12], [14, 19]]]]], [], []], "disableHierarchicalMode", true, "applyFilters", ["subexpr", "action", ["applyFilters"], [], ["loc", [null, [16, 17], [16, 40]]]], "resetFilters", ["subexpr", "action", ["resetFilters"], [], ["loc", [null, [17, 17], [17, 40]]]], "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [18, 17], [18, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [19, 23], [19, 52]]]], "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [20, 10], [20, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [21, 17], [21, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [22, 18], [22, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [23, 22], [23, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [24, 20], [24, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [25, 16], [25, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [26, 17], [26, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [27, 13], [27, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [28, 13], [28, 32]]]], "componentName", "FdGenerationListForm", "columnsWidthAutoresize", true, "customButtons", ["subexpr", "@mut", [["get", "customButtons", ["loc", [null, [31, 18], [31, 31]]]]], [], []], "generationStartButtonClick", "generationStartButtonClick"], ["loc", [null, [4, 2], [33, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-generation-list-form/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-generation-list-form/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-generation-process-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 6,
              "column": 2
            },
            "end": {
              "line": 11,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/fd-generation-process-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui teal progress generation-progress-bar");
          dom.setAttribute(el1, "data-percent", "0");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "bar");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "label");
          var el3 = dom.createTextNode("0%");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes() {
          return [];
        },
        statements: [],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 14,
              "column": 2
            },
            "end": {
              "line": 23,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/fd-generation-process-form.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "log-record");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("span");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1, 1]);
          var morphs = new Array(5);
          morphs[0] = dom.createAttrMorph(element0, 'class');
          morphs[1] = dom.createMorphAt(element0, 1, 1);
          morphs[2] = dom.createMorphAt(element0, 3, 3);
          morphs[3] = dom.createMorphAt(element0, 5, 5);
          morphs[4] = dom.createMorphAt(element0, 7, 7);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", [["subexpr", "if", [["get", "logRecord.thisIsError", ["loc", [null, [16, 24], [16, 45]]]], "error", ["subexpr", "if", [["get", "logRecord.isWarn", ["loc", [null, [16, 58], [16, 74]]]], "warning", "default"], [], ["loc", [null, [16, 54], [16, 95]]]]], [], ["loc", [null, [16, 19], [16, 97]]]], "-log-record"]]], ["inline", "concat", [["subexpr", "get-formatted", [["get", "logRecord", ["loc", [null, [17, 32], [17, 41]]]], "time"], ["dateFormat", "DD.MM.YYYY, HH:mm:ss", "moment", ["get", "moment", ["loc", [null, [17, 90], [17, 96]]]]], ["loc", [null, [17, 17], [17, 97]]]], ": "], [], ["loc", [null, [17, 8], [17, 104]]]], ["inline", "if", [["get", "logRecord.thisIsError", ["loc", [null, [18, 13], [18, 34]]]], ["subexpr", "concat", ["[", ["subexpr", "t", ["forms.fd-generation-process-form.log-message-types.error"], [], ["loc", [null, [18, 47], [18, 109]]]], "]: "], [], ["loc", [null, [18, 35], [18, 116]]]]], [], ["loc", [null, [18, 8], [18, 118]]]], ["inline", "if", [["get", "logRecord.isWarn", ["loc", [null, [19, 13], [19, 29]]]], ["subexpr", "concat", ["[", ["subexpr", "t", ["forms.fd-generation-process-form.log-message-types.warning"], [], ["loc", [null, [19, 42], [19, 106]]]], "]: "], [], ["loc", [null, [19, 30], [19, 113]]]]], [], ["loc", [null, [19, 8], [19, 115]]]], ["content", "logRecord.text", ["loc", [null, [20, 8], [20, 26]]]]],
        locals: ["logRecord"],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 25,
                "column": 6
              },
              "end": {
                "line": 27,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/fd-generation-process-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["forms.fd-generation-process-form.start-generation"], [], ["loc", [null, [26, 8], [26, 65]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 6
              },
              "end": {
                "line": 29,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/fd-generation-process-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["forms.fd-generation-process-form.no-log-caption"], [], ["loc", [null, [28, 8], [28, 63]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 23,
              "column": 2
            },
            "end": {
              "line": 31,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/fd-generation-process-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "log-record");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["block", "if", [["get", "generationId", ["loc", [null, [25, 12], [25, 24]]]]], [], 0, 1, ["loc", [null, [25, 6], [29, 13]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-generation-process-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("button");
        dom.setAttribute(el2, "type", "submit");
        dom.setAttribute(el2, "class", "ui button");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("h3");
        dom.setAttribute(el2, "class", "ui header");
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element1 = dom.childAt(fragment, [2]);
        var element2 = dom.childAt(element1, [3]);
        var morphs = new Array(8);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createAttrMorph(element1, 'class');
        morphs[2] = dom.createMorphAt(element1, 1, 1);
        morphs[3] = dom.createElementMorph(element2);
        morphs[4] = dom.createMorphAt(element2, 0, 0);
        morphs[5] = dom.createMorphAt(element1, 5, 5);
        morphs[6] = dom.createMorphAt(dom.childAt(element1, [7]), 0, 0);
        morphs[7] = dom.createMorphAt(element1, 9, 9);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-generation-process-form.caption"], [], ["loc", [null, [1, 22], [1, 70]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [2, 47], [2, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [3, 26], [3, 31]]]]], [], []]], ["loc", [null, [3, 2], [3, 33]]]], ["element", "action", ["generate"], [], ["loc", [null, [4, 42], [4, 63]]]], ["inline", "t", ["forms.fd-generation-process-form.generation-button-text"], [], ["loc", [null, [4, 64], [4, 127]]]], ["block", "if", [["get", "generationId", ["loc", [null, [6, 8], [6, 20]]]]], [], 0, null, ["loc", [null, [6, 2], [11, 9]]]], ["inline", "t", ["forms.fd-generation-process-form.generation-log-caption"], [], ["loc", [null, [13, 24], [13, 87]]]], ["block", "each", [["get", "sortedGenerationLog", ["loc", [null, [14, 10], [14, 29]]]]], [], 1, 2, ["loc", [null, [14, 2], [31, 11]]]]],
      locals: [],
      templates: [child0, child1, child2]
    };
  })());
});
define("dummy/templates/fd-inheritance-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-inheritance-edit-form.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [10, 14], [10, 26]]]]], [], []]], ["loc", [null, [5, 4], [11, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-inheritance-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [4, 10], [4, 23]]]]], [], 0, null, ["loc", [null, [4, 2], [12, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 8
              },
              "end": {
                "line": 31,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-inheritance-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [28, 66], [28, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [29, 12], [29, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 32,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-inheritance-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [24, 60], [24, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [25, 10], [25, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [27, 18], [27, 29]]]]], [], 0, null, ["loc", [null, [27, 8], [31, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 75,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-inheritance-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [3]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var element7 = dom.childAt(element2, [11]);
        var element8 = dom.childAt(element2, [13]);
        var morphs = new Array(18);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createAttrMorph(element2, 'class');
        morphs[3] = dom.createMorphAt(element2, 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[5] = dom.createMorphAt(element3, 1, 1);
        morphs[6] = dom.createElementMorph(element4);
        morphs[7] = dom.createMorphAt(element4, 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
        morphs[9] = dom.createMorphAt(element5, 3, 3);
        morphs[10] = dom.createMorphAt(dom.childAt(element6, [1]), 0, 0);
        morphs[11] = dom.createMorphAt(element6, 3, 3);
        morphs[12] = dom.createMorphAt(element6, 5, 5);
        morphs[13] = dom.createMorphAt(dom.childAt(element7, [1]), 0, 0);
        morphs[14] = dom.createMorphAt(element7, 3, 3);
        morphs[15] = dom.createMorphAt(element7, 5, 5);
        morphs[16] = dom.createMorphAt(dom.childAt(element8, [1]), 0, 0);
        morphs[17] = dom.createMorphAt(element8, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-inheritance-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 68]]]], ["block", "if", [["get", "errorMessages", ["loc", [null, [3, 6], [3, 19]]]]], [], 0, null, ["loc", [null, [3, 0], [13, 7]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [14, 47], [14, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [15, 26], [15, 31]]]]], [], []]], ["loc", [null, [15, 2], [15, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [18, 43], [18, 55]]]]], [], []]], ["loc", [null, [18, 6], [18, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [23, 16], [23, 24]]]]], [], 1, null, ["loc", [null, [23, 6], [32, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [33, 59], [33, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [34, 8], [34, 49]]]], ["inline", "t", ["forms.fd-inheritance-edit-form.name-caption"], [], ["loc", [null, [39, 11], [39, 62]]]], ["inline", "flexberry-textbox", [], ["value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [42, 12], [42, 22]]]]], [], []]], ["loc", [null, [40, 4], [43, 6]]]], ["inline", "t", ["forms.fd-inheritance-edit-form.parent-caption"], [], ["loc", [null, [46, 11], [46, 64]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "@mut", [["get", "parentNames", ["loc", [null, [49, 12], [49, 23]]]]], [], []], "value", ["subexpr", "@mut", [["get", "parentName", ["loc", [null, [50, 12], [50, 22]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonlyDropdown", ["loc", [null, [51, 15], [51, 31]]]]], [], []], "onChange", ["subexpr", "action", ["changeParent"], [], ["loc", [null, [52, 15], [52, 38]]]]], ["loc", [null, [47, 4], [53, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.changeParent", ["loc", [null, [54, 40], [54, 65]]]]], [], []], "pointing", "pointing"], ["loc", [null, [54, 4], [54, 87]]]], ["inline", "t", ["forms.fd-inheritance-edit-form.child-caption"], [], ["loc", [null, [57, 11], [57, 63]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "@mut", [["get", "childNames", ["loc", [null, [60, 12], [60, 22]]]]], [], []], "value", ["subexpr", "@mut", [["get", "childName", ["loc", [null, [61, 12], [61, 21]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonlyDropdown", ["loc", [null, [62, 15], [62, 31]]]]], [], []], "onChange", ["subexpr", "action", ["changeChild"], [], ["loc", [null, [63, 15], [63, 37]]]]], ["loc", [null, [58, 4], [64, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.changeChild", ["loc", [null, [65, 40], [65, 64]]]]], [], []], "pointing", "pointing"], ["loc", [null, [65, 4], [65, 86]]]], ["inline", "t", ["forms.fd-inheritance-edit-form.description-caption"], [], ["loc", [null, [68, 11], [68, 69]]]], ["inline", "flexberry-textarea", [], ["value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [71, 12], [71, 29]]]]], [], []]], ["loc", [null, [69, 4], [72, 6]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/fd-inheritance-list-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 34,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-inheritance-list-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.fd-inheritance-list-form.caption"], [], ["loc", [null, [2, 4], [2, 50]]]], ["inline", "flexberry-objectlistview", [], ["modelName", "fd-dev-inheritance", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 12], [8, 17]]]]], [], []], "createNewButton", true, "refreshButton", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [11, 12], [11, 27]]]]], [], []], "orderable", true, "enableFilters", true, "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [14, 12], [14, 19]]]]], [], []], "disableHierarchicalMode", true, "applyFilters", ["subexpr", "action", ["applyFilters"], [], ["loc", [null, [16, 17], [16, 40]]]], "resetFilters", ["subexpr", "action", ["resetFilters"], [], ["loc", [null, [17, 17], [17, 40]]]], "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [18, 17], [18, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [19, 23], [19, 52]]]], "showEditMenuItemInRow", true, "showDeleteMenuItemInRow", true, "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [22, 10], [22, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [23, 17], [23, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [24, 18], [24, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [25, 22], [25, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [26, 20], [26, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [27, 16], [27, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [28, 17], [28, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [29, 13], [29, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [30, 13], [30, 32]]]], "componentName", "FdInheritanceListForm"], ["loc", [null, [4, 2], [32, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-inheritance-list-form/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-inheritance-list-form/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-interface-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 8
              },
              "end": {
                "line": 20,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-interface-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [17, 66], [17, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [18, 12], [18, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-interface-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [13, 60], [13, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [14, 10], [14, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [16, 18], [16, 29]]]]], [], 0, null, ["loc", [null, [16, 8], [20, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 155,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-interface-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var element7 = dom.childAt(element2, [11]);
        var element8 = dom.childAt(element2, [13]);
        var element9 = dom.childAt(element2, [15]);
        var element10 = dom.childAt(element2, [17]);
        var element11 = dom.childAt(element2, [19]);
        var element12 = dom.childAt(element2, [21]);
        var element13 = dom.childAt(element2, [23]);
        var element14 = dom.childAt(element2, [25]);
        var morphs = new Array(31);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createMorphAt(element2, 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(element3, 1, 1);
        morphs[5] = dom.createElementMorph(element4);
        morphs[6] = dom.createMorphAt(element4, 1, 1);
        morphs[7] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
        morphs[8] = dom.createMorphAt(element5, 3, 3);
        morphs[9] = dom.createMorphAt(element5, 5, 5);
        morphs[10] = dom.createMorphAt(dom.childAt(element6, [1]), 0, 0);
        morphs[11] = dom.createMorphAt(element6, 3, 3);
        morphs[12] = dom.createMorphAt(element6, 5, 5);
        morphs[13] = dom.createMorphAt(element7, 1, 1);
        morphs[14] = dom.createMorphAt(element7, 3, 3);
        morphs[15] = dom.createMorphAt(element8, 1, 1);
        morphs[16] = dom.createMorphAt(element8, 3, 3);
        morphs[17] = dom.createMorphAt(element9, 1, 1);
        morphs[18] = dom.createMorphAt(element9, 3, 3);
        morphs[19] = dom.createMorphAt(element10, 1, 1);
        morphs[20] = dom.createMorphAt(element10, 3, 3);
        morphs[21] = dom.createMorphAt(dom.childAt(element11, [1]), 0, 0);
        morphs[22] = dom.createMorphAt(element11, 3, 3);
        morphs[23] = dom.createMorphAt(dom.childAt(element12, [1]), 0, 0);
        morphs[24] = dom.createMorphAt(element12, 3, 3);
        morphs[25] = dom.createMorphAt(dom.childAt(element13, [1]), 0, 0);
        morphs[26] = dom.createMorphAt(element13, 3, 3);
        morphs[27] = dom.createMorphAt(element13, 5, 5);
        morphs[28] = dom.createMorphAt(dom.childAt(element14, [1]), 0, 0);
        morphs[29] = dom.createMorphAt(element14, 3, 3);
        morphs[30] = dom.createMorphAt(element14, 5, 5);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-interface-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 66]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [3, 47], [3, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [4, 26], [4, 31]]]]], [], []]], ["loc", [null, [4, 2], [4, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [7, 43], [7, 55]]]]], [], []]], ["loc", [null, [7, 6], [7, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [12, 16], [12, 24]]]]], [], 0, null, ["loc", [null, [12, 6], [21, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [22, 59], [22, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [23, 8], [23, 49]]]], ["inline", "t", ["forms.fd-interface-edit-form.businessServerClass-caption"], [], ["loc", [null, [28, 9], [28, 73]]]], ["inline", "flexberry-lookup", [], ["choose", "showLookupDialog", "remove", "removeLookupValue", "value", ["subexpr", "@mut", [["get", "model.businessServerClass", ["loc", [null, [33, 10], [33, 35]]]]], [], []], "relationName", "businessServerClass", "projection", "ListFormView", "title", ["subexpr", "t", ["forms.fd-interface-edit-form.businessServerClass-caption"], [], ["loc", [null, [37, 10], [37, 72]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [38, 13], [38, 21]]]]], [], []]], ["loc", [null, [29, 2], [39, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.businessServerClass", ["loc", [null, [40, 38], [40, 70]]]]], [], []], "pointing", "pointing"], ["loc", [null, [40, 2], [40, 92]]]], ["inline", "t", ["forms.fd-interface-edit-form.businessServerEvents-caption"], [], ["loc", [null, [44, 9], [44, 74]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "flexberry-enum", ["i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events"], [], ["loc", [null, [47, 10], [47, 91]]]], "value", ["subexpr", "@mut", [["get", "model.businessServerEvents", ["loc", [null, [48, 10], [48, 36]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [49, 13], [49, 21]]]]], [], []]], ["loc", [null, [45, 2], [50, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.businessServerEvents", ["loc", [null, [51, 38], [51, 71]]]]], [], []], "pointing", "pointing"], ["loc", [null, [51, 2], [51, 93]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [57, 16], [57, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [58, 13], [58, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [60, 10], [60, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [61, 14], [61, 38]]]], "error", ""], [], ["loc", [null, [61, 10], [61, 50]]]], "label", ["subexpr", "t", ["forms.fd-interface-edit-form.description-caption"], [], ["loc", [null, [62, 10], [62, 64]]]]], ["loc", [null, [55, 2], [63, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [64, 38], [64, 62]]]]], [], []], "pointing", "pointing"], ["loc", [null, [64, 2], [64, 84]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [70, 16], [70, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [71, 13], [71, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [73, 10], [73, 20]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [74, 14], [74, 31]]]], "error", ""], [], ["loc", [null, [74, 10], [74, 43]]]], "label", ["subexpr", "t", ["forms.fd-interface-edit-form.name-caption"], [], ["loc", [null, [75, 10], [75, 57]]]]], ["loc", [null, [68, 2], [76, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [77, 38], [77, 55]]]]], [], []], "pointing", "pointing"], ["loc", [null, [77, 2], [77, 77]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [83, 16], [83, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [84, 13], [84, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.namespacePostfix", ["loc", [null, [86, 10], [86, 32]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.namespacePostfix", ["loc", [null, [87, 14], [87, 43]]]], "error", ""], [], ["loc", [null, [87, 10], [87, 55]]]], "label", ["subexpr", "t", ["forms.fd-interface-edit-form.namespacePostfix-caption"], [], ["loc", [null, [88, 10], [88, 69]]]]], ["loc", [null, [81, 2], [89, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.namespacePostfix", ["loc", [null, [90, 38], [90, 67]]]]], [], []], "pointing", "pointing"], ["loc", [null, [90, 2], [90, 89]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [96, 16], [96, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [97, 13], [97, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.packet", ["loc", [null, [99, 10], [99, 22]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.packet", ["loc", [null, [100, 14], [100, 33]]]], "error", ""], [], ["loc", [null, [100, 10], [100, 45]]]], "label", ["subexpr", "t", ["forms.fd-interface-edit-form.packet-caption"], [], ["loc", [null, [101, 10], [101, 59]]]]], ["loc", [null, [94, 2], [102, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.packet", ["loc", [null, [103, 38], [103, 57]]]]], [], []], "pointing", "pointing"], ["loc", [null, [103, 2], [103, 79]]]], ["inline", "t", ["forms.fd-interface-edit-form.pBMembers-caption"], [], ["loc", [null, [107, 9], [107, 63]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [110, 13], [110, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.pBMembers", ["loc", [null, [111, 10], [111, 25]]]]], [], []]], ["loc", [null, [108, 2], [112, 4]]]], ["inline", "t", ["forms.fd-interface-edit-form.publishToEBSD-caption"], [], ["loc", [null, [116, 9], [116, 67]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [119, 13], [119, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.publishToEBSD", ["loc", [null, [120, 10], [120, 29]]]]], [], []]], ["loc", [null, [117, 2], [121, 4]]]], ["inline", "t", ["forms.fd-interface-edit-form.attributes-caption"], [], ["loc", [null, [125, 9], [125, 64]]]], ["inline", "flexberry-groupedit", [], ["componentName", "attributesGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [129, 24], [129, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.attributes", ["loc", [null, [130, 20], [130, 57]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.attributes", ["loc", [null, [131, 12], [131, 28]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [132, 13], [132, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.attributes", ["loc", [null, [134, 14], [134, 37]]]], "error", ""], [], ["loc", [null, [134, 10], [134, 49]]]]], ["loc", [null, [126, 2], [135, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.attributes", ["loc", [null, [136, 38], [136, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [136, 2], [136, 83]]]], ["inline", "t", ["forms.fd-interface-edit-form.methods-caption"], [], ["loc", [null, [140, 9], [140, 61]]]], ["inline", "flexberry-groupedit", [], ["componentName", "methodsGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [144, 24], [144, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.methods", ["loc", [null, [145, 20], [145, 54]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.methods", ["loc", [null, [146, 12], [146, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [147, 13], [147, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.methods", ["loc", [null, [149, 14], [149, 34]]]], "error", ""], [], ["loc", [null, [149, 10], [149, 46]]]]], ["loc", [null, [141, 2], [150, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.methods", ["loc", [null, [151, 38], [151, 58]]]]], [], []], "pointing", "pointing"], ["loc", [null, [151, 2], [151, 80]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/fd-list-form-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 8
              },
              "end": {
                "line": 20,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-list-form-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [17, 66], [17, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [18, 12], [18, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-list-form-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [13, 60], [13, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [14, 10], [14, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [16, 18], [16, 29]]]]], [], 0, null, ["loc", [null, [16, 8], [20, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 196,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-list-form-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var element7 = dom.childAt(element2, [11]);
        var element8 = dom.childAt(element2, [13]);
        var element9 = dom.childAt(element2, [15]);
        var element10 = dom.childAt(element2, [17]);
        var element11 = dom.childAt(element2, [19]);
        var element12 = dom.childAt(element2, [21]);
        var element13 = dom.childAt(element2, [23]);
        var element14 = dom.childAt(element2, [25]);
        var element15 = dom.childAt(element2, [27]);
        var element16 = dom.childAt(element2, [29]);
        var element17 = dom.childAt(element2, [31]);
        var element18 = dom.childAt(element2, [33]);
        var morphs = new Array(38);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createMorphAt(element2, 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(element3, 1, 1);
        morphs[5] = dom.createElementMorph(element4);
        morphs[6] = dom.createMorphAt(element4, 1, 1);
        morphs[7] = dom.createMorphAt(element5, 1, 1);
        morphs[8] = dom.createMorphAt(element5, 3, 3);
        morphs[9] = dom.createMorphAt(element6, 1, 1);
        morphs[10] = dom.createMorphAt(element6, 3, 3);
        morphs[11] = dom.createMorphAt(element7, 1, 1);
        morphs[12] = dom.createMorphAt(element7, 3, 3);
        morphs[13] = dom.createMorphAt(dom.childAt(element8, [1]), 0, 0);
        morphs[14] = dom.createMorphAt(element8, 3, 3);
        morphs[15] = dom.createMorphAt(dom.childAt(element9, [1]), 0, 0);
        morphs[16] = dom.createMorphAt(element9, 3, 3);
        morphs[17] = dom.createMorphAt(element10, 1, 1);
        morphs[18] = dom.createMorphAt(element10, 3, 3);
        morphs[19] = dom.createMorphAt(element11, 1, 1);
        morphs[20] = dom.createMorphAt(element11, 3, 3);
        morphs[21] = dom.createMorphAt(dom.childAt(element12, [1]), 0, 0);
        morphs[22] = dom.createMorphAt(element12, 3, 3);
        morphs[23] = dom.createMorphAt(dom.childAt(element13, [1]), 0, 0);
        morphs[24] = dom.createMorphAt(element13, 3, 3);
        morphs[25] = dom.createMorphAt(element14, 1, 1);
        morphs[26] = dom.createMorphAt(element14, 3, 3);
        morphs[27] = dom.createMorphAt(dom.childAt(element15, [1]), 0, 0);
        morphs[28] = dom.createMorphAt(element15, 3, 3);
        morphs[29] = dom.createMorphAt(dom.childAt(element16, [1]), 0, 0);
        morphs[30] = dom.createMorphAt(element16, 3, 3);
        morphs[31] = dom.createMorphAt(element16, 5, 5);
        morphs[32] = dom.createMorphAt(dom.childAt(element17, [1]), 0, 0);
        morphs[33] = dom.createMorphAt(element17, 3, 3);
        morphs[34] = dom.createMorphAt(element17, 5, 5);
        morphs[35] = dom.createMorphAt(dom.childAt(element18, [1]), 0, 0);
        morphs[36] = dom.createMorphAt(element18, 3, 3);
        morphs[37] = dom.createMorphAt(element18, 5, 5);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-list-form-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 66]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [3, 47], [3, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [4, 26], [4, 31]]]]], [], []]], ["loc", [null, [4, 2], [4, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [7, 43], [7, 55]]]]], [], []]], ["loc", [null, [7, 6], [7, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [12, 16], [12, 24]]]]], [], 0, null, ["loc", [null, [12, 6], [21, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [22, 59], [22, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [23, 8], [23, 49]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [30, 16], [30, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [31, 13], [31, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [33, 10], [33, 20]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [34, 14], [34, 31]]]], "error", ""], [], ["loc", [null, [34, 10], [34, 43]]]], "label", ["subexpr", "t", ["forms.fd-list-form-edit-form.name-caption"], [], ["loc", [null, [35, 10], [35, 57]]]]], ["loc", [null, [28, 2], [36, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [37, 38], [37, 55]]]]], [], []], "pointing", "pointing"], ["loc", [null, [37, 2], [37, 77]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [43, 16], [43, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [44, 13], [44, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [46, 10], [46, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [47, 14], [47, 38]]]], "error", ""], [], ["loc", [null, [47, 10], [47, 50]]]], "label", ["subexpr", "t", ["forms.fd-list-form-edit-form.description-caption"], [], ["loc", [null, [48, 10], [48, 64]]]]], ["loc", [null, [41, 2], [49, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [50, 38], [50, 62]]]]], [], []], "pointing", "pointing"], ["loc", [null, [50, 2], [50, 84]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [56, 16], [56, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [57, 13], [57, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.caption", ["loc", [null, [59, 10], [59, 23]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.caption", ["loc", [null, [60, 14], [60, 34]]]], "error", ""], [], ["loc", [null, [60, 10], [60, 46]]]], "label", ["subexpr", "t", ["forms.fd-list-form-edit-form.caption-caption"], [], ["loc", [null, [61, 10], [61, 60]]]]], ["loc", [null, [54, 2], [62, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.caption", ["loc", [null, [63, 38], [63, 58]]]]], [], []], "pointing", "pointing"], ["loc", [null, [63, 2], [63, 80]]]], ["inline", "t", ["forms.fd-list-form-edit-form.generateDependedForm-caption"], [], ["loc", [null, [67, 9], [67, 74]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [70, 13], [70, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.generateDependedForm", ["loc", [null, [71, 10], [71, 36]]]]], [], []]], ["loc", [null, [68, 2], [72, 4]]]], ["inline", "t", ["forms.fd-list-form-edit-form.fixDependedForm-caption"], [], ["loc", [null, [76, 9], [76, 69]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [79, 13], [79, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.fixDependedForm", ["loc", [null, [80, 10], [80, 31]]]]], [], []]], ["loc", [null, [77, 2], [81, 4]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [87, 16], [87, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [88, 13], [88, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.packet", ["loc", [null, [90, 10], [90, 22]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.packet", ["loc", [null, [91, 14], [91, 33]]]], "error", ""], [], ["loc", [null, [91, 10], [91, 45]]]], "label", ["subexpr", "t", ["forms.fd-list-form-edit-form.packet-caption"], [], ["loc", [null, [92, 10], [92, 59]]]]], ["loc", [null, [85, 2], [93, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.packet", ["loc", [null, [94, 38], [94, 57]]]]], [], []], "pointing", "pointing"], ["loc", [null, [94, 2], [94, 79]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [100, 16], [100, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [101, 13], [101, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.namespacePostfix", ["loc", [null, [103, 10], [103, 32]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.namespacePostfix", ["loc", [null, [104, 14], [104, 43]]]], "error", ""], [], ["loc", [null, [104, 10], [104, 55]]]], "label", ["subexpr", "t", ["forms.fd-list-form-edit-form.namespacePostfix-caption"], [], ["loc", [null, [105, 10], [105, 69]]]]], ["loc", [null, [98, 2], [106, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.namespacePostfix", ["loc", [null, [107, 38], [107, 67]]]]], [], []], "pointing", "pointing"], ["loc", [null, [107, 2], [107, 89]]]], ["inline", "t", ["forms.fd-list-form-edit-form.pBCustomAttributes-caption"], [], ["loc", [null, [111, 9], [111, 72]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [114, 13], [114, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.pBCustomAttributes", ["loc", [null, [115, 10], [115, 34]]]]], [], []]], ["loc", [null, [112, 2], [116, 4]]]], ["inline", "t", ["forms.fd-list-form-edit-form.pBMembers-caption"], [], ["loc", [null, [120, 9], [120, 63]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [123, 13], [123, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.pBMembers", ["loc", [null, [124, 10], [124, 25]]]]], [], []]], ["loc", [null, [121, 2], [125, 4]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [131, 16], [131, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [132, 13], [132, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.scriptName", ["loc", [null, [134, 10], [134, 26]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.scriptName", ["loc", [null, [135, 14], [135, 37]]]], "error", ""], [], ["loc", [null, [135, 10], [135, 49]]]], "label", ["subexpr", "t", ["forms.fd-list-form-edit-form.scriptName-caption"], [], ["loc", [null, [136, 10], [136, 63]]]]], ["loc", [null, [129, 2], [137, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.scriptName", ["loc", [null, [138, 38], [138, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [138, 2], [138, 83]]]], ["inline", "t", ["forms.fd-list-form-edit-form.publishToEBSD-caption"], [], ["loc", [null, [142, 9], [142, 67]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [145, 13], [145, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.publishToEBSD", ["loc", [null, [146, 10], [146, 29]]]]], [], []]], ["loc", [null, [143, 2], [147, 4]]]], ["inline", "t", ["forms.fd-list-form-edit-form.attributes-caption"], [], ["loc", [null, [151, 9], [151, 64]]]], ["inline", "flexberry-groupedit", [], ["componentName", "attributesGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [155, 24], [155, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.attributes", ["loc", [null, [156, 20], [156, 57]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.attributes", ["loc", [null, [157, 12], [157, 28]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [158, 13], [158, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.attributes", ["loc", [null, [160, 14], [160, 37]]]], "error", ""], [], ["loc", [null, [160, 10], [160, 49]]]]], ["loc", [null, [152, 2], [161, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.attributes", ["loc", [null, [162, 38], [162, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [162, 2], [162, 83]]]], ["inline", "t", ["forms.fd-list-form-edit-form.formViews-caption"], [], ["loc", [null, [166, 9], [166, 63]]]], ["inline", "flexberry-groupedit", [], ["componentName", "formViewsGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [170, 24], [170, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.formViews", ["loc", [null, [171, 20], [171, 56]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.formViews", ["loc", [null, [172, 12], [172, 27]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [173, 13], [173, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.formViews", ["loc", [null, [175, 14], [175, 36]]]], "error", ""], [], ["loc", [null, [175, 10], [175, 48]]]]], ["loc", [null, [167, 2], [176, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.formViews", ["loc", [null, [177, 38], [177, 60]]]]], [], []], "pointing", "pointing"], ["loc", [null, [177, 2], [177, 82]]]], ["inline", "t", ["forms.fd-list-form-edit-form.methods-caption"], [], ["loc", [null, [181, 9], [181, 61]]]], ["inline", "flexberry-groupedit", [], ["componentName", "methodsGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [185, 24], [185, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.methods", ["loc", [null, [186, 20], [186, 54]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.methods", ["loc", [null, [187, 12], [187, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [188, 13], [188, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.methods", ["loc", [null, [190, 14], [190, 34]]]], "error", ""], [], ["loc", [null, [190, 10], [190, 46]]]]], ["loc", [null, [182, 2], [191, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.methods", ["loc", [null, [192, 38], [192, 58]]]]], [], []], "pointing", "pointing"], ["loc", [null, [192, 2], [192, 80]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/fd-listform-constructor", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 3,
                "column": 2
              },
              "end": {
                "line": 11,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-listform-constructor.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [9, 14], [9, 26]]]]], [], []]], ["loc", [null, [4, 4], [10, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-listform-constructor.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [3, 10], [3, 23]]]]], [], 0, null, ["loc", [null, [3, 2], [11, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 21,
                "column": 8
              },
              "end": {
                "line": 25,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-listform-constructor.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "button");
            dom.setAttribute(el1, "class", "ui button save-close-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element13 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element13);
            morphs[1] = dom.createMorphAt(element13, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["save", true], [], ["loc", [null, [22, 68], [22, 90]]]], ["inline", "t", ["forms.edit-form.saveAndClose-button-text"], [], ["loc", [null, [23, 12], [23, 60]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 17,
              "column": 6
            },
            "end": {
              "line": 26,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-listform-constructor.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element14 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element14);
          morphs[1] = dom.createMorphAt(element14, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [18, 60], [18, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [19, 10], [19, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [21, 18], [21, 29]]]]], [], 0, null, ["loc", [null, [21, 8], [25, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 41,
              "column": 10
            },
            "end": {
              "line": 43,
              "column": 10
            }
          },
          "moduleName": "dummy/templates/fd-listform-constructor.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("            ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("th");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element12 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element12, 'class');
          morphs[1] = dom.createElementMorph(element12);
          morphs[2] = dom.createMorphAt(element12, 0, 0);
          return morphs;
        },
        statements: [["attribute", "class", ["subexpr", "if", [["subexpr", "eq", [["get", "selectedColumn", ["loc", [null, [42, 31], [42, 45]]]], ["get", "column", ["loc", [null, [42, 46], [42, 52]]]]], [], ["loc", [null, [42, 27], [42, 53]]]], "fd-selected"], [], ["loc", [null, [42, 22], [42, 69]]]]], ["element", "action", ["selectColumn", ["get", "column", ["loc", [null, [42, 94], [42, 100]]]]], [], ["loc", [null, [42, 70], [42, 102]]]], ["content", "column.caption", ["loc", [null, [42, 103], [42, 121]]]]],
        locals: ["column"],
        templates: []
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 49,
                "column": 12
              },
              "end": {
                "line": 51,
                "column": 12
              }
            },
            "moduleName": "dummy/templates/fd-listform-constructor.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            var el2 = dom.createTextNode(" ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element11 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element11, 'class');
            morphs[1] = dom.createElementMorph(element11);
            return morphs;
          },
          statements: [["attribute", "class", ["subexpr", "if", [["subexpr", "eq", [["get", "selectedColumn", ["loc", [null, [50, 33], [50, 47]]]], ["get", "column", ["loc", [null, [50, 48], [50, 54]]]]], [], ["loc", [null, [50, 29], [50, 55]]]], "fd-selected"], [], ["loc", [null, [50, 24], [50, 71]]]]], ["element", "action", ["selectColumn", ["get", "column", ["loc", [null, [50, 96], [50, 102]]]]], [], ["loc", [null, [50, 72], [50, 104]]]]],
          locals: ["column"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 47,
              "column": 8
            },
            "end": {
              "line": 53,
              "column": 8
            }
          },
          "moduleName": "dummy/templates/fd-listform-constructor.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("          ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("          ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["block", "each", [["get", "columns", ["loc", [null, [49, 20], [49, 27]]]]], [], 0, null, ["loc", [null, [49, 12], [51, 21]]]]],
        locals: ["column"],
        templates: [child0]
      };
    })();
    var child4 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 61,
                "column": 2
              },
              "end": {
                "line": 70,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-listform-constructor.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["forms.fd-listform-constructor.form-config-panel.remove-approve"], [], ["loc", [null, [69, 4], [69, 74]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 60,
              "column": 0
            },
            "end": {
              "line": 71,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-listform-constructor.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "modal-dialog", [], ["title", ["subexpr", "t", ["forms.fd-listform-constructor.form-config-panel.remove-column"], [], ["loc", [null, [62, 10], [62, 77]]]], "ok", ["subexpr", "action", ["removeSelectedColumn", true], [], ["loc", [null, [63, 7], [63, 43]]]], "settings", ["subexpr", "hash", [], ["onHidden", ["subexpr", "action", [["get", "set", ["loc", [null, [65, 23], [65, 26]]]], "_showModalDialog", false], [], ["loc", [null, [65, 15], [65, 52]]]], "context", ".pusher:first"], ["loc", [null, [64, 13], [67, 5]]]]], 0, null, ["loc", [null, [61, 2], [70, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child5 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 81,
                  "column": 6
                },
                "end": {
                  "line": 97,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/fd-listform-constructor.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui small dividing header");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
              return morphs;
            },
            statements: [["inline", "t", ["forms.fd-editform-constructor.form-config-panel.form-properties-header"], [], ["loc", [null, [83, 10], [83, 88]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["forms.fd-listform-constructor.name"], [], ["loc", [null, [89, 24], [89, 64]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [90, 21], [90, 29]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "formClass.name", ["loc", [null, [92, 18], [92, 32]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-listform-constructor.name"], [], ["loc", [null, [93, 18], [93, 58]]]]], ["loc", [null, [87, 10], [94, 12]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 99,
                  "column": 6
                },
                "end": {
                  "line": 109,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/fd-listform-constructor.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui small dividing header");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(2);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", ["forms.fd-listform-constructor.form-config-panel.control-properties-header"], [], ["loc", [null, [101, 10], [101, 91]]]], ["inline", "fd-visual-edit-control-tree", [], ["selectedItem", ["subexpr", "@mut", [["get", "selectedColumn", ["loc", [null, [104, 23], [104, 37]]]]], [], []], "model", ["subexpr", "@mut", [["get", "model", ["loc", [null, [105, 16], [105, 21]]]]], [], []], "items", ["subexpr", "@mut", [["get", "columns", ["loc", [null, [106, 16], [106, 23]]]]], [], []], "typeForm", "listform"], ["loc", [null, [103, 8], [108, 10]]]]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 143,
                    "column": 8
                  },
                  "end": {
                    "line": 176,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/fd-listform-constructor.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "ui small dividing header");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "ui segments panel-wrapper");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("div");
                dom.setAttribute(el2, "class", "field");
                var el3 = dom.createTextNode("\n              ");
                dom.appendChild(el2, el3);
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("\n            ");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("div");
                dom.setAttribute(el2, "class", "ui segment overflow-panel");
                var el3 = dom.createTextNode("\n              ");
                dom.appendChild(el2, el3);
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("\n            ");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "type", "button");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("button");
                dom.setAttribute(el1, "class", "ui button");
                dom.setAttribute(el1, "type", "button");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element0 = dom.childAt(fragment, [3]);
                var element1 = dom.childAt(fragment, [5]);
                var element2 = dom.childAt(fragment, [7]);
                var morphs = new Array(8);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
                morphs[1] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);
                morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);
                morphs[3] = dom.createAttrMorph(element1, 'class');
                morphs[4] = dom.createElementMorph(element1);
                morphs[5] = dom.createMorphAt(element1, 1, 1);
                morphs[6] = dom.createElementMorph(element2);
                morphs[7] = dom.createMorphAt(element2, 1, 1);
                return morphs;
              },
              statements: [["inline", "t", ["forms.fd-editform-constructor.form-config-panel.attributes-control"], [], ["loc", [null, [145, 12], [145, 86]]]], ["inline", "flexberry-textbox", [], ["placeholder", ["subexpr", "t", ["forms.fd-editform-constructor.form-config-panel.search"], [], ["loc", [null, [151, 28], [151, 88]]]], "value", ["subexpr", "@mut", [["get", "searchTermTree", ["loc", [null, [152, 22], [152, 36]]]]], [], []]], ["loc", [null, [149, 14], [153, 16]]]], ["inline", "ember-jstree", [], ["actionReceiver", ["subexpr", "@mut", [["get", "actionReceiverNotUsedAttributesTree", ["loc", [null, [158, 31], [158, 66]]]]], [], []], "selectedNodes", ["subexpr", "@mut", [["get", "selectedNodesNotUsedAttributesTree", ["loc", [null, [159, 30], [159, 64]]]]], [], []], "data", ["subexpr", "@mut", [["get", "dataNotUsedAttributesTree", ["loc", [null, [160, 21], [160, 46]]]]], [], []], "plugins", ["subexpr", "@mut", [["get", "pluginsTree", ["loc", [null, [161, 24], [161, 35]]]]], [], []], "searchTerm", ["subexpr", "@mut", [["get", "searchTermTree", ["loc", [null, [162, 27], [162, 41]]]]], [], []], "searchOptions", ["subexpr", "@mut", [["get", "searchOptionsTree", ["loc", [null, [163, 30], [163, 47]]]]], [], []], "typesOptions", ["subexpr", "@mut", [["get", "typesOptionsTree", ["loc", [null, [164, 29], [164, 45]]]]], [], []], "treeObject", ["subexpr", "@mut", [["get", "treeObjectNotUsedAttributesTree", ["loc", [null, [165, 27], [165, 58]]]]], [], []], "eventDidBecomeReady", ["subexpr", "action", ["handleTreeDidBecomeReady"], [], ["loc", [null, [166, 36], [166, 71]]]]], ["loc", [null, [156, 14], [167, 16]]]], ["attribute", "class", ["concat", ["ui button ", ["get", "_applyDisabled", ["loc", [null, [170, 37], [170, 51]]]]]]], ["element", "action", ["setAttributeInControl"], ["on", "click"], ["loc", [null, [170, 69], [170, 115]]]], ["inline", "t", ["forms.fd-editform-constructor.form-config-panel.apply"], [], ["loc", [null, [171, 12], [171, 73]]]], ["element", "action", ["deleteEmptyControl"], ["on", "click"], ["loc", [null, [173, 50], [173, 93]]]], ["inline", "t", ["forms.fd-editform-constructor.form-config-panel.cancel"], [], ["loc", [null, [174, 12], [174, 74]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 111,
                  "column": 6
                },
                "end": {
                  "line": 177,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/fd-listform-constructor.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui small dividing header");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("button");
              dom.setAttribute(el2, "class", "ui button");
              dom.setAttribute(el2, "type", "button");
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n          ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("button");
              dom.setAttribute(el2, "class", "ui button");
              dom.setAttribute(el2, "type", "button");
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              var el3 = dom.createComment("");
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n          ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "ui small dividing header");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "equal width fields");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("div");
              dom.setAttribute(el2, "class", "field");
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("button");
              dom.setAttribute(el3, "class", "ui icon button");
              dom.setAttribute(el3, "type", "button");
              var el4 = dom.createTextNode("\n              ");
              dom.appendChild(el3, el4);
              var el4 = dom.createElement("i");
              dom.setAttribute(el4, "class", "left arrow icon");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n            ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("button");
              dom.setAttribute(el3, "class", "ui icon button");
              dom.setAttribute(el3, "type", "button");
              var el4 = dom.createTextNode("\n              ");
              dom.appendChild(el3, el4);
              var el4 = dom.createElement("i");
              dom.setAttribute(el4, "class", "right arrow icon");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n            ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n          ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createElement("div");
              dom.setAttribute(el2, "class", "field");
              var el3 = dom.createTextNode("\n            ");
              dom.appendChild(el2, el3);
              var el3 = dom.createElement("button");
              dom.setAttribute(el3, "class", "ui button");
              dom.setAttribute(el3, "type", "button");
              var el4 = dom.createTextNode("\n              ");
              dom.appendChild(el3, el4);
              var el4 = dom.createComment("");
              dom.appendChild(el3, el4);
              var el4 = dom.createTextNode("\n            ");
              dom.appendChild(el3, el4);
              dom.appendChild(el2, el3);
              var el3 = dom.createTextNode("\n          ");
              dom.appendChild(el2, el3);
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element3 = dom.childAt(fragment, [3, 1]);
              var element4 = dom.childAt(fragment, [5, 1]);
              var element5 = dom.childAt(fragment, [9]);
              var element6 = dom.childAt(element5, [1]);
              var element7 = dom.childAt(element6, [1]);
              var element8 = dom.childAt(element6, [3]);
              var element9 = dom.childAt(element5, [3, 1]);
              var morphs = new Array(14);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              morphs[1] = dom.createElementMorph(element3);
              morphs[2] = dom.createMorphAt(element3, 1, 1);
              morphs[3] = dom.createElementMorph(element4);
              morphs[4] = dom.createMorphAt(element4, 1, 1);
              morphs[5] = dom.createMorphAt(dom.childAt(fragment, [7]), 1, 1);
              morphs[6] = dom.createAttrMorph(element7, 'disabled');
              morphs[7] = dom.createElementMorph(element7);
              morphs[8] = dom.createAttrMorph(element8, 'disabled');
              morphs[9] = dom.createElementMorph(element8);
              morphs[10] = dom.createAttrMorph(element9, 'disabled');
              morphs[11] = dom.createElementMorph(element9);
              morphs[12] = dom.createMorphAt(element9, 1, 1);
              morphs[13] = dom.createMorphAt(fragment, 11, 11, contextualElement);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["inline", "t", ["forms.fd-listform-constructor.form-config-panel.add-columns-header"], [], ["loc", [null, [113, 10], [113, 84]]]], ["element", "action", ["addColumn"], [], ["loc", [null, [116, 50], [116, 72]]]], ["inline", "t", ["forms.fd-listform-constructor.form-config-panel.add-column"], [], ["loc", [null, [117, 12], [117, 78]]]], ["element", "action", ["addEmptyControl"], [], ["loc", [null, [121, 50], [121, 78]]]], ["inline", "t", ["forms.fd-listform-constructor.form-config-panel.select-column"], [], ["loc", [null, [122, 12], [122, 81]]]], ["inline", "t", ["forms.fd-listform-constructor.form-config-panel.re-move-columns-header"], [], ["loc", [null, [126, 10], [126, 88]]]], ["attribute", "disabled", ["subexpr", "or", [["subexpr", "not", [["get", "selectedColumn", ["loc", [null, [130, 76], [130, 90]]]]], [], ["loc", [null, [130, 71], [130, 91]]]], ["get", "_selectedIsFirst", ["loc", [null, [130, 92], [130, 108]]]]], [], ["loc", [null, [130, 66], [130, 110]]]]], ["element", "action", ["sortSelectedColumn", -1], [], ["loc", [null, [130, 111], [130, 145]]]], ["attribute", "disabled", ["subexpr", "or", [["subexpr", "not", [["get", "selectedColumn", ["loc", [null, [133, 76], [133, 90]]]]], [], ["loc", [null, [133, 71], [133, 91]]]], ["get", "_selectedIsLast", ["loc", [null, [133, 92], [133, 107]]]]], [], ["loc", [null, [133, 66], [133, 109]]]]], ["element", "action", ["sortSelectedColumn", 1], [], ["loc", [null, [133, 110], [133, 143]]]], ["attribute", "disabled", ["subexpr", "not", [["get", "selectedColumn", ["loc", [null, [138, 67], [138, 81]]]]], [], ["loc", [null, [138, 61], [138, 83]]]]], ["element", "action", ["removeSelectedColumn", false], [], ["loc", [null, [138, 84], [138, 123]]]], ["inline", "t", ["forms.fd-listform-constructor.form-config-panel.remove-column"], [], ["loc", [null, [139, 14], [139, 83]]]], ["block", "if", [["get", "_showNotUsedAttributesTree", ["loc", [null, [143, 14], [143, 40]]]]], [], 0, null, ["loc", [null, [143, 8], [176, 15]]]]],
            locals: [],
            templates: [child0]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 74,
                "column": 2
              },
              "end": {
                "line": 180,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-listform-constructor.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("form");
            dom.setAttribute(el1, "class", "ui form segment");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "ui segment");
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3, "class", "ui large header");
            var el4 = dom.createTextNode("\n          ");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n        ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n      ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element10 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createMorphAt(dom.childAt(element10, [1, 1]), 1, 1);
            morphs[1] = dom.createMorphAt(element10, 3, 3);
            morphs[2] = dom.createMorphAt(element10, 5, 5);
            morphs[3] = dom.createMorphAt(element10, 7, 7);
            return morphs;
          },
          statements: [["inline", "t", ["forms.fd-listform-constructor.caption"], [], ["loc", [null, [78, 10], [78, 55]]]], ["block", "ui-tab-segment", [], ["tab", "first", "title", ["subexpr", "t", ["forms.fd-editform-constructor.form-config-panel.form-properties-header"], [], ["loc", [null, [81, 42], [81, 118]]]], "theme", "", "active", true], 0, null, ["loc", [null, [81, 6], [97, 25]]]], ["block", "ui-tab-segment", [], ["tab", "control-properties", "title", ["subexpr", "t", ["forms.fd-listform-constructor.form-config-panel.control-properties-header"], [], ["loc", [null, [99, 55], [99, 134]]]], "theme", ""], 1, null, ["loc", [null, [99, 6], [109, 25]]]], ["block", "ui-tab-segment", [], ["tab", "actions-with-columns", "title", ["subexpr", "t", ["forms.fd-listform-constructor.form-config-panel.actions-with-columns-header"], [], ["loc", [null, [111, 57], [111, 138]]]], "theme", ""], 2, null, ["loc", [null, [111, 6], [177, 25]]]]],
          locals: [],
          templates: [child0, child1, child2]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 73,
              "column": 0
            },
            "end": {
              "line": 181,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-listform-constructor.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "fd-tabs", [], ["tabsMenuTheme", "vertical tabular", "class", "ui segments horizontal right-tabs"], 0, null, ["loc", [null, [74, 2], [180, 14]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 181,
            "column": 20
          }
        },
        "moduleName": "dummy/templates/fd-listform-constructor.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "class", "ui button disabled");
        dom.setAttribute(el4, "type", "button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "button");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui segment");
        dom.setAttribute(el2, "style", "overflow:scroll;");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("h3");
        dom.setAttribute(el3, "class", "ui header");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("img");
        dom.setAttribute(el3, "src", "assets/images/visualEditListFormTop.png");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("table");
        dom.setAttribute(el3, "class", "ui celled selectable collapsing table fd-listform");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("thead");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("tr");
        var el6 = dom.createTextNode("\n");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("tbody");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("img");
        dom.setAttribute(el3, "src", "assets/images/visualEditListFormBottom.png");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element15 = dom.childAt(fragment, [3]);
        var element16 = dom.childAt(element15, [3, 1]);
        var element17 = dom.childAt(element16, [5]);
        var element18 = dom.childAt(element15, [5]);
        var element19 = dom.childAt(element18, [5]);
        var morphs = new Array(13);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createAttrMorph(element15, 'class');
        morphs[3] = dom.createMorphAt(element15, 1, 1);
        morphs[4] = dom.createMorphAt(element16, 1, 1);
        morphs[5] = dom.createMorphAt(dom.childAt(element16, [3]), 1, 1);
        morphs[6] = dom.createElementMorph(element17);
        morphs[7] = dom.createMorphAt(element17, 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(element18, [1]), 0, 0);
        morphs[9] = dom.createMorphAt(dom.childAt(element19, [1, 1]), 1, 1);
        morphs[10] = dom.createMorphAt(dom.childAt(element19, [3]), 1, 1);
        morphs[11] = dom.createMorphAt(fragment, 5, 5, contextualElement);
        morphs[12] = dom.createMorphAt(fragment, 7, 7, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-listform-constructor.caption"], [], ["loc", [null, [1, 22], [1, 67]]]], ["block", "if", [["get", "errorMessages", ["loc", [null, [2, 6], [2, 19]]]]], [], 0, null, ["loc", [null, [2, 0], [12, 7]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [13, 47], [13, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [14, 26], [14, 31]]]]], [], []]], ["loc", [null, [14, 2], [14, 33]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [17, 16], [17, 24]]]]], [], 1, null, ["loc", [null, [17, 6], [26, 17]]]], ["inline", "t", ["forms.fd-listform-constructor.preview-mobile-variant"], [], ["loc", [null, [28, 8], [28, 68]]]], ["element", "action", ["close"], [], ["loc", [null, [30, 59], [30, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [31, 8], [31, 49]]]], ["content", "formClass.name", ["loc", [null, [36, 26], [36, 44]]]], ["block", "each", [["get", "columns", ["loc", [null, [41, 18], [41, 25]]]]], [], 2, null, ["loc", [null, [41, 10], [43, 19]]]], ["block", "each", [["get", "columns", ["loc", [null, [47, 16], [47, 23]]]]], [], 3, null, ["loc", [null, [47, 8], [53, 17]]]], ["block", "if", [["get", "_showModalDialog", ["loc", [null, [60, 6], [60, 22]]]]], [], 4, null, ["loc", [null, [60, 0], [71, 7]]]], ["block", "fd-config-panel", [], [], 5, null, ["loc", [null, [73, 0], [181, 20]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5]
    };
  })());
});
define("dummy/templates/fd-sequence-diagram-primitives-demo", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-sequence-diagram-primitives-demo.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "paper");
        var el2 = dom.createTextNode("Paper");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n\n\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-stage-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-stage-edit-form.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [10, 14], [10, 26]]]]], [], []]], ["loc", [null, [5, 4], [11, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-stage-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [4, 10], [4, 23]]]]], [], 0, null, ["loc", [null, [4, 2], [12, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 8
              },
              "end": {
                "line": 31,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-stage-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element8 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element8);
            morphs[1] = dom.createMorphAt(element8, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [28, 66], [28, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [29, 12], [29, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 32,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-stage-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element9 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element9);
          morphs[1] = dom.createMorphAt(element9, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [24, 60], [24, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [25, 10], [25, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [27, 18], [27, 29]]]]], [], 0, null, ["loc", [null, [27, 8], [31, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/fd-stage-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui segments");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui segment");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("p");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui segment");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "field");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "field");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "field");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "field");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "field");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui segments");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui segment");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("p");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui segment");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "field");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "field");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "field");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "field");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n\n      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui segments");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui segment");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("p");
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui segment");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "field");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1]);
          var element4 = dom.childAt(element3, [3]);
          var element5 = dom.childAt(fragment, [3]);
          var element6 = dom.childAt(element5, [3]);
          var element7 = dom.childAt(fragment, [5]);
          var morphs = new Array(13);
          morphs[0] = dom.createMorphAt(dom.childAt(element3, [1, 1]), 0, 0);
          morphs[1] = dom.createMorphAt(dom.childAt(element4, [1]), 1, 1);
          morphs[2] = dom.createMorphAt(dom.childAt(element4, [3]), 1, 1);
          morphs[3] = dom.createMorphAt(dom.childAt(element4, [5]), 1, 1);
          morphs[4] = dom.createMorphAt(dom.childAt(element4, [7]), 1, 1);
          morphs[5] = dom.createMorphAt(dom.childAt(element4, [9]), 1, 1);
          morphs[6] = dom.createMorphAt(dom.childAt(element5, [1, 1]), 0, 0);
          morphs[7] = dom.createMorphAt(dom.childAt(element6, [1]), 1, 1);
          morphs[8] = dom.createMorphAt(dom.childAt(element6, [3]), 1, 1);
          morphs[9] = dom.createMorphAt(dom.childAt(element6, [5]), 1, 1);
          morphs[10] = dom.createMorphAt(dom.childAt(element6, [7]), 1, 1);
          morphs[11] = dom.createMorphAt(dom.childAt(element7, [1, 1]), 0, 0);
          morphs[12] = dom.createMorphAt(dom.childAt(element7, [3, 1]), 1, 1);
          return morphs;
        },
        statements: [["inline", "t", ["forms.fd-stage-edit-form.ember.frontend.caption"], [], ["loc", [null, [106, 13], [106, 68]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [111, 26], [111, 70]]]], "value", ["subexpr", "@mut", [["get", "moduleSetting.FrontendGitRepoUrl", ["loc", [null, [112, 20], [112, 52]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [113, 23], [113, 31]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.ember.frontend.git-url"], [], ["loc", [null, [114, 20], [114, 73]]]]], ["loc", [null, [110, 12], [115, 14]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [119, 26], [119, 70]]]], "value", ["subexpr", "@mut", [["get", "moduleSetting.FrontendLogin", ["loc", [null, [120, 20], [120, 47]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [121, 23], [121, 31]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.ember.frontend.login"], [], ["loc", [null, [122, 20], [122, 71]]]]], ["loc", [null, [118, 12], [123, 14]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [127, 26], [127, 70]]]], "value", ["subexpr", "@mut", [["get", "moduleSetting.FrontendPassword", ["loc", [null, [128, 20], [128, 50]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [129, 23], [129, 31]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.ember.frontend.password"], [], ["loc", [null, [130, 20], [130, 74]]]]], ["loc", [null, [126, 12], [131, 14]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [135, 26], [135, 70]]]], "value", ["subexpr", "@mut", [["get", "moduleSetting.FrontendBranch", ["loc", [null, [136, 20], [136, 48]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [137, 23], [137, 31]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.ember.frontend.branch"], [], ["loc", [null, [138, 20], [138, 72]]]]], ["loc", [null, [134, 12], [139, 14]]]], ["inline", "flexberry-checkbox", [], ["label", ["subexpr", "t", ["forms.fd-stage-edit-form.ember.frontend.publish"], [], ["loc", [null, [143, 20], [143, 73]]]], "value", ["subexpr", "@mut", [["get", "moduleSetting.FrontendPublishGh", ["loc", [null, [144, 20], [144, 51]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [145, 23], [145, 31]]]]], [], []]], ["loc", [null, [142, 12], [146, 14]]]], ["inline", "t", ["forms.fd-stage-edit-form.ember.backend.caption"], [], ["loc", [null, [153, 13], [153, 67]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [158, 26], [158, 70]]]], "value", ["subexpr", "@mut", [["get", "moduleSetting.BackendGitRepoUrl", ["loc", [null, [159, 20], [159, 51]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [160, 23], [160, 31]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.ember.backend.git-url"], [], ["loc", [null, [161, 20], [161, 72]]]]], ["loc", [null, [157, 12], [162, 14]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [166, 26], [166, 70]]]], "value", ["subexpr", "@mut", [["get", "moduleSetting.BackendLogin", ["loc", [null, [167, 20], [167, 46]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [168, 23], [168, 31]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.ember.backend.login"], [], ["loc", [null, [169, 20], [169, 70]]]]], ["loc", [null, [165, 12], [170, 14]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [174, 26], [174, 70]]]], "value", ["subexpr", "@mut", [["get", "moduleSetting.BackendPassword", ["loc", [null, [175, 20], [175, 49]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [176, 23], [176, 31]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.ember.backend.password"], [], ["loc", [null, [177, 20], [177, 73]]]]], ["loc", [null, [173, 12], [178, 14]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [182, 26], [182, 70]]]], "value", ["subexpr", "@mut", [["get", "moduleSetting.BackendBranch", ["loc", [null, [183, 20], [183, 47]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [184, 23], [184, 31]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.ember.backend.branch"], [], ["loc", [null, [185, 20], [185, 71]]]]], ["loc", [null, [181, 12], [186, 14]]]], ["inline", "t", ["forms.fd-stage-edit-form.ember.mobile.caption"], [], ["loc", [null, [193, 13], [193, 66]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "moduleSetting.GenerateCordova", ["loc", [null, [198, 20], [198, 49]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [199, 23], [199, 31]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.ember.mobile.cordova"], [], ["loc", [null, [200, 20], [200, 71]]]]], ["loc", [null, [197, 12], [201, 14]]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 209,
              "column": 4
            },
            "end": {
              "line": 233,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/fd-stage-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui segments");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui segment");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "field");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1, 1]);
          var element2 = dom.childAt(element1, [3]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);
          morphs[1] = dom.createAttrMorph(element2, 'class');
          morphs[2] = dom.createMorphAt(element2, 1, 1);
          return morphs;
        },
        statements: [["inline", "flexberry-checkbox", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [218, 26], [218, 70]]]], "value", ["subexpr", "@mut", [["get", "moduleSetting.ProcessMethodology", ["loc", [null, [219, 20], [219, 52]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [220, 23], [220, 31]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.bpm.process-methodology"], [], ["loc", [null, [221, 20], [221, 74]]]]], ["loc", [null, [217, 12], [222, 14]]]], ["attribute", "class", ["concat", ["field ", ["subexpr", "if", [["subexpr", "not", [["get", "moduleSetting.ProcessMethodology", ["loc", [null, [224, 38], [224, 70]]]]], [], ["loc", [null, [224, 33], [224, 71]]]], " disabled"], [], ["loc", [null, [224, 28], [224, 85]]]]]]], ["inline", "flexberry-field", [], ["value", ["subexpr", "@mut", [["get", "moduleSetting.ProcessConsoleAddress", ["loc", [null, [226, 20], [226, 55]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [227, 23], [227, 31]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.bpm.console-address"], [], ["loc", [null, [228, 20], [228, 70]]]]], ["loc", [null, [225, 12], [229, 14]]]]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 246,
                "column": 12
              },
              "end": {
                "line": 253,
                "column": 12
              }
            },
            "moduleName": "dummy/templates/fd-stage-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-dropdown", [], ["value", ["subexpr", "if", [["subexpr", "await", [["get", "_storageType", ["loc", [null, [248, 33], [248, 45]]]]], [], ["loc", [null, [248, 26], [248, 46]]]], ["get", "moduleSetting.DefaultStorage", ["loc", [null, [248, 47], [248, 75]]]], ""], [], ["loc", [null, [248, 22], [248, 79]]]], "items", ["subexpr", "await", [["get", "_storageType", ["loc", [null, [249, 29], [249, 41]]]]], [], ["loc", [null, [249, 22], [249, 42]]]], "placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [250, 28], [250, 72]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [251, 25], [251, 33]]]]], [], []]], ["loc", [null, [247, 14], [252, 16]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 253,
                "column": 12
              },
              "end": {
                "line": 255,
                "column": 12
              }
            },
            "moduleName": "dummy/templates/fd-stage-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("              ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "t", ["forms.fd-stage-edit-form.orm.load"], [], ["loc", [null, [254, 14], [254, 55]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 259,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/fd-stage-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui segments");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui segment");
          var el3 = dom.createTextNode("\n          ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "field");
          var el4 = dom.createTextNode("\n            ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("label");
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("          ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1, 1, 1]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
          morphs[1] = dom.createMorphAt(element0, 3, 3);
          return morphs;
        },
        statements: [["inline", "t", ["forms.fd-stage-edit-form.orm.default-storage"], [], ["loc", [null, [245, 19], [245, 71]]]], ["block", "if", [["subexpr", "await", [["get", "_storageType", ["loc", [null, [246, 25], [246, 37]]]]], [], ["loc", [null, [246, 18], [246, 38]]]]], [], 0, 1, ["loc", [null, [246, 12], [255, 19]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 263,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-stage-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element10 = dom.childAt(fragment, [3]);
        var element11 = dom.childAt(element10, [5, 1]);
        var element12 = dom.childAt(element11, [3]);
        var element13 = dom.childAt(element10, [7]);
        var element14 = dom.childAt(element10, [9]);
        var element15 = dom.childAt(element10, [11]);
        var element16 = dom.childAt(element10, [13]);
        var element17 = dom.childAt(element10, [15]);
        var morphs = new Array(21);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createAttrMorph(element10, 'class');
        morphs[3] = dom.createMorphAt(element10, 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element10, [3, 1]), 1, 1);
        morphs[5] = dom.createMorphAt(element11, 1, 1);
        morphs[6] = dom.createElementMorph(element12);
        morphs[7] = dom.createMorphAt(element12, 1, 1);
        morphs[8] = dom.createMorphAt(element13, 1, 1);
        morphs[9] = dom.createMorphAt(element13, 3, 3);
        morphs[10] = dom.createMorphAt(element14, 1, 1);
        morphs[11] = dom.createMorphAt(element14, 3, 3);
        morphs[12] = dom.createMorphAt(element15, 1, 1);
        morphs[13] = dom.createMorphAt(element15, 3, 3);
        morphs[14] = dom.createMorphAt(element16, 1, 1);
        morphs[15] = dom.createMorphAt(element16, 3, 3);
        morphs[16] = dom.createMorphAt(element17, 1, 1);
        morphs[17] = dom.createMorphAt(element17, 3, 3);
        morphs[18] = dom.createMorphAt(dom.childAt(element10, [17]), 1, 1);
        morphs[19] = dom.createMorphAt(dom.childAt(element10, [19]), 1, 1);
        morphs[20] = dom.createMorphAt(dom.childAt(element10, [21]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-stage-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 62]]]], ["block", "if", [["get", "errorMessages", ["loc", [null, [3, 6], [3, 19]]]]], [], 0, null, ["loc", [null, [3, 0], [13, 7]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [14, 47], [14, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [15, 26], [15, 31]]]]], [], []]], ["loc", [null, [15, 2], [15, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [18, 43], [18, 55]]]]], [], []]], ["loc", [null, [18, 6], [18, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [23, 16], [23, 24]]]]], [], 1, null, ["loc", [null, [23, 6], [32, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [33, 59], [33, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [34, 8], [34, 49]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [40, 18], [40, 62]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [41, 15], [41, 23]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [43, 12], [43, 22]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [44, 16], [44, 33]]]], "error", ""], [], ["loc", [null, [44, 12], [44, 45]]]], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.name-caption"], [], ["loc", [null, [45, 12], [45, 55]]]]], ["loc", [null, [39, 4], [46, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [47, 40], [47, 57]]]]], [], []], "pointing", "pointing"], ["loc", [null, [47, 4], [47, 79]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [52, 18], [52, 62]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [53, 15], [53, 23]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [55, 12], [55, 29]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [56, 16], [56, 40]]]], "error", ""], [], ["loc", [null, [56, 12], [56, 52]]]], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.description-caption"], [], ["loc", [null, [57, 12], [57, 62]]]]], ["loc", [null, [51, 4], [58, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [59, 40], [59, 64]]]]], [], []], "pointing", "pointing"], ["loc", [null, [59, 4], [59, 86]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [64, 18], [64, 62]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [65, 15], [65, 23]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.company", ["loc", [null, [67, 12], [67, 25]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.company", ["loc", [null, [68, 16], [68, 36]]]], "error", ""], [], ["loc", [null, [68, 12], [68, 48]]]], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.company-caption"], [], ["loc", [null, [69, 12], [69, 58]]]]], ["loc", [null, [63, 4], [70, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.company", ["loc", [null, [71, 40], [71, 60]]]]], [], []], "pointing", "pointing"], ["loc", [null, [71, 4], [71, 82]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [76, 18], [76, 62]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [77, 15], [77, 23]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.copyright", ["loc", [null, [79, 12], [79, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.copyright", ["loc", [null, [80, 16], [80, 38]]]], "error", ""], [], ["loc", [null, [80, 12], [80, 50]]]], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.copyright-caption"], [], ["loc", [null, [81, 12], [81, 60]]]]], ["loc", [null, [75, 4], [82, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.copyright", ["loc", [null, [83, 40], [83, 62]]]]], [], []], "pointing", "pointing"], ["loc", [null, [83, 4], [83, 84]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [88, 18], [88, 62]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [89, 15], [89, 23]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.product", ["loc", [null, [91, 12], [91, 25]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.product", ["loc", [null, [92, 16], [92, 36]]]], "error", ""], [], ["loc", [null, [92, 12], [92, 48]]]], "label", ["subexpr", "t", ["forms.fd-stage-edit-form.product-caption"], [], ["loc", [null, [93, 12], [93, 58]]]]], ["loc", [null, [87, 4], [94, 6]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.product", ["loc", [null, [95, 40], [95, 60]]]]], [], []], "pointing", "pointing"], ["loc", [null, [95, 4], [95, 82]]]], ["block", "flexberry-toggler", [], ["caption", ["subexpr", "t", ["forms.fd-stage-edit-form.ember.caption"], [], ["loc", [null, [100, 14], [100, 58]]]], "expanded", ["subexpr", "@mut", [["get", "expandedEmber", ["loc", [null, [101, 15], [101, 28]]]]], [], []], "iconClass", ["subexpr", "@mut", [["get", "iconClass", ["loc", [null, [102, 16], [102, 25]]]]], [], []]], 2, null, ["loc", [null, [99, 4], [205, 26]]]], ["block", "flexberry-toggler", [], ["caption", ["subexpr", "t", ["forms.fd-stage-edit-form.bpm.caption"], [], ["loc", [null, [210, 14], [210, 56]]]], "expanded", ["subexpr", "@mut", [["get", "expandedBPM", ["loc", [null, [211, 15], [211, 26]]]]], [], []], "iconClass", ["subexpr", "@mut", [["get", "iconClass", ["loc", [null, [212, 16], [212, 25]]]]], [], []]], 3, null, ["loc", [null, [209, 4], [233, 26]]]], ["block", "flexberry-toggler", [], ["caption", ["subexpr", "t", ["forms.fd-stage-edit-form.orm.caption"], [], ["loc", [null, [238, 14], [238, 56]]]], "expanded", ["subexpr", "@mut", [["get", "expandedORM", ["loc", [null, [239, 15], [239, 26]]]]], [], []], "iconClass", ["subexpr", "@mut", [["get", "iconClass", ["loc", [null, [240, 16], [240, 25]]]]], [], []]], 4, null, ["loc", [null, [237, 4], [259, 26]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  })());
});
define("dummy/templates/fd-stage-list-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-stage-list-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.fd-stage-list-form.caption"], [], ["loc", [null, [2, 4], [2, 44]]]], ["inline", "flexberry-objectlistview", [], ["modelName", "fd-dev-stage", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 12], [8, 17]]]]], [], []], "createNewButton", true, "refreshButton", true, "showEditMenuItemInRow", true, "showDeleteMenuItemInRow", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [13, 12], [13, 27]]]]], [], []], "orderable", true, "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [15, 17], [15, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [16, 23], [16, 52]]]], "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [17, 10], [17, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [18, 17], [18, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [19, 18], [19, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [20, 22], [20, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [21, 20], [21, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [22, 16], [22, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [23, 17], [23, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [24, 13], [24, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [25, 13], [25, 32]]]], "componentName", "FdStageListForm"], ["loc", [null, [4, 2], [27, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-stage-list-form/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-stage-list-form/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-system-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-system-edit-form.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [10, 14], [10, 26]]]]], [], []]], ["loc", [null, [5, 4], [11, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-system-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [4, 10], [4, 23]]]]], [], 0, null, ["loc", [null, [4, 2], [12, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 8
              },
              "end": {
                "line": 31,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-system-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [28, 66], [28, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [29, 12], [29, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 32,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-system-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [24, 60], [24, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [25, 10], [25, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [27, 18], [27, 29]]]]], [], 0, null, ["loc", [null, [27, 8], [31, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 65,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-system-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [3]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var morphs = new Array(12);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createAttrMorph(element2, 'class');
        morphs[3] = dom.createMorphAt(element2, 1, 1);
        morphs[4] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[5] = dom.createMorphAt(element3, 1, 1);
        morphs[6] = dom.createElementMorph(element4);
        morphs[7] = dom.createMorphAt(element4, 1, 1);
        morphs[8] = dom.createMorphAt(element5, 1, 1);
        morphs[9] = dom.createMorphAt(element5, 3, 3);
        morphs[10] = dom.createMorphAt(element6, 1, 1);
        morphs[11] = dom.createMorphAt(element6, 3, 3);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-system-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 63]]]], ["block", "if", [["get", "errorMessages", ["loc", [null, [3, 6], [3, 19]]]]], [], 0, null, ["loc", [null, [3, 0], [13, 7]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [14, 47], [14, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [15, 26], [15, 31]]]]], [], []]], ["loc", [null, [15, 2], [15, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [18, 43], [18, 55]]]]], [], []]], ["loc", [null, [18, 6], [18, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [23, 16], [23, 24]]]]], [], 1, null, ["loc", [null, [23, 6], [32, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [33, 59], [33, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [34, 8], [34, 49]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [41, 16], [41, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [42, 13], [42, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [44, 10], [44, 20]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [45, 14], [45, 31]]]], "error", ""], [], ["loc", [null, [45, 10], [45, 43]]]], "label", ["subexpr", "t", ["forms.fd-system-edit-form.name-caption"], [], ["loc", [null, [46, 10], [46, 54]]]]], ["loc", [null, [39, 2], [47, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [48, 38], [48, 55]]]]], [], []], "pointing", "pointing"], ["loc", [null, [48, 2], [48, 77]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [54, 16], [54, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [55, 13], [55, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [57, 10], [57, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [58, 14], [58, 38]]]], "error", ""], [], ["loc", [null, [58, 10], [58, 50]]]], "label", ["subexpr", "t", ["forms.fd-system-edit-form.description-caption"], [], ["loc", [null, [59, 10], [59, 61]]]]], ["loc", [null, [52, 2], [60, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [61, 38], [61, 62]]]]], [], []], "pointing", "pointing"], ["loc", [null, [61, 2], [61, 84]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/fd-system-list-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 32,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-system-list-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.fd-system-list-form.caption"], [], ["loc", [null, [2, 4], [2, 45]]]], ["inline", "flexberry-objectlistview", [], ["modelName", "fd-dev-system", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 12], [8, 17]]]]], [], []], "createNewButton", true, "refreshButton", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [11, 12], [11, 27]]]]], [], []], "orderable", true, "enableFilters", true, "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [14, 12], [14, 19]]]]], [], []], "disableHierarchicalMode", true, "applyFilters", ["subexpr", "action", ["applyFilters"], [], ["loc", [null, [16, 17], [16, 40]]]], "resetFilters", ["subexpr", "action", ["resetFilters"], [], ["loc", [null, [17, 17], [17, 40]]]], "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [18, 17], [18, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [19, 23], [19, 52]]]], "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [20, 10], [20, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [21, 17], [21, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [22, 18], [22, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [23, 22], [23, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [24, 20], [24, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [25, 16], [25, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [26, 17], [26, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [27, 13], [27, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [28, 13], [28, 32]]]], "componentName", "FdSystemListForm"], ["loc", [null, [4, 2], [30, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-system-list-form/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-system-list-form/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-type-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 8
              },
              "end": {
                "line": 20,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-type-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [17, 66], [17, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [18, 12], [18, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-type-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [13, 60], [13, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [14, 10], [14, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [16, 18], [16, 29]]]]], [], 0, null, ["loc", [null, [16, 8], [20, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 150,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-type-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var element7 = dom.childAt(element2, [11]);
        var element8 = dom.childAt(element2, [13]);
        var element9 = dom.childAt(element2, [15]);
        var element10 = dom.childAt(element2, [17]);
        var element11 = dom.childAt(element2, [19]);
        var element12 = dom.childAt(element2, [21]);
        var element13 = dom.childAt(element2, [23]);
        var element14 = dom.childAt(element2, [25]);
        var morphs = new Array(29);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createMorphAt(element2, 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(element3, 1, 1);
        morphs[5] = dom.createElementMorph(element4);
        morphs[6] = dom.createMorphAt(element4, 1, 1);
        morphs[7] = dom.createMorphAt(element5, 1, 1);
        morphs[8] = dom.createMorphAt(element5, 3, 3);
        morphs[9] = dom.createMorphAt(element6, 1, 1);
        morphs[10] = dom.createMorphAt(element6, 3, 3);
        morphs[11] = dom.createMorphAt(element7, 1, 1);
        morphs[12] = dom.createMorphAt(element7, 3, 3);
        morphs[13] = dom.createMorphAt(element8, 1, 1);
        morphs[14] = dom.createMorphAt(element8, 3, 3);
        morphs[15] = dom.createMorphAt(element9, 1, 1);
        morphs[16] = dom.createMorphAt(element9, 3, 3);
        morphs[17] = dom.createMorphAt(dom.childAt(element10, [1]), 0, 0);
        morphs[18] = dom.createMorphAt(element10, 3, 3);
        morphs[19] = dom.createMorphAt(dom.childAt(element11, [1]), 0, 0);
        morphs[20] = dom.createMorphAt(element11, 3, 3);
        morphs[21] = dom.createMorphAt(dom.childAt(element12, [1]), 0, 0);
        morphs[22] = dom.createMorphAt(element12, 3, 3);
        morphs[23] = dom.createMorphAt(dom.childAt(element13, [1]), 0, 0);
        morphs[24] = dom.createMorphAt(element13, 3, 3);
        morphs[25] = dom.createMorphAt(element13, 5, 5);
        morphs[26] = dom.createMorphAt(dom.childAt(element14, [1]), 0, 0);
        morphs[27] = dom.createMorphAt(element14, 3, 3);
        morphs[28] = dom.createMorphAt(element14, 5, 5);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-type-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 61]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [3, 47], [3, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [4, 26], [4, 31]]]]], [], []]], ["loc", [null, [4, 2], [4, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [7, 43], [7, 55]]]]], [], []]], ["loc", [null, [7, 6], [7, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [12, 16], [12, 24]]]]], [], 0, null, ["loc", [null, [12, 6], [21, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [22, 59], [22, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [23, 8], [23, 49]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [30, 16], [30, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [31, 13], [31, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [33, 10], [33, 20]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [34, 14], [34, 31]]]], "error", ""], [], ["loc", [null, [34, 10], [34, 43]]]], "label", ["subexpr", "t", ["forms.fd-type-edit-form.name-caption"], [], ["loc", [null, [35, 10], [35, 52]]]]], ["loc", [null, [28, 2], [36, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [37, 38], [37, 55]]]]], [], []], "pointing", "pointing"], ["loc", [null, [37, 2], [37, 77]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [43, 16], [43, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [44, 13], [44, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [46, 10], [46, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [47, 14], [47, 38]]]], "error", ""], [], ["loc", [null, [47, 10], [47, 50]]]], "label", ["subexpr", "t", ["forms.fd-type-edit-form.description-caption"], [], ["loc", [null, [48, 10], [48, 59]]]]], ["loc", [null, [41, 2], [49, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [50, 38], [50, 62]]]]], [], []], "pointing", "pointing"], ["loc", [null, [50, 2], [50, 84]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [56, 16], [56, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [57, 13], [57, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.storeInstancesInType", ["loc", [null, [59, 10], [59, 36]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.storeInstancesInType", ["loc", [null, [60, 14], [60, 47]]]], "error", ""], [], ["loc", [null, [60, 10], [60, 59]]]], "label", ["subexpr", "t", ["forms.fd-type-edit-form.storeInstancesInType-caption"], [], ["loc", [null, [61, 10], [61, 68]]]]], ["loc", [null, [54, 2], [62, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.storeInstancesInType", ["loc", [null, [63, 38], [63, 71]]]]], [], []], "pointing", "pointing"], ["loc", [null, [63, 2], [63, 93]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [69, 16], [69, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [70, 13], [70, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.packet", ["loc", [null, [72, 10], [72, 22]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.packet", ["loc", [null, [73, 14], [73, 33]]]], "error", ""], [], ["loc", [null, [73, 10], [73, 45]]]], "label", ["subexpr", "t", ["forms.fd-type-edit-form.packet-caption"], [], ["loc", [null, [74, 10], [74, 54]]]]], ["loc", [null, [67, 2], [75, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.packet", ["loc", [null, [76, 38], [76, 57]]]]], [], []], "pointing", "pointing"], ["loc", [null, [76, 2], [76, 79]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [82, 16], [82, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [83, 13], [83, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.namespacePostfix", ["loc", [null, [85, 10], [85, 32]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.namespacePostfix", ["loc", [null, [86, 14], [86, 43]]]], "error", ""], [], ["loc", [null, [86, 10], [86, 55]]]], "label", ["subexpr", "t", ["forms.fd-type-edit-form.namespacePostfix-caption"], [], ["loc", [null, [87, 10], [87, 64]]]]], ["loc", [null, [80, 2], [88, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.namespacePostfix", ["loc", [null, [89, 38], [89, 67]]]]], [], []], "pointing", "pointing"], ["loc", [null, [89, 2], [89, 89]]]], ["inline", "t", ["forms.fd-type-edit-form.pBMembers-caption"], [], ["loc", [null, [93, 9], [93, 58]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [96, 13], [96, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.pBMembers", ["loc", [null, [97, 10], [97, 25]]]]], [], []]], ["loc", [null, [94, 2], [98, 4]]]], ["inline", "t", ["forms.fd-type-edit-form.pBCustomAttributes-caption"], [], ["loc", [null, [102, 9], [102, 67]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [105, 13], [105, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.pBCustomAttributes", ["loc", [null, [106, 10], [106, 34]]]]], [], []]], ["loc", [null, [103, 2], [107, 4]]]], ["inline", "t", ["forms.fd-type-edit-form.publishToEBSD-caption"], [], ["loc", [null, [111, 9], [111, 62]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [114, 13], [114, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.publishToEBSD", ["loc", [null, [115, 10], [115, 29]]]]], [], []]], ["loc", [null, [112, 2], [116, 4]]]], ["inline", "t", ["forms.fd-type-edit-form.attributes-caption"], [], ["loc", [null, [120, 9], [120, 59]]]], ["inline", "flexberry-groupedit", [], ["componentName", "attributesGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [124, 24], [124, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.attributes", ["loc", [null, [125, 20], [125, 57]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.attributes", ["loc", [null, [126, 12], [126, 28]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [127, 13], [127, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.attributes", ["loc", [null, [129, 14], [129, 37]]]], "error", ""], [], ["loc", [null, [129, 10], [129, 49]]]]], ["loc", [null, [121, 2], [130, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.attributes", ["loc", [null, [131, 38], [131, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [131, 2], [131, 83]]]], ["inline", "t", ["forms.fd-type-edit-form.methods-caption"], [], ["loc", [null, [135, 9], [135, 56]]]], ["inline", "flexberry-groupedit", [], ["componentName", "methodsGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [139, 24], [139, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.methods", ["loc", [null, [140, 20], [140, 54]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.methods", ["loc", [null, [141, 12], [141, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [142, 13], [142, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.methods", ["loc", [null, [144, 14], [144, 34]]]], "error", ""], [], ["loc", [null, [144, 10], [144, 46]]]]], ["loc", [null, [136, 2], [145, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.methods", ["loc", [null, [146, 38], [146, 58]]]]], [], []], "pointing", "pointing"], ["loc", [null, [146, 2], [146, 80]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/fd-user-form-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 16,
                "column": 8
              },
              "end": {
                "line": 20,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-user-form-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [17, 66], [17, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [18, 12], [18, 54]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 12,
              "column": 6
            },
            "end": {
              "line": 21,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-user-form-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [13, 60], [13, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [14, 10], [14, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [16, 18], [16, 29]]]]], [], 0, null, ["loc", [null, [16, 8], [20, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 150,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-user-form-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [2]);
        var element3 = dom.childAt(element2, [5, 1]);
        var element4 = dom.childAt(element3, [3]);
        var element5 = dom.childAt(element2, [7]);
        var element6 = dom.childAt(element2, [9]);
        var element7 = dom.childAt(element2, [11]);
        var element8 = dom.childAt(element2, [13]);
        var element9 = dom.childAt(element2, [15]);
        var element10 = dom.childAt(element2, [17]);
        var element11 = dom.childAt(element2, [19]);
        var element12 = dom.childAt(element2, [21]);
        var element13 = dom.childAt(element2, [23]);
        var element14 = dom.childAt(element2, [25]);
        var morphs = new Array(29);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createAttrMorph(element2, 'class');
        morphs[2] = dom.createMorphAt(element2, 1, 1);
        morphs[3] = dom.createMorphAt(dom.childAt(element2, [3, 1]), 1, 1);
        morphs[4] = dom.createMorphAt(element3, 1, 1);
        morphs[5] = dom.createElementMorph(element4);
        morphs[6] = dom.createMorphAt(element4, 1, 1);
        morphs[7] = dom.createMorphAt(element5, 1, 1);
        morphs[8] = dom.createMorphAt(element5, 3, 3);
        morphs[9] = dom.createMorphAt(element6, 1, 1);
        morphs[10] = dom.createMorphAt(element6, 3, 3);
        morphs[11] = dom.createMorphAt(dom.childAt(element7, [1]), 0, 0);
        morphs[12] = dom.createMorphAt(element7, 3, 3);
        morphs[13] = dom.createMorphAt(dom.childAt(element8, [1]), 0, 0);
        morphs[14] = dom.createMorphAt(element8, 3, 3);
        morphs[15] = dom.createMorphAt(element9, 1, 1);
        morphs[16] = dom.createMorphAt(element9, 3, 3);
        morphs[17] = dom.createMorphAt(element10, 1, 1);
        morphs[18] = dom.createMorphAt(element10, 3, 3);
        morphs[19] = dom.createMorphAt(element11, 1, 1);
        morphs[20] = dom.createMorphAt(element11, 3, 3);
        morphs[21] = dom.createMorphAt(dom.childAt(element12, [1]), 0, 0);
        morphs[22] = dom.createMorphAt(element12, 3, 3);
        morphs[23] = dom.createMorphAt(dom.childAt(element13, [1]), 0, 0);
        morphs[24] = dom.createMorphAt(element13, 3, 3);
        morphs[25] = dom.createMorphAt(element13, 5, 5);
        morphs[26] = dom.createMorphAt(dom.childAt(element14, [1]), 0, 0);
        morphs[27] = dom.createMorphAt(element14, 3, 3);
        morphs[28] = dom.createMorphAt(element14, 5, 5);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-user-form-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 66]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [3, 47], [3, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [4, 26], [4, 31]]]]], [], []]], ["loc", [null, [4, 2], [4, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.errors", ["loc", [null, [7, 43], [7, 55]]]]], [], []]], ["loc", [null, [7, 6], [7, 57]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [12, 16], [12, 24]]]]], [], 0, null, ["loc", [null, [12, 6], [21, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [22, 59], [22, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [23, 8], [23, 49]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [30, 16], [30, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [31, 13], [31, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.name", ["loc", [null, [33, 10], [33, 20]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [34, 14], [34, 31]]]], "error", ""], [], ["loc", [null, [34, 10], [34, 43]]]], "label", ["subexpr", "t", ["forms.fd-user-form-edit-form.name-caption"], [], ["loc", [null, [35, 10], [35, 57]]]]], ["loc", [null, [28, 2], [36, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [37, 38], [37, 55]]]]], [], []], "pointing", "pointing"], ["loc", [null, [37, 2], [37, 77]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [43, 16], [43, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [44, 13], [44, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.description", ["loc", [null, [46, 10], [46, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [47, 14], [47, 38]]]], "error", ""], [], ["loc", [null, [47, 10], [47, 50]]]], "label", ["subexpr", "t", ["forms.fd-user-form-edit-form.description-caption"], [], ["loc", [null, [48, 10], [48, 64]]]]], ["loc", [null, [41, 2], [49, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [50, 38], [50, 62]]]]], [], []], "pointing", "pointing"], ["loc", [null, [50, 2], [50, 84]]]], ["inline", "t", ["forms.fd-user-form-edit-form.pBCustomAttributes-caption"], [], ["loc", [null, [54, 9], [54, 72]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [57, 13], [57, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.pBCustomAttributes", ["loc", [null, [58, 10], [58, 34]]]]], [], []]], ["loc", [null, [55, 2], [59, 4]]]], ["inline", "t", ["forms.fd-user-form-edit-form.pBMembers-caption"], [], ["loc", [null, [63, 9], [63, 63]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [66, 13], [66, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.pBMembers", ["loc", [null, [67, 10], [67, 25]]]]], [], []]], ["loc", [null, [64, 2], [68, 4]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [74, 16], [74, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [75, 13], [75, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.packet", ["loc", [null, [77, 10], [77, 22]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.packet", ["loc", [null, [78, 14], [78, 33]]]], "error", ""], [], ["loc", [null, [78, 10], [78, 45]]]], "label", ["subexpr", "t", ["forms.fd-user-form-edit-form.packet-caption"], [], ["loc", [null, [79, 10], [79, 59]]]]], ["loc", [null, [72, 2], [80, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.packet", ["loc", [null, [81, 38], [81, 57]]]]], [], []], "pointing", "pointing"], ["loc", [null, [81, 2], [81, 79]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [87, 16], [87, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [88, 13], [88, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.namespacePostfix", ["loc", [null, [90, 10], [90, 32]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.namespacePostfix", ["loc", [null, [91, 14], [91, 43]]]], "error", ""], [], ["loc", [null, [91, 10], [91, 55]]]], "label", ["subexpr", "t", ["forms.fd-user-form-edit-form.namespacePostfix-caption"], [], ["loc", [null, [92, 10], [92, 69]]]]], ["loc", [null, [85, 2], [93, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.namespacePostfix", ["loc", [null, [94, 38], [94, 67]]]]], [], []], "pointing", "pointing"], ["loc", [null, [94, 2], [94, 89]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [100, 16], [100, 60]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [101, 13], [101, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.scriptName", ["loc", [null, [103, 10], [103, 26]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.scriptName", ["loc", [null, [104, 14], [104, 37]]]], "error", ""], [], ["loc", [null, [104, 10], [104, 49]]]], "label", ["subexpr", "t", ["forms.fd-user-form-edit-form.scriptName-caption"], [], ["loc", [null, [105, 10], [105, 63]]]]], ["loc", [null, [98, 2], [106, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.scriptName", ["loc", [null, [107, 38], [107, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [107, 2], [107, 83]]]], ["inline", "t", ["forms.fd-user-form-edit-form.publishToEBSD-caption"], [], ["loc", [null, [111, 9], [111, 67]]]], ["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [114, 13], [114, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.publishToEBSD", ["loc", [null, [115, 10], [115, 29]]]]], [], []]], ["loc", [null, [112, 2], [116, 4]]]], ["inline", "t", ["forms.fd-user-form-edit-form.attributes-caption"], [], ["loc", [null, [120, 9], [120, 64]]]], ["inline", "flexberry-groupedit", [], ["componentName", "attributesGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [124, 24], [124, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.attributes", ["loc", [null, [125, 20], [125, 57]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.attributes", ["loc", [null, [126, 12], [126, 28]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [127, 13], [127, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.attributes", ["loc", [null, [129, 14], [129, 37]]]], "error", ""], [], ["loc", [null, [129, 10], [129, 49]]]]], ["loc", [null, [121, 2], [130, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.attributes", ["loc", [null, [131, 38], [131, 61]]]]], [], []], "pointing", "pointing"], ["loc", [null, [131, 2], [131, 83]]]], ["inline", "t", ["forms.fd-user-form-edit-form.methods-caption"], [], ["loc", [null, [135, 9], [135, 61]]]], ["inline", "flexberry-groupedit", [], ["componentName", "methodsGroupEdit", "mainModelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [139, 24], [139, 39]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection.attributes.methods", ["loc", [null, [140, 20], [140, 54]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model.methods", ["loc", [null, [141, 12], [141, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [142, 13], [142, 21]]]]], [], []], "orderable", false, "class", ["subexpr", "if", [["get", "model.errors.methods", ["loc", [null, [144, 14], [144, 34]]]], "error", ""], [], ["loc", [null, [144, 10], [144, 46]]]]], ["loc", [null, [136, 2], [145, 4]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.methods", ["loc", [null, [146, 38], [146, 58]]]]], [], []], "pointing", "pointing"], ["loc", [null, [146, 2], [146, 80]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/fd-view-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 12,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-view-edit-form.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [10, 14], [10, 26]]]]], [], []]], ["loc", [null, [5, 4], [11, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 3,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-view-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [4, 10], [4, 23]]]]], [], 0, null, ["loc", [null, [4, 2], [12, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 23,
              "column": 6
            },
            "end": {
              "line": 27,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-view-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "button");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element13 = dom.childAt(fragment, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element13);
          morphs[1] = dom.createMorphAt(element13, 1, 1);
          return morphs;
        },
        statements: [["element", "action", ["saveView"], [], ["loc", [null, [24, 60], [24, 81]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [25, 10], [25, 50]]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-view-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "class", "ui inverted button icon close-panel-btn");
          dom.setAttribute(el1, "type", "button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element11 = dom.childAt(fragment, [1]);
          var element12 = dom.childAt(element11, [1]);
          var morphs = new Array(2);
          morphs[0] = dom.createElementMorph(element11);
          morphs[1] = dom.createAttrMorph(element12, 'class');
          return morphs;
        },
        statements: [["element", "action", ["closeRightpanel"], ["on", "click"], ["loc", [null, [65, 78], [65, 118]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "allAttrsHidedn", ["loc", [null, [66, 25], [66, 39]]]], "chevron right", "chevron left"], [], ["loc", [null, [66, 20], [66, 72]]]], " icon"]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 104,
                "column": 18
              },
              "end": {
                "line": 106,
                "column": 18
              }
            },
            "moduleName": "dummy/templates/fd-view-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("                    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("img");
            dom.setAttribute(el1, "src", "assets/images/datail.png");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 107,
                  "column": 20
                },
                "end": {
                  "line": 109,
                  "column": 20
                }
              },
              "moduleName": "dummy/templates/fd-view-edit-form.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("img");
              dom.setAttribute(el1, "src", "assets/images/master.bmp");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes() {
              return [];
            },
            statements: [],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 109,
                  "column": 20
                },
                "end": {
                  "line": 111,
                  "column": 20
                }
              },
              "moduleName": "dummy/templates/fd-view-edit-form.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                      ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("img");
              dom.setAttribute(el1, "src", "assets/images/attribute.bmp");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes() {
              return [];
            },
            statements: [],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 106,
                "column": 18
              },
              "end": {
                "line": 112,
                "column": 18
              }
            },
            "moduleName": "dummy/templates/fd-view-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "property.lookupType", ["loc", [null, [107, 26], [107, 45]]]]], [], 0, 1, ["loc", [null, [107, 20], [111, 27]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 101,
              "column": 14
            },
            "end": {
              "line": 125,
              "column": 14
            }
          },
          "moduleName": "dummy/templates/fd-view-edit-form.hbs"
        },
        isEmpty: false,
        arity: 2,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("              ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n                ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("                ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n                ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n                  ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n                ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n                ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n                  ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n                ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n              ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element10 = dom.childAt(fragment, [1]);
          var morphs = new Array(5);
          morphs[0] = dom.createAttrMorph(element10, 'class');
          morphs[1] = dom.createAttrMorph(element10, 'onclick');
          morphs[2] = dom.createMorphAt(dom.childAt(element10, [1]), 1, 1);
          morphs[3] = dom.createMorphAt(dom.childAt(element10, [3]), 1, 1);
          morphs[4] = dom.createMorphAt(dom.childAt(element10, [5]), 1, 1);
          return morphs;
        },
        statements: [["attribute", "class", ["subexpr", "if", [["subexpr", "eq", [["get", "selectedRowIndex", ["loc", [null, [102, 33], [102, 49]]]], ["get", "index", ["loc", [null, [102, 50], [102, 55]]]]], [], ["loc", [null, [102, 29], [102, 56]]]], "active", ""], [], ["loc", [null, [102, 24], [102, 70]]]]], ["attribute", "onclick", ["subexpr", "action", ["onAttributesClick", ["get", "index", ["loc", [null, [102, 108], [102, 113]]]]], [], ["loc", [null, [102, 79], [102, 115]]]]], ["block", "if", [["subexpr", "or", [["get", "property.detailViewName", ["loc", [null, [104, 28], [104, 51]]]], ["subexpr", "eq", [["get", "property.detailViewName", ["loc", [null, [104, 56], [104, 79]]]], ""], [], ["loc", [null, [104, 52], [104, 83]]]]], [], ["loc", [null, [104, 24], [104, 84]]]]], [], 0, 1, ["loc", [null, [104, 18], [112, 25]]]], ["content", "property.name", ["loc", [null, [115, 18], [115, 35]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "property.visible", ["loc", [null, [120, 26], [120, 42]]]]], [], []], "readonly", true], ["loc", [null, [118, 18], [122, 20]]]]],
        locals: ["property", "index"],
        templates: [child0, child1]
      };
    })();
    var child4 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 143,
                  "column": 6
                },
                "end": {
                  "line": 166,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/fd-view-edit-form.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("label");
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n        ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "class", "field");
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n          ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n        ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element7 = dom.childAt(fragment, [1]);
              var element8 = dom.childAt(fragment, [5]);
              var morphs = new Array(5);
              morphs[0] = dom.createMorphAt(element7, 1, 1);
              morphs[1] = dom.createMorphAt(element7, 3, 3);
              morphs[2] = dom.createMorphAt(dom.childAt(fragment, [3]), 0, 0);
              morphs[3] = dom.createMorphAt(element8, 1, 1);
              morphs[4] = dom.createMorphAt(element8, 3, 3);
              return morphs;
            },
            statements: [["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [147, 24], [147, 68]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [148, 21], [148, 29]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.view.name", ["loc", [null, [149, 18], [149, 33]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.name", ["loc", [null, [150, 22], [150, 39]]]], "error", ""], [], ["loc", [null, [150, 18], [150, 51]]]], "label", ["subexpr", "t", ["forms.fd-view-edit-form.name-caption"], [], ["loc", [null, [151, 18], [151, 60]]]]], ["loc", [null, [145, 10], [152, 12]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.name", ["loc", [null, [153, 46], [153, 63]]]]], [], []], "pointing", "pointing"], ["loc", [null, [153, 10], [153, 85]]]], ["inline", "t", ["forms.fd-view-edit-form.description-caption"], [], ["loc", [null, [155, 15], [155, 66]]]], ["inline", "flexberry-textarea", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [159, 24], [159, 68]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [160, 21], [160, 29]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.view.description", ["loc", [null, [161, 18], [161, 40]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.description", ["loc", [null, [162, 22], [162, 46]]]], "error", ""], [], ["loc", [null, [162, 18], [162, 58]]]]], ["loc", [null, [157, 10], [163, 12]]]], ["inline", "flexberry-validationmessage", [], ["error", ["subexpr", "@mut", [["get", "model.errors.description", ["loc", [null, [164, 46], [164, 70]]]]], [], []], "pointing", "pointing"], ["loc", [null, [164, 10], [164, 92]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 168,
                    "column": 8
                  },
                  "end": {
                    "line": 175,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/fd-view-edit-form.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "ui info message");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("div");
                dom.setAttribute(el2, "class", "header");
                var el3 = dom.createTextNode("\n              ");
                dom.appendChild(el2, el3);
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("\n            ");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("p");
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element6 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createMorphAt(dom.childAt(element6, [1]), 1, 1);
                morphs[1] = dom.createMorphAt(dom.childAt(element6, [3]), 0, 0);
                return morphs;
              },
              statements: [["inline", "t", ["forms.fd-view-edit-form.form-config-panel.attribute-properties-null"], [], ["loc", [null, [171, 14], [171, 89]]]], ["inline", "t", ["forms.fd-view-edit-form.form-config-panel.attribute-properties-change"], [], ["loc", [null, [173, 15], [173, 92]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            var child0 = (function () {
              return {
                meta: {
                  "fragmentReason": false,
                  "revision": "Ember@2.4.6",
                  "loc": {
                    "source": null,
                    "start": {
                      "line": 222,
                      "column": 12
                    },
                    "end": {
                      "line": 238,
                      "column": 12
                    }
                  },
                  "moduleName": "dummy/templates/fd-view-edit-form.hbs"
                },
                isEmpty: false,
                arity: 0,
                cachedFragment: null,
                hasRendered: false,
                buildFragment: function buildFragment(dom) {
                  var el0 = dom.createDocumentFragment();
                  var el1 = dom.createTextNode("            ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n\n            ");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createComment("");
                  dom.appendChild(el0, el1);
                  var el1 = dom.createTextNode("\n");
                  dom.appendChild(el0, el1);
                  return el0;
                },
                buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                  var morphs = new Array(2);
                  morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
                  morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
                  return morphs;
                },
                statements: [["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [225, 26], [225, 70]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [226, 23], [226, 31]]]]], [], []], "value", ["subexpr", "@mut", [["get", "rowModel.masterPropertyName", ["loc", [null, [227, 20], [227, 47]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-view-edit-form.settings-master.master-property"], [], ["loc", [null, [228, 20], [228, 81]]]]], ["loc", [null, [223, 12], [229, 14]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [233, 26], [233, 70]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [234, 23], [234, 31]]]]], [], []], "value", ["subexpr", "@mut", [["get", "rowModel.masterCustomizationString", ["loc", [null, [235, 20], [235, 54]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-view-edit-form.settings-master.sample-setting"], [], ["loc", [null, [236, 20], [236, 80]]]]], ["loc", [null, [231, 12], [237, 14]]]]],
                locals: [],
                templates: []
              };
            })();
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 175,
                    "column": 8
                  },
                  "end": {
                    "line": 260,
                    "column": 8
                  }
                },
                "moduleName": "dummy/templates/fd-view-edit-form.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "field");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "field");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "field");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("label");
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n\n          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                dom.setAttribute(el1, "class", "field");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n\n          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("div");
                dom.setAttribute(el2, "class", "field");
                var el3 = dom.createTextNode("\n              ");
                dom.appendChild(el2, el3);
                var el3 = dom.createElement("label");
                var el4 = dom.createComment("");
                dom.appendChild(el3, el4);
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("\n              ");
                dom.appendChild(el2, el3);
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("\n            ");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n          ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("div");
                dom.setAttribute(el2, "class", "field");
                var el3 = dom.createTextNode("\n              ");
                dom.appendChild(el2, el3);
                var el3 = dom.createElement("label");
                var el4 = dom.createComment("");
                dom.appendChild(el3, el4);
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("\n              ");
                dom.appendChild(el2, el3);
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("\n            ");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n            ");
                dom.appendChild(el1, el2);
                var el2 = dom.createElement("div");
                dom.setAttribute(el2, "class", "field");
                var el3 = dom.createTextNode("\n              ");
                dom.appendChild(el2, el3);
                var el3 = dom.createElement("label");
                var el4 = dom.createComment("");
                dom.appendChild(el3, el4);
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("\n              ");
                dom.appendChild(el2, el3);
                var el3 = dom.createComment("");
                dom.appendChild(el2, el3);
                var el3 = dom.createTextNode("\n            ");
                dom.appendChild(el2, el3);
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n          ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element0 = dom.childAt(fragment, [5]);
                var element1 = dom.childAt(fragment, [9]);
                var element2 = dom.childAt(element1, [1]);
                var element3 = dom.childAt(fragment, [11]);
                var element4 = dom.childAt(element3, [1]);
                var element5 = dom.childAt(element3, [3]);
                var morphs = new Array(14);
                morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
                morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);
                morphs[2] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);
                morphs[3] = dom.createMorphAt(element0, 3, 3);
                morphs[4] = dom.createMorphAt(dom.childAt(fragment, [7]), 1, 1);
                morphs[5] = dom.createAttrMorph(element1, 'class');
                morphs[6] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
                morphs[7] = dom.createMorphAt(element2, 3, 3);
                morphs[8] = dom.createMorphAt(element1, 3, 3);
                morphs[9] = dom.createAttrMorph(element3, 'class');
                morphs[10] = dom.createMorphAt(dom.childAt(element4, [1]), 0, 0);
                morphs[11] = dom.createMorphAt(element4, 3, 3);
                morphs[12] = dom.createMorphAt(dom.childAt(element5, [1]), 0, 0);
                morphs[13] = dom.createMorphAt(element5, 3, 3);
                return morphs;
              },
              statements: [["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [179, 26], [179, 70]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [180, 23], [180, 31]]]]], [], []], "value", ["subexpr", "@mut", [["get", "rowModel.caption", ["loc", [null, [181, 20], [181, 36]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-view-edit-form.settings-view.name-caption"], [], ["loc", [null, [182, 20], [182, 76]]]]], ["loc", [null, [177, 12], [183, 14]]]], ["inline", "flexberry-button", [], ["caption", ["subexpr", "t", ["forms.fd-view-edit-form.settings-view.create-caption"], [], ["loc", [null, [188, 22], [188, 80]]]], "click", ["subexpr", "action", ["onCreateCaptionClick", ["get", "rowModel.caption", ["loc", [null, [189, 51], [189, 67]]]]], [], ["loc", [null, [189, 20], [189, 68]]]]], ["loc", [null, [186, 12], [190, 14]]]], ["inline", "t", ["forms.fd-view-edit-form.settings-view.visibility"], [], ["loc", [null, [193, 19], [193, 75]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "rowModel.visible", ["loc", [null, [196, 20], [196, 36]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [197, 23], [197, 31]]]]], [], []]], ["loc", [null, [194, 12], [198, 14]]]], ["inline", "flexberry-field", [], ["placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [204, 26], [204, 70]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [205, 23], [205, 31]]]]], [], []], "value", ["subexpr", "@mut", [["get", "rowModel.path", ["loc", [null, [206, 20], [206, 33]]]]], [], []], "label", ["subexpr", "t", ["forms.fd-view-edit-form.settings-view.path"], [], ["loc", [null, [207, 20], [207, 68]]]]], ["loc", [null, [202, 12], [208, 14]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["subexpr", "eq", [["get", "propertyType", ["loc", [null, [211, 31], [211, 43]]]], "isMaster"], [], ["loc", [null, [211, 27], [211, 55]]]], "", " hidden"], [], ["loc", [null, [211, 22], [211, 70]]]]]]], ["inline", "t", ["forms.fd-view-edit-form.settings-master.lookup-type"], [], ["loc", [null, [213, 21], [213, 80]]]], ["inline", "flexberry-dropdown", [], ["onChange", ["subexpr", "action", ["changeLookupType"], [], ["loc", [null, [216, 25], [216, 52]]]], "items", ["subexpr", "@mut", [["get", "lookupTypeItems", ["loc", [null, [217, 22], [217, 37]]]]], [], []], "value", ["subexpr", "@mut", [["get", "rowModel.lookupType", ["loc", [null, [218, 22], [218, 41]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [219, 25], [219, 33]]]]], [], []]], ["loc", [null, [214, 14], [220, 16]]]], ["block", "if", [["subexpr", "not-eq", [["get", "rowModel.lookupType", ["loc", [null, [222, 26], [222, 45]]]], "default"], [], ["loc", [null, [222, 18], [222, 56]]]]], [], 0, null, ["loc", [null, [222, 12], [238, 19]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["subexpr", "eq", [["get", "propertyType", ["loc", [null, [240, 31], [240, 43]]]], "isDetail"], [], ["loc", [null, [240, 27], [240, 55]]]], "", " hidden"], [], ["loc", [null, [240, 22], [240, 70]]]]]]], ["inline", "t", ["forms.fd-view-edit-form.settings-detail.view"], [], ["loc", [null, [242, 21], [242, 73]]]], ["inline", "flexberry-dropdown", [], ["items", ["subexpr", "@mut", [["get", "detailViewNameItems", ["loc", [null, [245, 22], [245, 41]]]]], [], []], "value", ["subexpr", "@mut", [["get", "rowModel.detailViewName", ["loc", [null, [246, 22], [246, 45]]]]], [], []], "placeholder", ["subexpr", "t", ["components.flexberry-field.placeholder"], [], ["loc", [null, [247, 28], [247, 72]]]], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [248, 25], [248, 33]]]]], [], []]], ["loc", [null, [243, 14], [249, 16]]]], ["inline", "t", ["forms.fd-view-edit-form.settings-detail.load-on-load-agregator"], [], ["loc", [null, [252, 21], [252, 91]]]], ["inline", "flexberry-checkbox", [], ["value", ["subexpr", "@mut", [["get", "rowModel.loadOnLoadAgregator", ["loc", [null, [255, 22], [255, 50]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [256, 25], [256, 33]]]]], [], []]], ["loc", [null, [253, 14], [257, 16]]]]],
              locals: [],
              templates: [child0]
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 167,
                  "column": 6
                },
                "end": {
                  "line": 261,
                  "column": 6
                }
              },
              "moduleName": "dummy/templates/fd-view-edit-form.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
              dom.insertBoundary(fragment, 0);
              dom.insertBoundary(fragment, null);
              return morphs;
            },
            statements: [["block", "if", [["subexpr", "eq", [["get", "selectedRowIndex", ["loc", [null, [168, 19], [168, 35]]]], null], [], ["loc", [null, [168, 15], [168, 41]]]]], [], 0, 1, ["loc", [null, [168, 8], [260, 15]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 136,
                "column": 2
              },
              "end": {
                "line": 263,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-view-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("form");
            dom.setAttribute(el1, "class", "ui form segment");
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "ui segment");
            var el3 = dom.createTextNode("\n        ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3, "class", "ui large header");
            var el4 = dom.createTextNode("\n          ");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("\n        ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n      ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("    ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element9 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createMorphAt(dom.childAt(element9, [1, 1]), 1, 1);
            morphs[1] = dom.createMorphAt(element9, 3, 3);
            morphs[2] = dom.createMorphAt(element9, 4, 4);
            return morphs;
          },
          statements: [["inline", "t", ["forms.fd-view-edit-form.form-config-panel.caption"], [], ["loc", [null, [140, 10], [140, 67]]]], ["block", "ui-tab-segment", [], ["tab", "first", "title", ["subexpr", "t", ["forms.fd-view-edit-form.form-config-panel.view-properties-header"], [], ["loc", [null, [143, 42], [143, 112]]]], "theme", "", "active", true], 0, null, ["loc", [null, [143, 6], [166, 25]]]], ["block", "ui-tab-segment", [], ["tab", "active-tree-tab", "title", ["subexpr", "t", ["forms.fd-view-edit-form.form-config-panel.attribute-properties-header"], [], ["loc", [null, [167, 52], [167, 127]]]], "theme", ""], 1, null, ["loc", [null, [167, 6], [261, 25]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 134,
              "column": 0
            },
            "end": {
              "line": 265,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-view-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["block", "fd-tabs", [], ["tabsMenuTheme", "vertical tabular", "class", "ui segments horizontal right-tabs"], 0, null, ["loc", [null, [136, 2], [263, 14]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 266,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-view-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(" (");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode(")");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "sixteen wide");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "button");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "panel-wrapper");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "closable panel-left");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui segments");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "ui segment");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "field");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "ui segment overflow-panel");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "text-center");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui vertical basic buttons");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "class", "ui flexberry-button basic button icon");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "right long arrow icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "class", "ui flexberry-button basic button icon");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "left long arrow icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "class", "ui flexberry-button basic button icon");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "up long arrow icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "class", "ui flexberry-button basic button icon");
        dom.setAttribute(el5, "type", "button");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("i");
        dom.setAttribute(el6, "class", "down long arrow icon");
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "panel-right view-attributes");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "ui segments");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("div");
        dom.setAttribute(el5, "class", "ui segment overflow-panel");
        var el6 = dom.createTextNode("\n          ");
        dom.appendChild(el5, el6);
        var el6 = dom.createElement("table");
        dom.setAttribute(el6, "class", "ui very basic collapsing celled table");
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("thead");
        var el8 = dom.createTextNode("\n              ");
        dom.appendChild(el7, el8);
        var el8 = dom.createElement("tr");
        var el9 = dom.createTextNode("\n                ");
        dom.appendChild(el8, el9);
        var el9 = dom.createElement("th");
        var el10 = dom.createComment("");
        dom.appendChild(el9, el10);
        dom.appendChild(el8, el9);
        var el9 = dom.createTextNode("\n                ");
        dom.appendChild(el8, el9);
        var el9 = dom.createElement("th");
        var el10 = dom.createComment("");
        dom.appendChild(el9, el10);
        dom.appendChild(el8, el9);
        var el9 = dom.createTextNode("\n                ");
        dom.appendChild(el8, el9);
        var el9 = dom.createElement("th");
        var el10 = dom.createComment("");
        dom.appendChild(el9, el10);
        dom.appendChild(el8, el9);
        var el9 = dom.createTextNode("\n              ");
        dom.appendChild(el8, el9);
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("\n            ");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n            ");
        dom.appendChild(el6, el7);
        var el7 = dom.createElement("tbody");
        var el8 = dom.createTextNode("\n");
        dom.appendChild(el7, el8);
        var el8 = dom.createComment("");
        dom.appendChild(el7, el8);
        var el8 = dom.createTextNode("            ");
        dom.appendChild(el7, el8);
        dom.appendChild(el6, el7);
        var el7 = dom.createTextNode("\n          ");
        dom.appendChild(el6, el7);
        dom.appendChild(el5, el6);
        var el6 = dom.createTextNode("\n        ");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element14 = dom.childAt(fragment, [0]);
        var element15 = dom.childAt(fragment, [3]);
        var element16 = dom.childAt(element15, [5, 1]);
        var element17 = dom.childAt(element16, [3]);
        var element18 = dom.childAt(element15, [7]);
        var element19 = dom.childAt(element18, [1, 1]);
        var element20 = dom.childAt(element18, [3]);
        var element21 = dom.childAt(element20, [3]);
        var element22 = dom.childAt(element21, [1]);
        var element23 = dom.childAt(element21, [3]);
        var element24 = dom.childAt(element21, [5]);
        var element25 = dom.childAt(element21, [7]);
        var element26 = dom.childAt(element18, [5, 1, 1, 1]);
        var element27 = dom.childAt(element26, [1, 1]);
        var morphs = new Array(26);
        morphs[0] = dom.createMorphAt(element14, 0, 0);
        morphs[1] = dom.createMorphAt(element14, 2, 2);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[3] = dom.createAttrMorph(element15, 'class');
        morphs[4] = dom.createMorphAt(element15, 1, 1);
        morphs[5] = dom.createMorphAt(dom.childAt(element15, [3, 1]), 1, 1);
        morphs[6] = dom.createMorphAt(element16, 1, 1);
        morphs[7] = dom.createElementMorph(element17);
        morphs[8] = dom.createMorphAt(element17, 1, 1);
        morphs[9] = dom.createMorphAt(dom.childAt(element19, [1]), 1, 1);
        morphs[10] = dom.createMorphAt(dom.childAt(element19, [3]), 1, 1);
        morphs[11] = dom.createMorphAt(dom.childAt(element19, [5]), 1, 1);
        morphs[12] = dom.createMorphAt(element20, 1, 1);
        morphs[13] = dom.createAttrMorph(element22, 'title');
        morphs[14] = dom.createElementMorph(element22);
        morphs[15] = dom.createAttrMorph(element23, 'title');
        morphs[16] = dom.createElementMorph(element23);
        morphs[17] = dom.createAttrMorph(element24, 'title');
        morphs[18] = dom.createElementMorph(element24);
        morphs[19] = dom.createAttrMorph(element25, 'title');
        morphs[20] = dom.createElementMorph(element25);
        morphs[21] = dom.createMorphAt(dom.childAt(element27, [1]), 0, 0);
        morphs[22] = dom.createMorphAt(dom.childAt(element27, [3]), 0, 0);
        morphs[23] = dom.createMorphAt(dom.childAt(element27, [5]), 0, 0);
        morphs[24] = dom.createMorphAt(dom.childAt(element26, [3]), 1, 1);
        morphs[25] = dom.createMorphAt(fragment, 5, 5, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["content", "model.tree.0.text", ["loc", [null, [1, 22], [1, 43]]]], ["content", "model.view.name", ["loc", [null, [1, 45], [1, 64]]]], ["block", "if", [["get", "errorMessages", ["loc", [null, [3, 6], [3, 19]]]]], [], 0, null, ["loc", [null, [3, 0], [13, 7]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [14, 47], [14, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [15, 26], [15, 31]]]]], [], []]], ["loc", [null, [15, 2], [15, 33]]]], ["inline", "flexberry-validationsummary", [], ["errors", ["subexpr", "@mut", [["get", "model.view.errors", ["loc", [null, [18, 43], [18, 60]]]]], [], []]], ["loc", [null, [18, 6], [18, 62]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [23, 16], [23, 24]]]]], [], 1, null, ["loc", [null, [23, 6], [27, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [28, 59], [28, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [29, 8], [29, 49]]]], ["inline", "t", ["forms.fd-view-edit-form.attributes-tree.caption"], [], ["loc", [null, [38, 10], [38, 65]]]], ["inline", "flexberry-textbox", [], ["placeholder", ["subexpr", "t", ["forms.fd-view-edit-form.attributes-tree.search"], [], ["loc", [null, [43, 24], [43, 76]]]], "value", ["subexpr", "@mut", [["get", "searchTerm", ["loc", [null, [44, 18], [44, 28]]]]], [], []]], ["loc", [null, [41, 10], [45, 12]]]], ["inline", "ember-jstree", [], ["actionReceiver", ["subexpr", "@mut", [["get", "jstreeActionReceiver", ["loc", [null, [49, 27], [49, 47]]]]], [], []], "selectedNodes", ["subexpr", "@mut", [["get", "jstreeSelectedNodes", ["loc", [null, [50, 26], [50, 45]]]]], [], []], "data", ["subexpr", "@mut", [["get", "model.tree", ["loc", [null, [51, 17], [51, 27]]]]], [], []], "plugins", ["subexpr", "@mut", [["get", "plugins", ["loc", [null, [52, 20], [52, 27]]]]], [], []], "searchTerm", ["subexpr", "@mut", [["get", "searchTerm", ["loc", [null, [53, 23], [53, 33]]]]], [], []], "searchOptions", ["subexpr", "@mut", [["get", "searchOptions", ["loc", [null, [54, 26], [54, 39]]]]], [], []], "typesOptions", ["subexpr", "@mut", [["get", "typesOptions", ["loc", [null, [55, 25], [55, 37]]]]], [], []], "eventDidBecomeReady", ["subexpr", "action", ["handleTreeDidBecomeReady"], [], ["loc", [null, [56, 32], [56, 67]]]], "treeObject", ["subexpr", "@mut", [["get", "jstreeObject", ["loc", [null, [57, 23], [57, 35]]]]], [], []]], ["loc", [null, [48, 10], [58, 12]]]], ["block", "ui-popup", [], ["content", ["subexpr", "@mut", [["get", "popupMessage", ["loc", [null, [64, 26], [64, 38]]]]], [], []]], 2, null, ["loc", [null, [64, 6], [68, 19]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["forms.fd-view-edit-form.attributes-panel.move-right-btn-title"], [], ["loc", [null, [71, 129], [71, 198]]]]]]], ["element", "action", ["moveRightHighlighted"], ["on", "click"], ["loc", [null, [71, 76], [71, 121]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["forms.fd-view-edit-form.attributes-panel.move-left-btn-title"], [], ["loc", [null, [75, 128], [75, 196]]]]]]], ["element", "action", ["moveLeftHighlighted"], ["on", "click"], ["loc", [null, [75, 76], [75, 120]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["forms.fd-view-edit-form.attributes-panel.move-up-btn-title"], [], ["loc", [null, [79, 126], [79, 192]]]]]]], ["element", "action", ["moveUpHighlighted"], ["on", "click"], ["loc", [null, [79, 76], [79, 118]]]], ["attribute", "title", ["concat", [["subexpr", "t", ["forms.fd-view-edit-form.attributes-panel.move-down-btn-title"], [], ["loc", [null, [83, 128], [83, 196]]]]]]], ["element", "action", ["moveDownHighlighted"], ["on", "click"], ["loc", [null, [83, 76], [83, 120]]]], ["inline", "t", ["forms.fd-view-edit-form.table-column.type"], [], ["loc", [null, [95, 20], [95, 69]]]], ["inline", "t", ["forms.fd-view-edit-form.table-column.view-attributes"], [], ["loc", [null, [96, 20], [96, 80]]]], ["inline", "t", ["forms.fd-view-edit-form.table-column.visibility"], [], ["loc", [null, [97, 20], [97, 75]]]], ["block", "each", [["get", "model.view.definition", ["loc", [null, [101, 22], [101, 43]]]]], [], 3, null, ["loc", [null, [101, 14], [125, 23]]]], ["block", "fd-config-panel", [], [], 4, null, ["loc", [null, [134, 0], [265, 20]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  })());
});
define("dummy/templates/fd-view-list-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 33,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-view-list-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(3);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);
        morphs[2] = dom.createMorphAt(dom.childAt(fragment, [4]), 1, 1);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [1, 24], [1, 29]]]]], [], []]], ["loc", [null, [1, 0], [1, 31]]]], ["inline", "t", ["forms.fd-view-list-form.caption"], [], ["loc", [null, [2, 4], [2, 43]]]], ["inline", "flexberry-objectlistview", [], ["modelName", "fd-dev-view", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 12], [8, 17]]]]], [], []], "refreshButton", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [10, 12], [10, 27]]]]], [], []], "orderable", true, "enableFilters", true, "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [13, 12], [13, 19]]]]], [], []], "disableHierarchicalMode", true, "applyFilters", ["subexpr", "action", ["applyFilters"], [], ["loc", [null, [15, 17], [15, 40]]]], "resetFilters", ["subexpr", "action", ["resetFilters"], [], ["loc", [null, [16, 17], [16, 40]]]], "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [17, 17], [17, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [18, 23], [18, 52]]]], "showEditMenuItemInRow", true, "showDeleteMenuItemInRow", true, "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [21, 10], [21, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [22, 17], [22, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [23, 18], [23, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [24, 22], [24, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [25, 20], [25, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [26, 16], [26, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [27, 17], [27, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [28, 13], [28, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [29, 13], [29, 32]]]], "componentName", "FdViewListForm"], ["loc", [null, [4, 2], [31, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-view-list-form/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-view-list-form/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/fd-visual-edit-form", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 3,
                "column": 2
              },
              "end": {
                "line": 11,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/fd-visual-edit-form.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [9, 14], [9, 26]]]]], [], []]], ["loc", [null, [4, 4], [10, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 12,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/fd-visual-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [3, 10], [3, 23]]]]], [], 0, null, ["loc", [null, [3, 2], [11, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 21,
                "column": 8
              },
              "end": {
                "line": 25,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/fd-visual-edit-form.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-close-button");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 1, 1);
            return morphs;
          },
          statements: [["element", "action", ["save-close"], [], ["loc", [null, [22, 68], [22, 91]]]], ["inline", "t", ["forms.edit-form.saveAndClose-button-text"], [], ["loc", [null, [23, 12], [23, 60]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 17,
              "column": 6
            },
            "end": {
              "line": 26,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/fd-visual-edit-form.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          dom.setAttribute(el1, "type", "submit");
          dom.setAttribute(el1, "class", "ui button save-button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createElementMorph(element1);
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          morphs[2] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["element", "action", ["save"], [], ["loc", [null, [18, 60], [18, 77]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [19, 10], [19, 50]]]], ["block", "unless", [["get", "model.isNew", ["loc", [null, [21, 18], [21, 29]]]]], [], 0, null, ["loc", [null, [21, 8], [25, 19]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/fd-visual-edit-form.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-edit-panel");
        var el4 = dom.createTextNode("\n");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "class", "ui button fake save-close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "class", "ui button disabled");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("button");
        dom.setAttribute(el4, "type", "submit");
        dom.setAttribute(el4, "class", "ui button close-button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element2 = dom.childAt(fragment, [3]);
        var element3 = dom.childAt(element2, [3, 1]);
        var element4 = dom.childAt(element3, [7]);
        var morphs = new Array(10);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[2] = dom.createAttrMorph(element2, 'class');
        morphs[3] = dom.createMorphAt(element2, 1, 1);
        morphs[4] = dom.createMorphAt(element3, 1, 1);
        morphs[5] = dom.createMorphAt(dom.childAt(element3, [3]), 1, 1);
        morphs[6] = dom.createMorphAt(dom.childAt(element3, [5]), 1, 1);
        morphs[7] = dom.createElementMorph(element4);
        morphs[8] = dom.createMorphAt(element4, 1, 1);
        morphs[9] = dom.createMorphAt(element2, 5, 5);
        return morphs;
      },
      statements: [["inline", "t", ["forms.fd-visual-edit-form.caption"], [], ["loc", [null, [1, 22], [1, 63]]]], ["block", "if", [["get", "errorMessages", ["loc", [null, [2, 6], [2, 19]]]]], [], 0, null, ["loc", [null, [2, 0], [12, 7]]]], ["attribute", "class", ["concat", ["ui form flexberry-vertical-form ", ["get", "state", ["loc", [null, [13, 47], [13, 52]]]]]]], ["inline", "flexberry-error", [], ["error", ["subexpr", "@mut", [["get", "error", ["loc", [null, [14, 26], [14, 31]]]]], [], []]], ["loc", [null, [14, 2], [14, 33]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [17, 16], [17, 24]]]]], [], 1, null, ["loc", [null, [17, 6], [26, 17]]]], ["inline", "t", ["forms.edit-form.saveAndClose-button-text"], [], ["loc", [null, [28, 8], [28, 56]]]], ["inline", "t", ["forms.fd-visual-edit-form.preview-mobile-variant"], [], ["loc", [null, [31, 8], [31, 64]]]], ["element", "action", ["close"], [], ["loc", [null, [33, 59], [33, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [34, 8], [34, 49]]]], ["inline", "fd-visual-edit-form", [], ["controls", ["subexpr", "@mut", [["get", "model.controls", ["loc", [null, [38, 33], [38, 47]]]]], [], []], "model", ["subexpr", "@mut", [["get", "model", ["loc", [null, [38, 54], [38, 59]]]]], [], []]], ["loc", [null, [38, 2], [38, 61]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/flexberry-file-view-dialog", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "triple-curlies"
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 9,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/flexberry-file-view-dialog.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("img");
          dom.setAttribute(el1, "class", "flexberry-file-view-dialog");
          dom.setAttribute(el1, "alt", "LoadedImage");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var morphs = new Array(1);
          morphs[0] = dom.createAttrMorph(element0, 'src');
          return morphs;
        },
        statements: [["attribute", "src", ["concat", [["get", "imageSrc", ["loc", [null, [8, 49], [8, 57]]]]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/flexberry-file-view-dialog.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "modal-dialog", [], ["title", ["subexpr", "@mut", [["get", "title", ["loc", [null, [2, 8], [2, 13]]]]], [], []], "useOkButton", false, "close", "removeModalDialog", "created", "createdModalDialog", "viewImageContent", true, "sizeClass", ["subexpr", "@mut", [["get", "sizeClass", ["loc", [null, [7, 12], [7, 21]]]]], [], []]], 0, null, ["loc", [null, [1, 0], [9, 17]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/i-i-s-caseberry-logging-objects-application-log-e", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 3,
                "column": 2
              },
              "end": {
                "line": 10,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [8, 14], [8, 26]]]]], [], []]], ["loc", [null, [4, 4], [9, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [3, 10], [3, 23]]]]], [], 0, null, ["loc", [null, [3, 2], [10, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 17,
                "column": 8
              },
              "end": {
                "line": 19,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element2);
            morphs[1] = dom.createMorphAt(element2, 0, 0);
            return morphs;
          },
          statements: [["element", "action", ["save"], [], ["loc", [null, [18, 62], [18, 79]]]], ["inline", "t", ["forms.edit-form.save-button-text"], [], ["loc", [null, [18, 80], [18, 120]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 20,
                "column": 8
              },
              "end": {
                "line": 22,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-close-button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element1);
            morphs[1] = dom.createMorphAt(element1, 0, 0);
            return morphs;
          },
          statements: [["element", "action", ["saveAndClose"], [], ["loc", [null, [21, 68], [21, 93]]]], ["inline", "t", ["forms.edit-form.saveAndClose-button-text"], [], ["loc", [null, [21, 94], [21, 142]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 23,
                "column": 8
              },
              "end": {
                "line": 25,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            dom.setAttribute(el1, "type", "submit");
            dom.setAttribute(el1, "class", "ui button save-del-button");
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(element0, 0, 0);
            return morphs;
          },
          statements: [["element", "action", ["delete"], [], ["loc", [null, [24, 66], [24, 85]]]], ["inline", "t", ["forms.edit-form.delete-button-text"], [], ["loc", [null, [24, 86], [24, 128]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 16,
              "column": 6
            },
            "end": {
              "line": 26,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "unless", [["subexpr", "and", [["get", "hasParentRoute", ["loc", [null, [17, 23], [17, 37]]]], ["subexpr", "not", [["get", "saveBeforeRouteLeave", ["loc", [null, [17, 43], [17, 63]]]]], [], ["loc", [null, [17, 38], [17, 64]]]]], [], ["loc", [null, [17, 18], [17, 65]]]]], [], 0, null, ["loc", [null, [17, 8], [19, 19]]]], ["block", "unless", [["subexpr", "and", [["get", "hasParentRoute", ["loc", [null, [20, 23], [20, 37]]]], ["subexpr", "not", [["get", "saveBeforeRouteLeave", ["loc", [null, [20, 43], [20, 63]]]]], [], ["loc", [null, [20, 38], [20, 64]]]]], [], ["loc", [null, [20, 18], [20, 65]]]]], [], 1, null, ["loc", [null, [20, 8], [22, 19]]]], ["block", "unless", [["subexpr", "and", [["get", "model.isNew", ["loc", [null, [23, 23], [23, 34]]]], ["subexpr", "or", [["subexpr", "not", [["get", "hasParentRoute", ["loc", [null, [23, 44], [23, 58]]]]], [], ["loc", [null, [23, 39], [23, 59]]]], ["subexpr", "and", [["get", "hasParentRoute", ["loc", [null, [23, 65], [23, 79]]]], ["get", "saveBeforeRouteLeave", ["loc", [null, [23, 80], [23, 100]]]]], [], ["loc", [null, [23, 60], [23, 101]]]]], [], ["loc", [null, [23, 35], [23, 102]]]]], [], ["loc", [null, [23, 18], [23, 103]]]]], [], 2, null, ["loc", [null, [23, 8], [25, 19]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    var child2 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 32,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.category", ["loc", [null, [34, 6], [34, 31]]]]],
        locals: [],
        templates: []
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 51,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.eventId", ["loc", [null, [49, 6], [49, 30]]]]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 62,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.priority", ["loc", [null, [64, 6], [64, 31]]]]],
        locals: [],
        templates: []
      };
    })();
    var child5 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 77,
              "column": 2
            },
            "end": {
              "line": 81,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.severity", ["loc", [null, [79, 6], [79, 31]]]]],
        locals: [],
        templates: []
      };
    })();
    var child6 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 92,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.title", ["loc", [null, [94, 6], [94, 28]]]]],
        locals: [],
        templates: []
      };
    })();
    var child7 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 108,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);
          return morphs;
        },
        statements: [["content", "model.errors.timestamp", ["loc", [null, [109, 28], [109, 54]]]]],
        locals: [],
        templates: []
      };
    })();
    var child8 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 119,
              "column": 2
            },
            "end": {
              "line": 123,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.machineName", ["loc", [null, [121, 6], [121, 34]]]]],
        locals: [],
        templates: []
      };
    })();
    var child9 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 134,
              "column": 2
            },
            "end": {
              "line": 138,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.appDomainName", ["loc", [null, [136, 6], [136, 36]]]]],
        locals: [],
        templates: []
      };
    })();
    var child10 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 149,
              "column": 2
            },
            "end": {
              "line": 153,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.processId", ["loc", [null, [151, 6], [151, 32]]]]],
        locals: [],
        templates: []
      };
    })();
    var child11 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 164,
              "column": 2
            },
            "end": {
              "line": 168,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.processName", ["loc", [null, [166, 6], [166, 34]]]]],
        locals: [],
        templates: []
      };
    })();
    var child12 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 179,
              "column": 2
            },
            "end": {
              "line": 183,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.threadName", ["loc", [null, [181, 6], [181, 33]]]]],
        locals: [],
        templates: []
      };
    })();
    var child13 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 194,
              "column": 2
            },
            "end": {
              "line": 198,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.win32ThreadId", ["loc", [null, [196, 6], [196, 36]]]]],
        locals: [],
        templates: []
      };
    })();
    var child14 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 209,
              "column": 2
            },
            "end": {
              "line": 213,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.message", ["loc", [null, [211, 6], [211, 30]]]]],
        locals: [],
        templates: []
      };
    })();
    var child15 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 224,
              "column": 2
            },
            "end": {
              "line": 228,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("span");
          dom.setAttribute(el1, "style", "color:red");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["content", "model.errors.formattedMessage", ["loc", [null, [226, 6], [226, 39]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 239,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-e.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        dom.setAttribute(el1, "class", "ui header");
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("form");
        dom.setAttribute(el1, "class", "ui form flexberry-vertical-form");
        dom.setAttribute(el1, "role", "form");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "field");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "flexberry-edit-panel");
        var el5 = dom.createTextNode("\n");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("      ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("button");
        dom.setAttribute(el5, "type", "submit");
        dom.setAttribute(el5, "class", "ui button close-button");
        var el6 = dom.createComment("");
        dom.appendChild(el5, el6);
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n    ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n  ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createTextNode("Timestamp");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "field");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element3 = dom.childAt(fragment, [3]);
        var element4 = dom.childAt(element3, [1, 1, 1]);
        var element5 = dom.childAt(element4, [3]);
        var element6 = dom.childAt(element3, [3]);
        var element7 = dom.childAt(element3, [5]);
        var element8 = dom.childAt(element3, [7]);
        var element9 = dom.childAt(element3, [9]);
        var element10 = dom.childAt(element3, [11]);
        var element11 = dom.childAt(element3, [13]);
        var element12 = dom.childAt(element3, [15]);
        var element13 = dom.childAt(element3, [17]);
        var element14 = dom.childAt(element3, [19]);
        var element15 = dom.childAt(element3, [21]);
        var element16 = dom.childAt(element3, [23]);
        var element17 = dom.childAt(element3, [25]);
        var element18 = dom.childAt(element3, [27]);
        var element19 = dom.childAt(element3, [29]);
        var morphs = new Array(32);
        morphs[0] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        morphs[1] = dom.createMorphAt(element4, 1, 1);
        morphs[2] = dom.createElementMorph(element5);
        morphs[3] = dom.createMorphAt(element5, 0, 0);
        morphs[4] = dom.createMorphAt(element6, 1, 1);
        morphs[5] = dom.createMorphAt(element6, 3, 3);
        morphs[6] = dom.createMorphAt(element7, 1, 1);
        morphs[7] = dom.createMorphAt(element7, 3, 3);
        morphs[8] = dom.createMorphAt(element8, 1, 1);
        morphs[9] = dom.createMorphAt(element8, 3, 3);
        morphs[10] = dom.createMorphAt(element9, 1, 1);
        morphs[11] = dom.createMorphAt(element9, 3, 3);
        morphs[12] = dom.createMorphAt(element10, 1, 1);
        morphs[13] = dom.createMorphAt(element10, 3, 3);
        morphs[14] = dom.createMorphAt(element11, 3, 3);
        morphs[15] = dom.createMorphAt(element11, 5, 5);
        morphs[16] = dom.createMorphAt(element12, 1, 1);
        morphs[17] = dom.createMorphAt(element12, 3, 3);
        morphs[18] = dom.createMorphAt(element13, 1, 1);
        morphs[19] = dom.createMorphAt(element13, 3, 3);
        morphs[20] = dom.createMorphAt(element14, 1, 1);
        morphs[21] = dom.createMorphAt(element14, 3, 3);
        morphs[22] = dom.createMorphAt(element15, 1, 1);
        morphs[23] = dom.createMorphAt(element15, 3, 3);
        morphs[24] = dom.createMorphAt(element16, 1, 1);
        morphs[25] = dom.createMorphAt(element16, 3, 3);
        morphs[26] = dom.createMorphAt(element17, 1, 1);
        morphs[27] = dom.createMorphAt(element17, 3, 3);
        morphs[28] = dom.createMorphAt(element18, 1, 1);
        morphs[29] = dom.createMorphAt(element18, 3, 3);
        morphs[30] = dom.createMorphAt(element19, 1, 1);
        morphs[31] = dom.createMorphAt(element19, 3, 3);
        return morphs;
      },
      statements: [["block", "if", [["get", "errorMessages", ["loc", [null, [2, 6], [2, 19]]]]], [], 0, null, ["loc", [null, [2, 0], [11, 7]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [16, 16], [16, 24]]]]], [], 1, null, ["loc", [null, [16, 6], [26, 17]]]], ["element", "action", ["close"], [], ["loc", [null, [27, 59], [27, 77]]]], ["inline", "t", ["forms.edit-form.close-button-text"], [], ["loc", [null, [27, 78], [27, 119]]]], ["block", "if", [["get", "model.errors.category", ["loc", [null, [32, 8], [32, 29]]]]], [], 2, null, ["loc", [null, [32, 2], [36, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [38, 13], [38, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.category", ["loc", [null, [40, 10], [40, 24]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.category", ["loc", [null, [41, 14], [41, 35]]]], "error", ""], [], ["loc", [null, [41, 10], [41, 47]]]], "label", "Category"], ["loc", [null, [37, 2], [43, 4]]]], ["block", "if", [["get", "model.errors.eventId", ["loc", [null, [47, 8], [47, 28]]]]], [], 3, null, ["loc", [null, [47, 2], [51, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [53, 13], [53, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.eventId", ["loc", [null, [55, 10], [55, 23]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.eventId", ["loc", [null, [56, 14], [56, 34]]]], "error", ""], [], ["loc", [null, [56, 10], [56, 46]]]], "label", "Event id"], ["loc", [null, [52, 2], [58, 4]]]], ["block", "if", [["get", "model.errors.priority", ["loc", [null, [62, 8], [62, 29]]]]], [], 4, null, ["loc", [null, [62, 2], [66, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [68, 13], [68, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.priority", ["loc", [null, [70, 10], [70, 24]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.priority", ["loc", [null, [71, 14], [71, 35]]]], "error", ""], [], ["loc", [null, [71, 10], [71, 47]]]], "label", "Priority"], ["loc", [null, [67, 2], [73, 4]]]], ["block", "if", [["get", "model.errors.severity", ["loc", [null, [77, 8], [77, 29]]]]], [], 5, null, ["loc", [null, [77, 2], [81, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [83, 13], [83, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.severity", ["loc", [null, [85, 10], [85, 24]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.severity", ["loc", [null, [86, 14], [86, 35]]]], "error", ""], [], ["loc", [null, [86, 10], [86, 47]]]], "label", "Severity"], ["loc", [null, [82, 2], [88, 4]]]], ["block", "if", [["get", "model.errors.title", ["loc", [null, [92, 8], [92, 26]]]]], [], 6, null, ["loc", [null, [92, 2], [96, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [98, 13], [98, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.title", ["loc", [null, [100, 10], [100, 21]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.title", ["loc", [null, [101, 14], [101, 32]]]], "error", ""], [], ["loc", [null, [101, 10], [101, 44]]]], "label", "Title"], ["loc", [null, [97, 2], [103, 4]]]], ["block", "if", [["get", "model.errors.timestamp", ["loc", [null, [108, 8], [108, 30]]]]], [], 7, null, ["loc", [null, [108, 2], [110, 9]]]], ["inline", "flexberry-datepicker", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [112, 13], [112, 21]]]]], [], []], "value", ["subexpr", "@mut", [["get", "model.timestamp", ["loc", [null, [113, 10], [113, 25]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.timestamp", ["loc", [null, [114, 14], [114, 36]]]], "error", ""], [], ["loc", [null, [114, 10], [114, 48]]]]], ["loc", [null, [111, 2], [115, 4]]]], ["block", "if", [["get", "model.errors.machineName", ["loc", [null, [119, 8], [119, 32]]]]], [], 8, null, ["loc", [null, [119, 2], [123, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [125, 13], [125, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.machineName", ["loc", [null, [127, 10], [127, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.machineName", ["loc", [null, [128, 14], [128, 38]]]], "error", ""], [], ["loc", [null, [128, 10], [128, 50]]]], "label", "Machine name"], ["loc", [null, [124, 2], [130, 4]]]], ["block", "if", [["get", "model.errors.appDomainName", ["loc", [null, [134, 8], [134, 34]]]]], [], 9, null, ["loc", [null, [134, 2], [138, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [140, 13], [140, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.appDomainName", ["loc", [null, [142, 10], [142, 29]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.appDomainName", ["loc", [null, [143, 14], [143, 40]]]], "error", ""], [], ["loc", [null, [143, 10], [143, 52]]]], "label", "App domain name"], ["loc", [null, [139, 2], [145, 4]]]], ["block", "if", [["get", "model.errors.processId", ["loc", [null, [149, 8], [149, 30]]]]], [], 10, null, ["loc", [null, [149, 2], [153, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [155, 13], [155, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.processId", ["loc", [null, [157, 10], [157, 25]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.processId", ["loc", [null, [158, 14], [158, 36]]]], "error", ""], [], ["loc", [null, [158, 10], [158, 48]]]], "label", "Process id"], ["loc", [null, [154, 2], [160, 4]]]], ["block", "if", [["get", "model.errors.processName", ["loc", [null, [164, 8], [164, 32]]]]], [], 11, null, ["loc", [null, [164, 2], [168, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [170, 13], [170, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.processName", ["loc", [null, [172, 10], [172, 27]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.processName", ["loc", [null, [173, 14], [173, 38]]]], "error", ""], [], ["loc", [null, [173, 10], [173, 50]]]], "label", "Process name"], ["loc", [null, [169, 2], [175, 4]]]], ["block", "if", [["get", "model.errors.threadName", ["loc", [null, [179, 8], [179, 31]]]]], [], 12, null, ["loc", [null, [179, 2], [183, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [185, 13], [185, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.threadName", ["loc", [null, [187, 10], [187, 26]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.threadName", ["loc", [null, [188, 14], [188, 37]]]], "error", ""], [], ["loc", [null, [188, 10], [188, 49]]]], "label", "Thread name"], ["loc", [null, [184, 2], [190, 4]]]], ["block", "if", [["get", "model.errors.win32ThreadId", ["loc", [null, [194, 8], [194, 34]]]]], [], 13, null, ["loc", [null, [194, 2], [198, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [200, 13], [200, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.win32ThreadId", ["loc", [null, [202, 10], [202, 29]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.win32ThreadId", ["loc", [null, [203, 14], [203, 40]]]], "error", ""], [], ["loc", [null, [203, 10], [203, 52]]]], "label", "Win32 thread id"], ["loc", [null, [199, 2], [205, 4]]]], ["block", "if", [["get", "model.errors.message", ["loc", [null, [209, 8], [209, 28]]]]], [], 14, null, ["loc", [null, [209, 2], [213, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [215, 13], [215, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.message", ["loc", [null, [217, 10], [217, 23]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.message", ["loc", [null, [218, 14], [218, 34]]]], "error", ""], [], ["loc", [null, [218, 10], [218, 46]]]], "label", "Message"], ["loc", [null, [214, 2], [220, 4]]]], ["block", "if", [["get", "model.errors.formattedMessage", ["loc", [null, [224, 8], [224, 37]]]]], [], 15, null, ["loc", [null, [224, 2], [228, 9]]]], ["inline", "flexberry-field", [], ["readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [230, 13], [230, 21]]]]], [], []], "required", true, "value", ["subexpr", "@mut", [["get", "model.formattedMessage", ["loc", [null, [232, 10], [232, 32]]]]], [], []], "class", ["subexpr", "if", [["get", "model.errors.formattedMessage", ["loc", [null, [233, 14], [233, 43]]]], "error", ""], [], ["loc", [null, [233, 10], [233, 55]]]], "label", "Formatted message"], ["loc", [null, [229, 2], [235, 4]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4, child5, child6, child7, child8, child9, child10, child11, child12, child13, child14, child15]
    };
  })());
});
define("dummy/templates/i-i-s-caseberry-logging-objects-application-log-l", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-l.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["forms.i-i-s-caseberry-logging-objects-application-log-l.caption"], [], ["loc", [null, [1, 4], [1, 75]]]], ["inline", "flexberry-objectlistview", [], ["content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [4, 12], [4, 17]]]]], [], []], "modelName", "i-i-s-caseberry-logging-objects-application-log", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "createNewButton", false, "refreshButton", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [10, 12], [10, 27]]]]], [], []], "orderable", true, "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [12, 10], [12, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [13, 17], [13, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [14, 18], [14, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [15, 22], [15, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [16, 20], [16, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [17, 16], [17, 27]]]]], [], []], "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [18, 17], [18, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [19, 23], [19, 52]]]], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [20, 17], [20, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [21, 13], [21, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [22, 13], [22, 32]]]], "componentName", "IISLoggingObjectListView"], ["loc", [null, [3, 2], [24, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/i-i-s-caseberry-logging-objects-application-log-l/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/i-i-s-caseberry-logging-objects-application-log-l/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n    ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n        Loading ...\n        ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode(" \n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/loading", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/loading.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "loading-pane");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "loading-message");
        var el3 = dom.createTextNode("\n    Loading ...\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "spinner");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/lookup-dialog-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 41,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/lookup-dialog-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "lookup-list");
        dom.setAttribute(el1, "class", "list-group");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 1, 1);
        return morphs;
      },
      statements: [["inline", "flexberry-objectlistview", [], ["class", "ui bottom attached", "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [4, 20], [4, 35]]]]], [], []], "content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [5, 12], [5, 17]]]]], [], []], "selectedRecord", ["subexpr", "@mut", [["get", "currentLookupRow", ["loc", [null, [6, 19], [6, 35]]]]], [], []], "componentMode", "lookupform", "componentName", "flexberry-objectlistview-at-lookup", "showEditMenuItemInRow", false, "createNewButton", false, "showCheckBoxInRow", false, "colsConfigButton", false, "columnsWidthAutoresize", true, "filterByAnyMatch", ["subexpr", "action", ["filterByAnyMatch"], [], ["loc", [null, [16, 21], [16, 48]]]], "filterText", ["subexpr", "@mut", [["get", "filter", ["loc", [null, [17, 15], [17, 21]]]]], [], []], "filters", ["subexpr", "@mut", [["get", "filters", ["loc", [null, [18, 12], [18, 19]]]]], [], []], "applyFilters", ["subexpr", "action", ["applyFilters"], [], ["loc", [null, [19, 17], [19, 40]]]], "resetFilters", ["subexpr", "action", ["resetFilters"], [], ["loc", [null, [20, 17], [20, 40]]]], "customProperties", ["subexpr", "@mut", [["get", "customPropertiesData", ["loc", [null, [22, 21], [22, 41]]]]], [], []], "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [24, 10], [24, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [25, 17], [25, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [26, 18], [26, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [27, 22], [27, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [28, 20], [28, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [29, 16], [29, 27]]]]], [], []], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [30, 17], [30, 40]]]], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [31, 13], [31, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [32, 13], [32, 32]]]], "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [34, 12], [34, 27]]]]], [], []], "orderable", true, "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [36, 17], [36, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [37, 23], [37, 52]]]], "notUseUserSettings", true], ["loc", [null, [2, 2], [39, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/lookup-dialog", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/lookup-dialog.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "outlet", ["modal-content"], [], ["loc", [null, [10, 2], [10, 28]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/lookup-dialog.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "modal-dialog", [], ["title", ["subexpr", "@mut", [["get", "title", ["loc", [null, [2, 8], [2, 13]]]]], [], []], "sizeClass", ["subexpr", "@mut", [["get", "sizeClass", ["loc", [null, [3, 12], [3, 21]]]]], [], []], "close", "removeModalDialog", "created", "createdModalDialog", "useOkButton", false, "useCloseButton", false, "componentName", ["subexpr", "@mut", [["get", "componentName", ["loc", [null, [8, 16], [8, 29]]]]], [], []]], 0, null, ["loc", [null, [1, 0], [11, 17]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/mobile/application", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type", "multiple-nodes"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 4,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/mobile/application.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          return morphs;
        },
        statements: [["content", "outlet", ["loc", [null, [2, 2], [2, 12]]]], ["inline", "outlet", ["modal"], [], ["loc", [null, [3, 2], [3, 20]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 13,
                "column": 0
              }
            },
            "moduleName": "dummy/templates/mobile/application.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("  ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("a");
            dom.setAttribute(el1, "class", "item");
            dom.setAttribute(el1, "target", "_blank");
            var el2 = dom.createTextNode("\n    ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n  ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n  ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(4);
            morphs[0] = dom.createAttrMorph(element2, 'href');
            morphs[1] = dom.createAttrMorph(element2, 'title');
            morphs[2] = dom.createMorphAt(element2, 1, 1);
            morphs[3] = dom.createMorphAt(fragment, 3, 3, contextualElement);
            return morphs;
          },
          statements: [["attribute", "href", ["get", "addonVersionHref", ["loc", [null, [7, 11], [7, 27]]]]], ["attribute", "title", ["subexpr", "t", ["forms.application.sitemap.application-version.title"], [], ["loc", [null, [9, 10], [9, 69]]]]], ["inline", "t", ["forms.application.sitemap.application-version.caption"], ["version", ["subexpr", "@mut", [["get", "addonVersion", ["loc", [null, [10, 72], [10, 84]]]]], [], []]], ["loc", [null, [10, 4], [10, 86]]]], ["inline", "render", ["sitemap", ["get", "sitemap", ["loc", [null, [12, 21], [12, 28]]]]], [], ["loc", [null, [12, 2], [12, 30]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 40,
                  "column": 14
                },
                "end": {
                  "line": 44,
                  "column": 14
                }
              },
              "moduleName": "dummy/templates/mobile/application.hbs"
            },
            isEmpty: false,
            arity: 1,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("option");
              var el2 = dom.createTextNode("\n                  ");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("\n                ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var morphs = new Array(3);
              morphs[0] = dom.createAttrMorph(element0, 'value');
              morphs[1] = dom.createAttrMorph(element0, 'selected');
              morphs[2] = dom.createMorphAt(element0, 1, 1);
              return morphs;
            },
            statements: [["attribute", "value", ["get", "locale", ["loc", [null, [41, 32], [41, 38]]]]], ["attribute", "selected", ["subexpr", "eq", [["subexpr", "get", [["get", "i18n", ["loc", [null, [41, 60], [41, 64]]]], "locale"], [], ["loc", [null, [41, 55], [41, 74]]]], ["get", "locale", ["loc", [null, [41, 75], [41, 81]]]]], [], ["loc", [null, [41, 50], [41, 83]]]]], ["content", "locale", ["loc", [null, [42, 18], [42, 28]]]]],
            locals: ["locale"],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 38,
                "column": 10
              },
              "end": {
                "line": 46,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/mobile/application.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("select");
            dom.setAttribute(el1, "class", "ui dropdown");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element1, 'onchange');
            morphs[1] = dom.createMorphAt(element1, 1, 1);
            return morphs;
          },
          statements: [["attribute", "onchange", ["subexpr", "action", [["subexpr", "mut", [["subexpr", "get", [["get", "i18n", ["loc", [null, [39, 68], [39, 72]]]], "locale"], [], ["loc", [null, [39, 63], [39, 82]]]]], [], ["loc", [null, [39, 58], [39, 83]]]]], ["value", "target.value"], ["loc", [null, [39, 49], [39, 106]]]]], ["block", "each", [["get", "locales", ["loc", [null, [40, 22], [40, 29]]]]], [], 0, null, ["loc", [null, [40, 14], [44, 23]]]]],
          locals: [],
          templates: [child0]
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 46,
                "column": 10
              },
              "end": {
                "line": 53,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/mobile/application.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "flexberry-dropdown", [], ["class", "compact", "items", ["subexpr", "@mut", [["get", "locales", ["loc", [null, [49, 20], [49, 27]]]]], [], []], "value", ["subexpr", "@mut", [["get", "i18n.locale", ["loc", [null, [50, 20], [50, 31]]]]], [], []], "placeholder", ["subexpr", "t", ["forms.application.header.menu.language-dropdown.placeholder"], [], ["loc", [null, [51, 26], [51, 91]]]]], ["loc", [null, [47, 12], [52, 14]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 92,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/mobile/application.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "bgw-fix");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "background-logo mobile");
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "ui attached menu mobile");
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4, "class", "ui container flex-container");
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("a");
          dom.setAttribute(el5, "class", "launch icon item mobile");
          var el6 = dom.createTextNode("\n          ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("i");
          dom.setAttribute(el6, "class", "sidebar icon text-menu-show");
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n          ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("i");
          dom.setAttribute(el6, "class", "sidebar icon hidden text-menu-hide hidden-text");
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n        ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("div");
          dom.setAttribute(el5, "class", "right item");
          var el6 = dom.createTextNode("\n          ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("label");
          dom.setAttribute(el6, "style", "margin-right: 5px;");
          var el7 = dom.createTextNode("\n            ");
          dom.appendChild(el6, el7);
          var el7 = dom.createComment("");
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n          ");
          dom.appendChild(el6, el7);
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n          ");
          dom.appendChild(el5, el6);
          var el6 = dom.createComment("");
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n        ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("div");
          dom.setAttribute(el5, "class", "right item lang");
          var el6 = dom.createTextNode("\n          ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("label");
          dom.setAttribute(el6, "style", "margin-right: 5px;");
          var el7 = dom.createTextNode("\n            ");
          dom.appendChild(el6, el7);
          var el7 = dom.createComment("");
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n          ");
          dom.appendChild(el6, el7);
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n");
          dom.appendChild(el5, el6);
          var el6 = dom.createComment("");
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("        ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n      ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n    ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n  ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "id", "example-mobile");
          dom.setAttribute(el1, "class", "pusher");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "full height");
          dom.setAttribute(el3, "style", "min-height: 94.8vh!important;");
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4, "class", "flexberry-content ui attached segment");
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("div");
          dom.setAttribute(el5, "class", "ui main container");
          var el6 = dom.createTextNode("\n          ");
          dom.appendChild(el5, el6);
          var el6 = dom.createElement("div");
          dom.setAttribute(el6, "class", "stackable grid container");
          var el7 = dom.createTextNode("\n            ");
          dom.appendChild(el6, el7);
          var el7 = dom.createComment("");
          dom.appendChild(el6, el7);
          var el7 = dom.createTextNode("\n          ");
          dom.appendChild(el6, el7);
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n        ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n      ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n    ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n  ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui main container");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui vertical footer segment");
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "ui container flex-container mobile-footer");
          var el3 = dom.createTextNode("\n    ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "ui text menu");
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("a");
          dom.setAttribute(el4, "class", "brand item");
          dom.setAttribute(el4, "href", "#");
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          var el5 = dom.createComment("");
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n      ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n      ");
          dom.appendChild(el3, el4);
          var el4 = dom.createElement("div");
          dom.setAttribute(el4, "class", "right menu");
          var el5 = dom.createTextNode("\n        ");
          dom.appendChild(el4, el5);
          var el5 = dom.createElement("a");
          dom.setAttribute(el5, "class", "item");
          dom.setAttribute(el5, "target", "_blank");
          var el6 = dom.createTextNode("\n            ");
          dom.appendChild(el5, el6);
          var el6 = dom.createComment("");
          dom.appendChild(el5, el6);
          var el6 = dom.createTextNode("\n        ");
          dom.appendChild(el5, el6);
          dom.appendChild(el4, el5);
          var el5 = dom.createTextNode("\n      ");
          dom.appendChild(el4, el5);
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("\n    ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n  ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1, 1, 1, 1]);
          var element4 = dom.childAt(element3, [1]);
          var element5 = dom.childAt(element3, [3]);
          var element6 = dom.childAt(element3, [5]);
          var element7 = dom.childAt(fragment, [3, 1]);
          var element8 = dom.childAt(fragment, [7, 1, 1]);
          var element9 = dom.childAt(element8, [3, 1]);
          var morphs = new Array(14);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createAttrMorph(element4, 'title');
          morphs[2] = dom.createElementMorph(element4);
          morphs[3] = dom.createMorphAt(dom.childAt(element5, [1]), 1, 1);
          morphs[4] = dom.createMorphAt(element5, 3, 3);
          morphs[5] = dom.createMorphAt(dom.childAt(element6, [1]), 1, 1);
          morphs[6] = dom.createMorphAt(element6, 3, 3);
          morphs[7] = dom.createAttrMorph(element7, 'class');
          morphs[8] = dom.createMorphAt(dom.childAt(element7, [1, 1, 1, 1]), 1, 1);
          morphs[9] = dom.createMorphAt(dom.childAt(fragment, [5]), 1, 1);
          morphs[10] = dom.createMorphAt(dom.childAt(element8, [1]), 1, 1);
          morphs[11] = dom.createAttrMorph(element9, 'href');
          morphs[12] = dom.createAttrMorph(element9, 'title');
          morphs[13] = dom.createMorphAt(element9, 1, 1);
          dom.insertBoundary(fragment, 0);
          return morphs;
        },
        statements: [["block", "ui-sidebar", [], ["class", "mobile inverted vertical main menu"], 0, null, ["loc", [null, [5, 0], [13, 15]]]], ["attribute", "title", ["subexpr", "t", ["forms.application.header.menu.sitemap-button.title"], [], ["loc", [null, [20, 16], [20, 74]]]]], ["element", "action", ["toggleSidebarMobile"], [], ["loc", [null, [18, 11], [18, 43]]]], ["inline", "t", ["forms.application.header.menu.user-settings-service-checkbox.caption"], [], ["loc", [null, [26, 12], [26, 88]]]], ["inline", "flexberry-checkbox", [], ["class", "toggle", "value", ["subexpr", "@mut", [["get", "userSettingsService.isUserSettingsServiceEnabled", ["loc", [null, [30, 18], [30, 66]]]]], [], []]], ["loc", [null, [28, 10], [31, 12]]]], ["inline", "t", ["forms.application.header.menu.language-dropdown.caption"], [], ["loc", [null, [35, 12], [35, 75]]]], ["block", "if", [["get", "browserIsInternetExplorer", ["loc", [null, [38, 16], [38, 41]]]]], [], 1, 2, ["loc", [null, [38, 10], [53, 17]]]], ["attribute", "class", ["concat", ["ui form ", ["get", "objectlistviewEventsService.loadingState", ["loc", [null, [60, 24], [60, 64]]]]]]], ["content", "outlet", ["loc", [null, [65, 12], [65, 22]]]], ["inline", "outlet", ["modal"], [], ["loc", [null, [73, 2], [73, 20]]]], ["inline", "t", ["forms.application.footer.application-name"], [], ["loc", [null, [79, 8], [79, 57]]]], ["attribute", "href", ["get", "addonVersionHref", ["loc", [null, [83, 17], [83, 33]]]]], ["attribute", "title", ["subexpr", "t", ["forms.application.footer.application-version.title"], [], ["loc", [null, [85, 16], [85, 74]]]]], ["inline", "t", ["forms.application.footer.application-version.caption"], ["version", ["subexpr", "@mut", [["get", "addonVersion", ["loc", [null, [86, 79], [86, 91]]]]], [], []]], ["loc", [null, [86, 12], [86, 93]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 93,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/mobile/application.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "isInAcceptanceTestMode", ["loc", [null, [1, 6], [1, 28]]]]], [], 0, 1, ["loc", [null, [1, 0], [92, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/mobile/components/flexberry-file", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 23,
                  "column": 10
                },
                "end": {
                  "line": 28,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/mobile/components/flexberry-file.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("img");
              dom.setAttribute(el1, "class", "flexberry-file-image-preview");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var element0 = dom.childAt(fragment, [1]);
              var morphs = new Array(2);
              morphs[0] = dom.createAttrMorph(element0, 'src');
              morphs[1] = dom.createAttrMorph(element0, 'alt');
              return morphs;
            },
            statements: [["attribute", "src", ["get", "_previewImageAsBase64String", ["loc", [null, [26, 20], [26, 47]]]]], ["attribute", "alt", ["subexpr", "t", ["components.flexberry-file.preview-image-alternative-text"], [], ["loc", [null, [27, 18], [27, 82]]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 21,
                "column": 6
              },
              "end": {
                "line": 31,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/mobile/components/flexberry-file.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "flexberry-file-image-preview-wrapper ui small image");
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var element2 = dom.childAt(element1, [3]);
            var morphs = new Array(3);
            morphs[0] = dom.createElementMorph(element1);
            morphs[1] = dom.createMorphAt(element1, 1, 1);
            morphs[2] = dom.createAttrMorph(element2, 'class');
            return morphs;
          },
          statements: [["element", "action", ["viewLoadedImage"], [], ["loc", [null, [22, 73], [22, 101]]]], ["block", "unless", [["get", "_previewDownloadIsInProgress", ["loc", [null, [23, 20], [23, 48]]]]], [], 0, null, ["loc", [null, [23, 10], [28, 21]]]], ["attribute", "class", ["concat", ["ui ", ["subexpr", "if", [["get", "_previewDownloadIsInProgress", ["loc", [null, [29, 30], [29, 58]]]], "active", ""], [], ["loc", [null, [29, 25], [29, 72]]]], " loader"]]]],
          locals: [],
          templates: [child0]
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 4
            },
            "end": {
              "line": 32,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/flexberry-file.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "flexberry-file-menu");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["inline", "flexberry-menu", [], ["class", "left pointing", "items", ["subexpr", "@mut", [["get", "_menuItems", ["loc", [null, [15, 16], [15, 26]]]]], [], []], "callItemsOnClickCallbacks", false, "onItemClick", ["subexpr", "action", ["onMenuItemClick"], [], ["loc", [null, [17, 22], [17, 48]]]], "collapseMenuOnItemClick", true], ["loc", [null, [13, 8], [19, 10]]]], ["block", "if", [["get", "showPreview", ["loc", [null, [21, 12], [21, 23]]]]], [], 0, null, ["loc", [null, [21, 6], [31, 13]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/mobile/components/flexberry-file.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "flexberry-file-grid ui grid");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("input");
        dom.setAttribute(el2, "type", "file");
        dom.setAttribute(el2, "name", "files[]");
        dom.setAttribute(el2, "class", "flexberry-file-file-input");
        dom.setAttribute(el2, "style", "display:none");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "row");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("label");
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "flexberry-file-download-iframes-container");
        dom.setAttribute(el1, "style", "display: none;");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "flexberry-file-error-modal-dialog ui small basic modal");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "ui icon header");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "content");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "flexberry-file-error-modal-dialog-content center aligned ui grid");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("div");
        dom.setAttribute(el2, "class", "center aligned ui grid");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "actions");
        var el4 = dom.createTextNode("\n      ");
        dom.appendChild(el3, el4);
        var el4 = dom.createElement("div");
        dom.setAttribute(el4, "class", "flexberry-file-error-modal-dialog-ok-button ui approve green inverted button");
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createElement("i");
        dom.setAttribute(el5, "class", "checkmark icon");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n        ");
        dom.appendChild(el4, el5);
        var el5 = dom.createComment("");
        dom.appendChild(el4, el5);
        var el5 = dom.createTextNode("\n      ");
        dom.appendChild(el4, el5);
        dom.appendChild(el3, el4);
        var el4 = dom.createTextNode("\n    ");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element3 = dom.childAt(fragment, [0]);
        var element4 = dom.childAt(element3, [1]);
        var element5 = dom.childAt(element3, [3]);
        var element6 = dom.childAt(element5, [1]);
        var element7 = dom.childAt(fragment, [4]);
        var morphs = new Array(10);
        morphs[0] = dom.createAttrMorph(element4, 'id');
        morphs[1] = dom.createAttrMorph(element6, 'class');
        morphs[2] = dom.createAttrMorph(element6, 'title');
        morphs[3] = dom.createAttrMorph(element6, 'for');
        morphs[4] = dom.createElementMorph(element6);
        morphs[5] = dom.createMorphAt(element6, 1, 1);
        morphs[6] = dom.createMorphAt(element5, 3, 3);
        morphs[7] = dom.createMorphAt(dom.childAt(element7, [1]), 1, 1);
        morphs[8] = dom.createMorphAt(dom.childAt(element7, [3, 1]), 1, 1);
        morphs[9] = dom.createMorphAt(dom.childAt(element7, [5, 1, 1]), 3, 3);
        return morphs;
      },
      statements: [["attribute", "id", ["get", "_fileInputId", ["loc", [null, [2, 41], [2, 53]]]]], ["attribute", "class", ["concat", ["flexberry-file-add-button ui icon ", ["get", "buttonClass", ["loc", [null, [5, 49], [5, 60]]]], " ", ["subexpr", "unless", [["get", "_addButtonIsEnabled", ["loc", [null, [5, 72], [5, 91]]]], "disabled"], [], ["loc", [null, [5, 63], [5, 104]]]], " ", ["subexpr", "if", [["subexpr", "or", [["get", "_hasFile", ["loc", [null, [5, 114], [5, 122]]]], ["get", "readonly", ["loc", [null, [5, 123], [5, 131]]]]], [], ["loc", [null, [5, 110], [5, 132]]]], "hidden"], [], ["loc", [null, [5, 105], [5, 143]]]], " button"]]], ["attribute", "title", ["subexpr", "t", ["components.flexberry-file.add-button-title"], [], ["loc", [null, [6, 12], [6, 62]]]]], ["attribute", "for", ["get", "_fileInputId", ["loc", [null, [7, 12], [7, 24]]]]], ["element", "action", ["addButtonClick"], ["on", "click", "preventDefault", false], ["loc", [null, [8, 6], [8, 65]]]], ["inline", "t", ["components.flexberry-file.add-button-caption"], [], ["loc", [null, [9, 4], [9, 56]]]], ["block", "if", [["get", "_hasFile", ["loc", [null, [11, 10], [11, 18]]]]], [], 0, null, ["loc", [null, [11, 4], [32, 11]]]], ["content", "_errorModalDialogCaption", ["loc", [null, [40, 4], [40, 32]]]], ["content", "_errorModalDialogContent", ["loc", [null, [44, 6], [44, 34]]]], ["inline", "t", ["components.flexberry-file.error-dialog-ok-button-caption"], [], ["loc", [null, [51, 8], [51, 72]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/mobile/components/flexberry-lookup", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/mobile/components/flexberry-lookup.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "flexberry-dropdown", [], ["placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [3, 16], [3, 27]]]]], [], []], "class", "search", "value", ["subexpr", "@mut", [["get", "displayValue", ["loc", [null, [5, 10], [5, 22]]]]], [], []], "readonly", ["subexpr", "if", [["get", "readonly", ["loc", [null, [6, 17], [6, 25]]]], "readonly"], [], ["loc", [null, [6, 13], [6, 37]]]], "needChecksOnValue", false, "isSearch", true, "isSearchReadOnly", ["subexpr", "@mut", [["get", "dropdownIsSearch", ["loc", [null, [9, 21], [9, 37]]]]], [], []]], ["loc", [null, [2, 2], [10, 4]]]]],
        locals: [],
        templates: []
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 18,
                  "column": 10
                },
                "end": {
                  "line": 20,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/mobile/components/flexberry-lookup.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "yield", ["loc", [null, [19, 12], [19, 21]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 20,
                  "column": 10
                },
                "end": {
                  "line": 22,
                  "column": 10
                }
              },
              "moduleName": "dummy/templates/mobile/components/flexberry-lookup.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("            ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "displayValue", ["loc", [null, [21, 12], [21, 28]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 17,
                "column": 8
              },
              "end": {
                "line": 23,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/flexberry-lookup.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
            dom.insertBoundary(fragment, 0);
            dom.insertBoundary(fragment, null);
            return morphs;
          },
          statements: [["block", "if", [["get", "hasBlock", ["loc", [null, [18, 16], [18, 24]]]]], [], 0, 1, ["loc", [null, [18, 10], [22, 17]]]]],
          locals: [],
          templates: [child0, child1]
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 23,
                "column": 8
              },
              "end": {
                "line": 25,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/flexberry-lookup.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["content", "placeholder", ["loc", [null, [24, 10], [24, 25]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 27,
                "column": 6
              },
              "end": {
                "line": 29,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/mobile/components/flexberry-lookup.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("i");
            dom.setAttribute(el1, "class", "chevron right icon");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      var child3 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 31,
                "column": 4
              },
              "end": {
                "line": 35,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/mobile/components/flexberry-lookup.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("button");
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "remove icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n      ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element0, 'class');
            morphs[1] = dom.createElementMorph(element0);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui icon ", ["get", "removeButtonClass", ["loc", [null, [32, 31], [32, 48]]]], " ", ["subexpr", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [32, 60], [32, 68]]]], ["get", "isBlocked", ["loc", [null, [32, 69], [32, 78]]]]], [], ["loc", [null, [32, 56], [32, 79]]]], " disabled"], [], ["loc", [null, [32, 51], [32, 93]]]], " button"]]], ["element", "action", ["remove", ["get", "removeData", ["loc", [null, [32, 120], [32, 130]]]]], [], ["loc", [null, [32, 102], [32, 132]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 11,
              "column": 0
            },
            "end": {
              "line": 37,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/mobile/components/flexberry-lookup.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "ui action input");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("span");
          dom.setAttribute(el3, "class", "lookup-field");
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("      ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("    ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1]);
          var element2 = dom.childAt(element1, [1]);
          var morphs = new Array(5);
          morphs[0] = dom.createAttrMorph(element2, 'class');
          morphs[1] = dom.createElementMorph(element2);
          morphs[2] = dom.createMorphAt(dom.childAt(element2, [1]), 1, 1);
          morphs[3] = dom.createMorphAt(element2, 3, 3);
          morphs[4] = dom.createMorphAt(element1, 3, 3);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui transparent ", ["subexpr", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [15, 37], [15, 45]]]], ["get", "isBlocked", ["loc", [null, [15, 46], [15, 55]]]]], [], ["loc", [null, [15, 33], [15, 56]]]], " disabled"], [], ["loc", [null, [15, 28], [15, 70]]]], " ", ["subexpr", "if", [["subexpr", "or", [["get", "modalIsBeforeToShow", ["loc", [null, [15, 80], [15, 99]]]], ["get", "modalIsStartToShow", ["loc", [null, [15, 100], [15, 118]]]]], [], ["loc", [null, [15, 76], [15, 119]]]], " loading"], [], ["loc", [null, [15, 71], [15, 132]]]], " icon input "]]], ["element", "action", ["choose", ["get", "chooseData", ["loc", [null, [14, 24], [14, 34]]]]], [], ["loc", [null, [14, 6], [14, 36]]]], ["block", "if", [["get", "value", ["loc", [null, [17, 14], [17, 19]]]]], [], 0, 1, ["loc", [null, [17, 8], [25, 15]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [27, 16], [27, 24]]]]], [], 2, null, ["loc", [null, [27, 6], [29, 17]]]], ["block", "unless", [["get", "readonly", ["loc", [null, [31, 14], [31, 22]]]]], [], 3, null, ["loc", [null, [31, 4], [35, 15]]]]],
        locals: [],
        templates: [child0, child1, child2, child3]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 38,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/mobile/components/flexberry-lookup.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "dropdown", ["loc", [null, [1, 6], [1, 14]]]]], [], 0, 1, ["loc", [null, [1, 0], [37, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/mobile/components/object-list-view-row", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 6,
                "column": 8
              },
              "end": {
                "line": 10,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "cell");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element6 = dom.childAt(fragment, [1, 1]);
            var morphs = new Array(1);
            morphs[0] = dom.createAttrMorph(element6, 'class');
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["asterisk small red icon ", ["subexpr", "unless", [["get", "record.data.hasDirtyAttributes", ["loc", [null, [8, 55], [8, 85]]]], "transparent"], [], ["loc", [null, [8, 46], [8, 101]]]]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 11,
                "column": 8
              },
              "end": {
                "line": 18,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "cell");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
            return morphs;
          },
          statements: [["inline", "flexberry-checkbox", [], ["readonly", ["subexpr", "or", [["get", "readonly", ["loc", [null, [14, 27], [14, 35]]]], ["subexpr", "not", [["get", "record.rowConfig.canBeSelected", ["loc", [null, [14, 41], [14, 71]]]]], [], ["loc", [null, [14, 36], [14, 72]]]]], [], ["loc", [null, [14, 23], [14, 73]]]], "onChange", ["subexpr", "action", [["get", "selectRow", ["loc", [null, [15, 31], [15, 40]]]], ["get", "record", ["loc", [null, [15, 41], [15, 47]]]]], [], ["loc", [null, [15, 23], [15, 48]]]]], ["loc", [null, [13, 12], [16, 14]]]]],
          locals: [],
          templates: []
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 19,
                "column": 8
              },
              "end": {
                "line": 25,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "cell");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("button");
            var el3 = dom.createTextNode("\n              ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("i");
            dom.setAttribute(el3, "class", "minus icon");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element5 = dom.childAt(fragment, [1, 1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element5, 'class');
            morphs[1] = dom.createElementMorph(element5);
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["ui ", ["get", "buttonClass", ["loc", [null, [21, 32], [21, 43]]]], " ", ["subexpr", "if", [["subexpr", "or", [["get", "readonly", ["loc", [null, [21, 55], [21, 63]]]], ["subexpr", "not", [["get", "record.rowConfig.canBeDeleted", ["loc", [null, [21, 69], [21, 98]]]]], [], ["loc", [null, [21, 64], [21, 99]]]]], [], ["loc", [null, [21, 51], [21, 100]]]], "disabled"], [], ["loc", [null, [21, 46], [21, 113]]]], " button"]]], ["element", "action", [["get", "deleteRow", ["loc", [null, [21, 131], [21, 140]]]], ["get", "record", ["loc", [null, [21, 141], [21, 147]]]]], [], ["loc", [null, [21, 122], [21, 149]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 4,
              "column": 4
            },
            "end": {
              "line": 27,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "object-list-view-helper-column-cell");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element7 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(element7, 1, 1);
          morphs[1] = dom.createMorphAt(element7, 2, 2);
          morphs[2] = dom.createMorphAt(element7, 3, 3);
          return morphs;
        },
        statements: [["block", "if", [["get", "showAsteriskInRow", ["loc", [null, [6, 14], [6, 31]]]]], [], 0, null, ["loc", [null, [6, 8], [10, 15]]]], ["block", "if", [["get", "showCheckBoxInRow", ["loc", [null, [11, 14], [11, 31]]]]], [], 1, null, ["loc", [null, [11, 8], [18, 15]]]], ["block", "if", [["get", "showDeleteButtonInRow", ["loc", [null, [19, 14], [19, 35]]]]], [], 2, null, ["loc", [null, [19, 8], [25, 15]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 38,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 6
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("        ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("button");
          var el2 = dom.createTextNode("\n          ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("i");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element3 = dom.childAt(fragment, [1]);
          var element4 = dom.childAt(element3, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element3, 'class');
          morphs[1] = dom.createElementMorph(element3);
          morphs[2] = dom.createAttrMorph(element4, 'class');
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["ui button icon mini ", ["get", "buttonClass", ["loc", [null, [39, 45], [39, 56]]]]]]], ["element", "action", ["expand"], ["bubbles", false], ["loc", [null, [39, 60], [39, 93]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "_expanded", ["loc", [null, [40, 25], [40, 34]]]], "minus", "plus"], [], ["loc", [null, [40, 20], [40, 51]]]], " icon"]]]],
        locals: [],
        templates: []
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 49,
                "column": 10
              },
              "end": {
                "line": 54,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "item");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "edit icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("span");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element1 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element1);
            morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]), 0, 0);
            return morphs;
          },
          statements: [["element", "action", [["get", "rowClick", ["loc", [null, [50, 40], [50, 48]]]], ["get", "record", ["loc", [null, [50, 49], [50, 55]]]]], [], ["loc", [null, [50, 30], [50, 58]]]], ["inline", "t", ["components.object-list-view.menu-in-row.edit-menu-item-title"], [], ["loc", [null, [52, 20], [52, 88]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 55,
                "column": 10
              },
              "end": {
                "line": 60,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "item");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("i");
            dom.setAttribute(el2, "class", "trash icon");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("span");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1]);
            var morphs = new Array(2);
            morphs[0] = dom.createElementMorph(element0);
            morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 0, 0);
            return morphs;
          },
          statements: [["element", "action", [["get", "deleteRow", ["loc", [null, [56, 40], [56, 49]]]], ["get", "record", ["loc", [null, [56, 50], [56, 56]]]]], [], ["loc", [null, [56, 30], [56, 59]]]], ["inline", "t", ["components.object-list-view.menu-in-row.delete-menu-item-title"], [], ["loc", [null, [58, 20], [58, 90]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 64,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("td");
          dom.setAttribute(el1, "class", "object-list-view-menu");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "right pointing ui icon dropdown button");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("i");
          dom.setAttribute(el3, "class", "list layout icon");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("div");
          dom.setAttribute(el3, "class", "left menu");
          var el4 = dom.createTextNode("\n");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createComment("");
          dom.appendChild(el3, el4);
          var el4 = dom.createTextNode("        ");
          dom.appendChild(el3, el4);
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element2 = dom.childAt(fragment, [1, 1, 3]);
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(element2, 1, 1);
          morphs[1] = dom.createMorphAt(element2, 2, 2);
          return morphs;
        },
        statements: [["block", "if", [["get", "showEditMenuItemInRow", ["loc", [null, [49, 16], [49, 37]]]]], [], 0, null, ["loc", [null, [49, 10], [54, 17]]]], ["block", "if", [["get", "showDeleteMenuItemInRow", ["loc", [null, [55, 16], [55, 39]]]]], [], 1, null, ["loc", [null, [55, 10], [60, 17]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child3 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 67,
                "column": 2
              },
              "end": {
                "line": 89,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "object-list-view-row", [], ["record", ["subexpr", "@mut", [["get", "record", ["loc", [null, [69, 13], [69, 19]]]]], [], []], "columns", ["subexpr", "@mut", [["get", "columns", ["loc", [null, [70, 14], [70, 21]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [71, 15], [71, 23]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [72, 15], [72, 23]]]]], [], []], "showMenuColumn", ["subexpr", "@mut", [["get", "showMenuColumn", ["loc", [null, [73, 21], [73, 35]]]]], [], []], "showHelperColumn", ["subexpr", "@mut", [["get", "showHelperColumn", ["loc", [null, [74, 23], [74, 39]]]]], [], []], "defaultRowConfig", ["subexpr", "@mut", [["get", "defaultRowConfig", ["loc", [null, [75, 23], [75, 39]]]]], [], []], "showValidationMessages", ["subexpr", "@mut", [["get", "showValidationMessages", ["loc", [null, [76, 29], [76, 51]]]]], [], []], "showAsteriskInRow", ["subexpr", "@mut", [["get", "showAsteriskInRow", ["loc", [null, [77, 24], [77, 41]]]]], [], []], "showCheckBoxInRow", ["subexpr", "@mut", [["get", "showCheckBoxInRow", ["loc", [null, [78, 24], [78, 41]]]]], [], []], "showDeleteButtonInRow", ["subexpr", "@mut", [["get", "showDeleteButtonInRow", ["loc", [null, [79, 28], [79, 49]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "inHierarchicalMode", ["loc", [null, [80, 25], [80, 43]]]]], [], []], "singleColumnCellComponent", ["subexpr", "@mut", [["get", "singleColumnCellComponent", ["loc", [null, [81, 32], [81, 57]]]]], [], []], "loadRecords", ["subexpr", "@mut", [["get", "loadRecords", ["loc", [null, [82, 18], [82, 29]]]]], [], []], "rowClick", ["subexpr", "@mut", [["get", "rowClick", ["loc", [null, [83, 15], [83, 23]]]]], [], []], "selectRow", ["subexpr", "@mut", [["get", "selectRow", ["loc", [null, [84, 16], [84, 25]]]]], [], []], "deleteRow", ["subexpr", "@mut", [["get", "deleteRow", ["loc", [null, [85, 16], [85, 25]]]]], [], []], "_currentLevel", ["subexpr", "@mut", [["get", "_currentLevel", ["loc", [null, [86, 20], [86, 33]]]]], [], []], "hierarchicalIndent", ["subexpr", "@mut", [["get", "_hierarchicalIndent", ["loc", [null, [87, 25], [87, 44]]]]], [], []]], ["loc", [null, [68, 4], [88, 6]]]]],
          locals: ["record"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 66,
              "column": 0
            },
            "end": {
              "line": 90,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "records", ["loc", [null, [67, 10], [67, 17]]]]], ["key", "key"], 0, null, ["loc", [null, [67, 2], [89, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 91,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/mobile/components/object-list-view-row.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("tr");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("td");
        var el3 = dom.createTextNode("\n    ");
        dom.appendChild(el2, el3);
        var el3 = dom.createElement("div");
        dom.setAttribute(el3, "class", "hidden");
        var el4 = dom.createComment("");
        dom.appendChild(el3, el4);
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n    ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("td");
        var el3 = dom.createTextNode("\n      ");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("    ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element8 = dom.childAt(fragment, [0]);
        var element9 = dom.childAt(element8, [1]);
        var element10 = dom.childAt(element8, [3]);
        var morphs = new Array(10);
        morphs[0] = dom.createAttrMorph(element8, 'class');
        morphs[1] = dom.createAttrMorph(element9, 'class');
        morphs[2] = dom.createMorphAt(dom.childAt(element9, [1]), 0, 0);
        morphs[3] = dom.createMorphAt(element9, 3, 3);
        morphs[4] = dom.createAttrMorph(element10, 'style');
        morphs[5] = dom.createElementMorph(element10);
        morphs[6] = dom.createMorphAt(element10, 1, 1);
        morphs[7] = dom.createMorphAt(element10, 3, 3);
        morphs[8] = dom.createMorphAt(element8, 5, 5);
        morphs[9] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["attribute", "class", ["concat", [["get", "record.rowConfig.customClass", ["loc", [null, [1, 13], [1, 41]]]]]]], ["attribute", "class", ["concat", ["object-list-view-helper-column ", ["subexpr", "unless", [["get", "showHelperColumn", ["loc", [null, [2, 53], [2, 69]]]], "hidden"], [], ["loc", [null, [2, 44], [2, 80]]]]]]], ["content", "record.key", ["loc", [null, [3, 24], [3, 38]]]], ["block", "if", [["get", "showHelperColumn", ["loc", [null, [4, 10], [4, 26]]]]], [], 0, null, ["loc", [null, [4, 4], [27, 11]]]], ["attribute", "style", ["concat", ["padding-left:", ["get", "hierarchicalIndent", ["loc", [null, [29, 78], [29, 96]]]], "px;"]]], ["element", "action", [["get", "rowClick", ["loc", [null, [29, 17], [29, 25]]]], ["get", "record", ["loc", [null, [29, 26], [29, 32]]]]], ["preventDefault", false], ["loc", [null, [29, 8], [29, 55]]]], ["inline", "component", [["get", "singleColumnCellComponent.componentName", ["loc", [null, [30, 18], [30, 57]]]]], ["model", ["subexpr", "@mut", [["get", "record.data", ["loc", [null, [31, 14], [31, 25]]]]], [], []], "columns", ["subexpr", "@mut", [["get", "columns", ["loc", [null, [32, 16], [32, 23]]]]], [], []], "showValidationMessages", ["subexpr", "@mut", [["get", "showValidationMessages", ["loc", [null, [33, 31], [33, 53]]]]], [], []], "hasEditableValues", ["subexpr", "@mut", [["get", "hasEditableValues", ["loc", [null, [34, 26], [34, 43]]]]], [], []], "dynamicProperties", ["subexpr", "@mut", [["get", "singleColumnCellComponent.componentProperties", ["loc", [null, [35, 26], [35, 71]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [36, 17], [36, 25]]]]], [], []]], ["loc", [null, [30, 6], [37, 8]]]], ["block", "if", [["get", "hasRecords", ["loc", [null, [38, 12], [38, 22]]]]], [], 1, null, ["loc", [null, [38, 6], [42, 13]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [44, 8], [44, 22]]]]], [], 2, null, ["loc", [null, [44, 2], [64, 9]]]], ["block", "if", [["subexpr", "and", [["get", "_expanded", ["loc", [null, [66, 11], [66, 20]]]], ["get", "inHierarchicalMode", ["loc", [null, [66, 21], [66, 39]]]]], [], ["loc", [null, [66, 6], [66, 40]]]]], [], 3, null, ["loc", [null, [66, 0], [90, 7]]]]],
      locals: [],
      templates: [child0, child1, child2, child3]
    };
  })());
});
define("dummy/templates/mobile/components/object-list-view", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 2
              },
              "end": {
                "line": 10,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "ui-message", [], ["type", "error", "closeable", true, "visible", true, "title", "Error occurred", "message", ["subexpr", "@mut", [["get", "currentError", ["loc", [null, [8, 14], [8, 26]]]]], [], []]], ["loc", [null, [3, 4], [9, 6]]]]],
          locals: ["currentError"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "errorMessages", ["loc", [null, [2, 10], [2, 23]]]]], [], 0, null, ["loc", [null, [2, 2], [10, 11]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      var child0 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 21,
                  "column": 16
                },
                "end": {
                  "line": 23,
                  "column": 16
                }
              },
              "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                  ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "t", [["get", "column.keyLocale", ["loc", [null, [22, 22], [22, 38]]]]], [], ["loc", [null, [22, 18], [22, 40]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 23,
                  "column": 16
                },
                "end": {
                  "line": 25,
                  "column": 16
                }
              },
              "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                  ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["content", "column.header", ["loc", [null, [24, 18], [24, 35]]]]],
            locals: [],
            templates: []
          };
        })();
        var child2 = (function () {
          var child0 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 29,
                    "column": 20
                  },
                  "end": {
                    "line": 33,
                    "column": 20
                  }
                },
                "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                      ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                var el2 = dom.createTextNode("\n                      ▲");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                      ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element6 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createAttrMorph(element6, 'title');
                morphs[1] = dom.createMorphAt(element6, 1, 1);
                return morphs;
              },
              statements: [["attribute", "title", ["concat", [["subexpr", "t", ["components.object-list-view.sort-ascending"], [], ["loc", [null, [30, 34], [30, 84]]]]]]], ["content", "column.sortNumber", ["loc", [null, [31, 23], [31, 44]]]]],
              locals: [],
              templates: []
            };
          })();
          var child1 = (function () {
            return {
              meta: {
                "fragmentReason": false,
                "revision": "Ember@2.4.6",
                "loc": {
                  "source": null,
                  "start": {
                    "line": 33,
                    "column": 20
                  },
                  "end": {
                    "line": 37,
                    "column": 20
                  }
                },
                "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
              },
              isEmpty: false,
              arity: 0,
              cachedFragment: null,
              hasRendered: false,
              buildFragment: function buildFragment(dom) {
                var el0 = dom.createDocumentFragment();
                var el1 = dom.createTextNode("                      ");
                dom.appendChild(el0, el1);
                var el1 = dom.createElement("div");
                var el2 = dom.createTextNode("\n                      ▼");
                dom.appendChild(el1, el2);
                var el2 = dom.createComment("");
                dom.appendChild(el1, el2);
                var el2 = dom.createTextNode("\n                      ");
                dom.appendChild(el1, el2);
                dom.appendChild(el0, el1);
                var el1 = dom.createTextNode("\n");
                dom.appendChild(el0, el1);
                return el0;
              },
              buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
                var element5 = dom.childAt(fragment, [1]);
                var morphs = new Array(2);
                morphs[0] = dom.createAttrMorph(element5, 'title');
                morphs[1] = dom.createMorphAt(element5, 1, 1);
                return morphs;
              },
              statements: [["attribute", "title", ["concat", [["subexpr", "t", ["components.object-list-view.sort-descending"], [], ["loc", [null, [34, 34], [34, 85]]]]]]], ["content", "column.sortNumber", ["loc", [null, [35, 23], [35, 44]]]]],
              locals: [],
              templates: []
            };
          })();
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 27,
                  "column": 16
                },
                "end": {
                  "line": 39,
                  "column": 16
                }
              },
              "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                  ");
              dom.appendChild(el0, el1);
              var el1 = dom.createElement("div");
              dom.setAttribute(el1, "style", "float:right;");
              var el2 = dom.createTextNode("\n");
              dom.appendChild(el1, el2);
              var el2 = dom.createComment("");
              dom.appendChild(el1, el2);
              var el2 = dom.createTextNode("                  ");
              dom.appendChild(el1, el2);
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
              return morphs;
            },
            statements: [["block", "if", [["get", "column.sortAscending", ["loc", [null, [29, 26], [29, 46]]]]], [], 0, 1, ["loc", [null, [29, 20], [37, 27]]]]],
            locals: [],
            templates: [child0, child1]
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 17,
                "column": 10
              },
              "end": {
                "line": 42,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            dom.setAttribute(el1, "class", "dt-head-left me class");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            var el3 = dom.createTextNode("\n                ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("span");
            var el4 = dom.createTextNode("\n");
            dom.appendChild(el3, el4);
            var el4 = dom.createComment("");
            dom.appendChild(el3, el4);
            var el4 = dom.createTextNode("                ");
            dom.appendChild(el3, el4);
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("              ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element7 = dom.childAt(fragment, [1]);
            var element8 = dom.childAt(element7, [1]);
            var morphs = new Array(5);
            morphs[0] = dom.createAttrMorph(element7, 'onclick');
            morphs[1] = dom.createAttrMorph(element8, 'data-olv-header-property-name');
            morphs[2] = dom.createAttrMorph(element8, 'title');
            morphs[3] = dom.createMorphAt(dom.childAt(element8, [1]), 1, 1);
            morphs[4] = dom.createMorphAt(element8, 3, 3);
            return morphs;
          },
          statements: [["attribute", "onclick", ["subexpr", "action", ["headerCellClick", ["get", "column", ["loc", [null, [18, 82], [18, 88]]]]], [], ["loc", [null, [18, 54], [18, 91]]]]], ["attribute", "data-olv-header-property-name", ["get", "column.propName", ["loc", [null, [19, 51], [19, 66]]]]], ["attribute", "title", ["get", "sortTitleCompute", ["loc", [null, [19, 77], [19, 93]]]]], ["block", "if", [["get", "column.keyLocale", ["loc", [null, [21, 22], [21, 38]]]]], [], 0, 1, ["loc", [null, [21, 16], [25, 23]]]], ["block", "if", [["get", "column.sorted", ["loc", [null, [27, 22], [27, 35]]]]], [], 2, null, ["loc", [null, [27, 16], [39, 23]]]]],
          locals: ["column"],
          templates: [child0, child1, child2]
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 43,
                "column": 8
              },
              "end": {
                "line": 45,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("th");
            dom.setAttribute(el1, "class", "object-list-view-menu collapsing");
            dom.setAttribute(el1, "data-olv-header-property-name", "OlvRowMenu");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 13,
              "column": 2
            },
            "end": {
              "line": 48,
              "column": 2
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("    ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("thead");
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("tr");
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          var el3 = dom.createElement("th");
          dom.setAttribute(el3, "data-olv-header-property-name", "OlvRowToolbar");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("      ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element9 = dom.childAt(fragment, [1, 1]);
          var element10 = dom.childAt(element9, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element10, 'class');
          morphs[1] = dom.createMorphAt(element9, 3, 3);
          morphs[2] = dom.createMorphAt(element9, 4, 4);
          return morphs;
        },
        statements: [["attribute", "class", ["concat", ["object-list-view-operations collapsing ", ["subexpr", "unless", [["get", "showHelperColumn", ["loc", [null, [16, 67], [16, 83]]]], "hidden"], [], ["loc", [null, [16, 58], [16, 94]]]]]]], ["block", "each", [["get", "columns", ["loc", [null, [17, 18], [17, 25]]]]], [], 0, null, ["loc", [null, [17, 10], [42, 19]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [43, 14], [43, 28]]]]], [], 1, null, ["loc", [null, [43, 8], [45, 15]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    var child2 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 52,
                "column": 8
              },
              "end": {
                "line": 56,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            var el2 = dom.createTextNode("\n            ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("div");
            dom.setAttribute(el2, "class", "object-list-view-helper-column-cell");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element3 = dom.childAt(fragment, [1]);
            var morphs = new Array(1);
            morphs[0] = dom.createAttrMorph(element3, 'class');
            return morphs;
          },
          statements: [["attribute", "class", ["concat", ["object-list-view-helper-column ", ["subexpr", "unless", [["get", "showHelperColumn", ["loc", [null, [53, 61], [53, 77]]]], "hidden"], [], ["loc", [null, [53, 52], [53, 88]]]]]]]],
          locals: [],
          templates: []
        };
      })();
      var child1 = (function () {
        var child0 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 61,
                  "column": 14
                },
                "end": {
                  "line": 69,
                  "column": 14
                }
              },
              "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "component", ["flexberry-dropdown"], ["value", ["subexpr", "@mut", [["get", "column.filter.condition", ["loc", [null, [63, 24], [63, 47]]]]], [], []], "items", ["subexpr", "@mut", [["get", "column.filter.conditions", ["loc", [null, [64, 24], [64, 48]]]]], [], []], "class", "compact fluid", "placeholder", "", "needChecksOnValue", false], ["loc", [null, [62, 16], [68, 18]]]]],
            locals: [],
            templates: []
          };
        })();
        var child1 = (function () {
          return {
            meta: {
              "fragmentReason": false,
              "revision": "Ember@2.4.6",
              "loc": {
                "source": null,
                "start": {
                  "line": 70,
                  "column": 14
                },
                "end": {
                  "line": 75,
                  "column": 14
                }
              },
              "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
            },
            isEmpty: false,
            arity: 0,
            cachedFragment: null,
            hasRendered: false,
            buildFragment: function buildFragment(dom) {
              var el0 = dom.createDocumentFragment();
              var el1 = dom.createTextNode("                ");
              dom.appendChild(el0, el1);
              var el1 = dom.createComment("");
              dom.appendChild(el0, el1);
              var el1 = dom.createTextNode("\n");
              dom.appendChild(el0, el1);
              return el0;
            },
            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
              var morphs = new Array(1);
              morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
              return morphs;
            },
            statements: [["inline", "component", [["get", "column.filter.component.name", ["loc", [null, [71, 28], [71, 56]]]]], ["value", ["subexpr", "@mut", [["get", "column.filter.pattern", ["loc", [null, [72, 24], [72, 45]]]]], [], []], "dynamicProperties", ["subexpr", "@mut", [["get", "column.filter.component.properties", ["loc", [null, [73, 36], [73, 70]]]]], [], []]], ["loc", [null, [71, 16], [74, 18]]]]],
            locals: [],
            templates: []
          };
        })();
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 58,
                "column": 10
              },
              "end": {
                "line": 77,
                "column": 10
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("            ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("div");
            dom.setAttribute(el1, "class", "inline fields");
            var el2 = dom.createTextNode("\n              ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("label");
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode(":");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createComment("");
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("            ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element2 = dom.childAt(fragment, [1]);
            var morphs = new Array(3);
            morphs[0] = dom.createMorphAt(dom.childAt(element2, [1]), 0, 0);
            morphs[1] = dom.createMorphAt(element2, 3, 3);
            morphs[2] = dom.createMorphAt(element2, 4, 4);
            return morphs;
          },
          statements: [["content", "column.header", ["loc", [null, [60, 21], [60, 38]]]], ["block", "if", [["get", "column.filter.conditions", ["loc", [null, [61, 20], [61, 44]]]]], [], 0, null, ["loc", [null, [61, 14], [69, 21]]]], ["block", "if", [["get", "column.filter.component.name", ["loc", [null, [70, 20], [70, 48]]]]], [], 1, null, ["loc", [null, [70, 14], [75, 21]]]]],
          locals: ["column"],
          templates: [child0, child1]
        };
      })();
      var child2 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 79,
                "column": 8
              },
              "end": {
                "line": 81,
                "column": 8
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("          ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("td");
            dom.setAttribute(el1, "class", "object-list-view-menu");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes() {
            return [];
          },
          statements: [],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 50,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          var el3 = dom.createTextNode("\n");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element4 = dom.childAt(fragment, [1]);
          var morphs = new Array(3);
          morphs[0] = dom.createMorphAt(element4, 1, 1);
          morphs[1] = dom.createMorphAt(dom.childAt(element4, [3]), 1, 1);
          morphs[2] = dom.createMorphAt(element4, 5, 5);
          return morphs;
        },
        statements: [["block", "if", [["get", "showHelperColumn", ["loc", [null, [52, 14], [52, 30]]]]], [], 0, null, ["loc", [null, [52, 8], [56, 15]]]], ["block", "each", [["get", "columns", ["loc", [null, [58, 18], [58, 25]]]]], [], 1, null, ["loc", [null, [58, 10], [77, 19]]]], ["block", "if", [["get", "showMenuColumn", ["loc", [null, [79, 14], [79, 28]]]]], [], 2, null, ["loc", [null, [79, 8], [81, 15]]]]],
        locals: [],
        templates: [child0, child1, child2]
      };
    })();
    var child3 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("      ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("tr");
          var el2 = dom.createTextNode("\n        ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("td");
          dom.setAttribute(el2, "style", "text-align:center;");
          var el3 = dom.createTextNode("\n            ");
          dom.appendChild(el2, el3);
          var el3 = dom.createComment("");
          dom.appendChild(el2, el3);
          var el3 = dom.createTextNode("\n        ");
          dom.appendChild(el2, el3);
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n      ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element1 = dom.childAt(fragment, [1, 1]);
          var morphs = new Array(2);
          morphs[0] = dom.createAttrMorph(element1, 'colspan');
          morphs[1] = dom.createMorphAt(element1, 1, 1);
          return morphs;
        },
        statements: [["attribute", "colspan", ["concat", [["get", "colspan", ["loc", [null, [86, 23], [86, 30]]]]]]], ["content", "placeholder", ["loc", [null, [87, 12], [87, 27]]]]],
        locals: [],
        templates: []
      };
    })();
    var child4 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 91,
                "column": 6
              },
              "end": {
                "line": 115,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "object-list-view-row", [], ["record", ["subexpr", "@mut", [["get", "record", ["loc", [null, [93, 17], [93, 23]]]]], [], []], "columns", ["subexpr", "@mut", [["get", "columns", ["loc", [null, [94, 18], [94, 25]]]]], [], []], "readonly", ["subexpr", "@mut", [["get", "readonly", ["loc", [null, [95, 19], [95, 27]]]]], [], []], "required", ["subexpr", "@mut", [["get", "required", ["loc", [null, [96, 19], [96, 27]]]]], [], []], "showMenuColumn", ["subexpr", "@mut", [["get", "showMenuColumn", ["loc", [null, [97, 25], [97, 39]]]]], [], []], "showHelperColumn", ["subexpr", "@mut", [["get", "showHelperColumn", ["loc", [null, [98, 27], [98, 43]]]]], [], []], "defaultRowConfig", ["subexpr", "@mut", [["get", "defaultRowConfig", ["loc", [null, [99, 27], [99, 43]]]]], [], []], "showValidationMessages", ["subexpr", "@mut", [["get", "showValidationMessagesInRow", ["loc", [null, [100, 33], [100, 60]]]]], [], []], "showDeleteMenuItemInRow", ["subexpr", "@mut", [["get", "showDeleteMenuItemInRow", ["loc", [null, [101, 34], [101, 57]]]]], [], []], "showEditMenuItemInRow", ["subexpr", "@mut", [["get", "showEditMenuItemInRow", ["loc", [null, [102, 32], [102, 53]]]]], [], []], "showAsteriskInRow", ["subexpr", "@mut", [["get", "showAsteriskInRow", ["loc", [null, [103, 28], [103, 45]]]]], [], []], "showCheckBoxInRow", ["subexpr", "@mut", [["get", "showCheckBoxInRow", ["loc", [null, [104, 28], [104, 45]]]]], [], []], "showDeleteButtonInRow", ["subexpr", "@mut", [["get", "showDeleteButtonInRow", ["loc", [null, [105, 32], [105, 53]]]]], [], []], "hierarchicalIndent", ["subexpr", "@mut", [["get", "hierarchicalIndent", ["loc", [null, [106, 29], [106, 47]]]]], [], []], "inHierarchicalMode", ["subexpr", "@mut", [["get", "inHierarchicalMode", ["loc", [null, [107, 29], [107, 47]]]]], [], []], "singleColumnCellComponent", ["subexpr", "@mut", [["get", "singleColumnCellComponent", ["loc", [null, [108, 36], [108, 61]]]]], [], []], "loadRecords", ["subexpr", "@mut", [["get", "loadRecords", ["loc", [null, [109, 22], [109, 33]]]]], [], []], "doRenderData", ["subexpr", "@mut", [["get", "record.doRenderData", ["loc", [null, [110, 23], [110, 42]]]]], [], []], "rowClick", ["subexpr", "action", ["rowClick"], [], ["loc", [null, [111, 19], [111, 38]]]], "selectRow", ["subexpr", "action", ["selectRow"], [], ["loc", [null, [112, 20], [112, 40]]]], "deleteRow", ["subexpr", "action", ["deleteRow"], [], ["loc", [null, [113, 20], [113, 40]]]]], ["loc", [null, [92, 8], [114, 10]]]]],
          locals: ["record"],
          templates: []
        };
      })();
      var child1 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 116,
                "column": 6
              },
              "end": {
                "line": 123,
                "column": 6
              }
            },
            "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("        ");
            dom.appendChild(el0, el1);
            var el1 = dom.createElement("tr");
            var el2 = dom.createTextNode("\n          ");
            dom.appendChild(el1, el2);
            var el2 = dom.createElement("td");
            dom.setAttribute(el2, "style", "text-align:center;");
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createElement("div");
            dom.setAttribute(el3, "class", "ui active centered inline loader");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n            ");
            dom.appendChild(el2, el3);
            var el3 = dom.createComment("");
            dom.appendChild(el2, el3);
            var el3 = dom.createTextNode("\n          ");
            dom.appendChild(el2, el3);
            dom.appendChild(el1, el2);
            var el2 = dom.createTextNode("\n        ");
            dom.appendChild(el1, el2);
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var element0 = dom.childAt(fragment, [1, 1]);
            var morphs = new Array(2);
            morphs[0] = dom.createAttrMorph(element0, 'colspan');
            morphs[1] = dom.createMorphAt(element0, 3, 3);
            return morphs;
          },
          statements: [["attribute", "colspan", ["concat", [["get", "colspan", ["loc", [null, [118, 25], [118, 32]]]]]]], ["inline", "t", ["components.object-list-view.loading-text"], [], ["loc", [null, [120, 12], [120, 60]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 124,
              "column": 4
            }
          },
          "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(2);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "each", [["get", "contentWithKeys", ["loc", [null, [91, 14], [91, 29]]]]], ["key", "key"], 0, null, ["loc", [null, [91, 6], [115, 15]]]], ["block", "if", [["get", "rowByRowLoadingProgress", ["loc", [null, [116, 12], [116, 35]]]]], [], 1, null, ["loc", [null, [116, 6], [123, 13]]]]],
        locals: [],
        templates: [child0, child1]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type", "multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 127,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/mobile/components/object-list-view.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("table");
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createElement("tbody");
        var el3 = dom.createTextNode("\n");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createComment("");
        dom.appendChild(el2, el3);
        var el3 = dom.createTextNode("  ");
        dom.appendChild(el2, el3);
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element11 = dom.childAt(fragment, [1]);
        var element12 = dom.childAt(element11, [3]);
        var morphs = new Array(5);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        morphs[1] = dom.createAttrMorph(element11, 'class');
        morphs[2] = dom.createMorphAt(element11, 1, 1);
        morphs[3] = dom.createMorphAt(element12, 1, 1);
        morphs[4] = dom.createMorphAt(element12, 2, 2);
        dom.insertBoundary(fragment, 0);
        return morphs;
      },
      statements: [["block", "if", [["get", "errorMessages", ["loc", [null, [1, 6], [1, 19]]]]], [], 0, null, ["loc", [null, [1, 0], [11, 7]]]], ["attribute", "class", ["concat", ["object-list-view ui unstackable celled ", ["subexpr", "if", [["get", "readonly", ["loc", [null, [12, 58], [12, 66]]]], "readonly"], [], ["loc", [null, [12, 53], [12, 79]]]], " ", ["get", "tableClass", ["loc", [null, [12, 82], [12, 92]]]], " table"]]], ["block", "if", [["get", "singleColumnHeaderTitle", ["loc", [null, [13, 8], [13, 31]]]]], [], 1, null, ["loc", [null, [13, 2], [48, 9]]]], ["block", "if", [["get", "showFilters", ["loc", [null, [50, 10], [50, 21]]]]], [], 2, null, ["loc", [null, [50, 4], [83, 11]]]], ["block", "unless", [["get", "content", ["loc", [null, [84, 14], [84, 21]]]]], [], 3, 4, ["loc", [null, [84, 4], [124, 15]]]]],
      locals: [],
      templates: [child0, child1, child2, child3, child4]
    };
  })());
});
define("dummy/templates/mobile/sitemap-node", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 4,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/mobile/sitemap-node.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "partial", ["sitemap-node-content"], [], ["loc", [null, [3, 4], [3, 38]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/mobile/sitemap-node.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "link-to", [["get", "model.link", ["loc", [null, [2, 11], [2, 21]]]]], ["class", "item", "title", ["subexpr", "@mut", [["get", "model.title", ["loc", [null, [2, 41], [2, 52]]]]], [], []], "invokeAction", ["subexpr", "action", ["hideSidebar"], [], ["loc", [null, [2, 66], [2, 88]]]]], 0, null, ["loc", [null, [2, 0], [4, 14]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/mobile/sitemap-node.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "item item-menu");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "item-plus");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "item-minus hidden");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(element0, [1]);
          var element2 = dom.childAt(element0, [3]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element1, 'onclick');
          morphs[1] = dom.createAttrMorph(element2, 'onclick');
          morphs[2] = dom.createMorphAt(element0, 5, 5);
          return morphs;
        },
        statements: [["attribute", "onclick", ["subexpr", "action", ["subMenuEl"], ["bubbles", false], ["loc", [null, [7, 35], [7, 71]]]]], ["attribute", "onclick", ["subexpr", "action", ["subMenuEl"], ["bubbles", false], ["loc", [null, [8, 43], [8, 79]]]]], ["inline", "partial", ["sitemap-node-content"], [], ["loc", [null, [9, 4], [9, 38]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/mobile/sitemap-node.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "model.link", ["loc", [null, [1, 6], [1, 16]]]]], [], 0, 1, ["loc", [null, [1, 0], [11, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/new-platform-flexberry-services-lock-list", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 29,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/new-platform-flexberry-services-lock-list.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("h3");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "row");
        var el2 = dom.createTextNode("\n  ");
        dom.appendChild(el1, el2);
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        var el2 = dom.createTextNode("\n");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(2);
        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [0]), 0, 0);
        morphs[1] = dom.createMorphAt(dom.childAt(fragment, [2]), 1, 1);
        return morphs;
      },
      statements: [["inline", "t", ["forms.new-platform-flexberry-services-lock-list.caption"], [], ["loc", [null, [1, 4], [1, 67]]]], ["inline", "flexberry-objectlistview", [], ["content", ["subexpr", "@mut", [["get", "model", ["loc", [null, [4, 12], [4, 17]]]]], [], []], "modelName", ["subexpr", "@mut", [["get", "modelName", ["loc", [null, [5, 14], [5, 23]]]]], [], []], "modelProjection", ["subexpr", "@mut", [["get", "modelProjection", ["loc", [null, [6, 20], [6, 35]]]]], [], []], "editFormRoute", ["subexpr", "@mut", [["get", "editFormRoute", ["loc", [null, [7, 18], [7, 31]]]]], [], []], "refreshButton", true, "createNewButton", false, "deleteButton", true, "showCheckBoxInRow", true, "showDeleteButtonInRow", true, "pages", ["subexpr", "@mut", [["get", "pages", ["loc", [null, [13, 10], [13, 15]]]]], [], []], "perPageValue", ["subexpr", "@mut", [["get", "perPageValue", ["loc", [null, [14, 17], [14, 29]]]]], [], []], "perPageValues", ["subexpr", "@mut", [["get", "perPageValues", ["loc", [null, [15, 18], [15, 31]]]]], [], []], "recordsTotalCount", ["subexpr", "@mut", [["get", "recordsTotalCount", ["loc", [null, [16, 22], [16, 39]]]]], [], []], "hasPreviousPage", ["subexpr", "@mut", [["get", "hasPreviousPage", ["loc", [null, [17, 20], [17, 35]]]]], [], []], "hasNextPage", ["subexpr", "@mut", [["get", "hasNextPage", ["loc", [null, [18, 16], [18, 27]]]]], [], []], "gotoPage", ["subexpr", "action", ["gotoPage"], [], ["loc", [null, [19, 13], [19, 32]]]], "nextPage", ["subexpr", "action", ["nextPage"], [], ["loc", [null, [20, 13], [20, 32]]]], "previousPage", ["subexpr", "action", ["previousPage"], [], ["loc", [null, [21, 17], [21, 40]]]], "orderable", true, "sorting", ["subexpr", "@mut", [["get", "computedSorting", ["loc", [null, [23, 12], [23, 27]]]]], [], []], "sortByColumn", ["subexpr", "action", ["sortByColumn"], [], ["loc", [null, [24, 17], [24, 40]]]], "addColumnToSorting", ["subexpr", "action", ["addColumnToSorting"], [], ["loc", [null, [25, 23], [25, 52]]]], "componentName", "LockObjectListView"], ["loc", [null, [3, 2], [27, 4]]]]],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/sitemap-node-content", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 4,
                "column": 4
              },
              "end": {
                "line": 6,
                "column": 4
              }
            },
            "moduleName": "dummy/templates/sitemap-node-content.hbs"
          },
          isEmpty: false,
          arity: 1,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("      ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "render", ["sitemap-node", ["get", "child", ["loc", [null, [5, 30], [5, 35]]]]], [], ["loc", [null, [5, 6], [5, 37]]]]],
          locals: ["child"],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 2,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/sitemap-node-content.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "menu subMenu hidden");
          var el2 = dom.createTextNode("\n");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);
          return morphs;
        },
        statements: [["block", "each", [["get", "model.children", ["loc", [null, [4, 12], [4, 26]]]]], [], 0, null, ["loc", [null, [4, 4], [6, 13]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["multiple-nodes", "wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 7
          }
        },
        "moduleName": "dummy/templates/sitemap-node-content.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "class", "title-item-menu");
        var el2 = dom.createComment("");
        dom.appendChild(el1, el2);
        dom.appendChild(el0, el1);
        var el1 = dom.createTextNode("\n");
        dom.appendChild(el0, el1);
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var element0 = dom.childAt(fragment, [0]);
        var morphs = new Array(3);
        morphs[0] = dom.createAttrMorph(element0, 'onclick');
        morphs[1] = dom.createMorphAt(element0, 0, 0);
        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["attribute", "onclick", ["subexpr", "action", ["subMenuEl"], ["bubbles", false], ["loc", [null, [1, 36], [1, 72]]]]], ["content", "model.caption", ["loc", [null, [1, 73], [1, 90]]]], ["block", "if", [["get", "model.children.length", ["loc", [null, [2, 6], [2, 27]]]]], [], 0, null, ["loc", [null, [2, 0], [8, 7]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/sitemap-node", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      var child0 = (function () {
        return {
          meta: {
            "fragmentReason": false,
            "revision": "Ember@2.4.6",
            "loc": {
              "source": null,
              "start": {
                "line": 2,
                "column": 0
              },
              "end": {
                "line": 4,
                "column": 2
              }
            },
            "moduleName": "dummy/templates/sitemap-node.hbs"
          },
          isEmpty: false,
          arity: 0,
          cachedFragment: null,
          hasRendered: false,
          buildFragment: function buildFragment(dom) {
            var el0 = dom.createDocumentFragment();
            var el1 = dom.createTextNode("    ");
            dom.appendChild(el0, el1);
            var el1 = dom.createComment("");
            dom.appendChild(el0, el1);
            var el1 = dom.createTextNode("\n");
            dom.appendChild(el0, el1);
            return el0;
          },
          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
            var morphs = new Array(1);
            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
            return morphs;
          },
          statements: [["inline", "partial", ["sitemap-node-content"], [], ["loc", [null, [3, 4], [3, 38]]]]],
          locals: [],
          templates: []
        };
      })();
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/sitemap-node.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
          dom.insertBoundary(fragment, 0);
          dom.insertBoundary(fragment, null);
          return morphs;
        },
        statements: [["block", "link-to", [["get", "model.link", ["loc", [null, [2, 11], [2, 21]]]]], ["class", "item", "title", ["subexpr", "@mut", [["get", "model.title", ["loc", [null, [2, 41], [2, 52]]]]], [], []]], 0, null, ["loc", [null, [2, 0], [4, 14]]]]],
        locals: [],
        templates: [child0]
      };
    })();
    var child1 = (function () {
      return {
        meta: {
          "fragmentReason": false,
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 11,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/sitemap-node.hbs"
        },
        isEmpty: false,
        arity: 0,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("  ");
          dom.appendChild(el0, el1);
          var el1 = dom.createElement("div");
          dom.setAttribute(el1, "class", "item item-menu");
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "item-plus");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createElement("div");
          dom.setAttribute(el2, "class", "item-minus hidden");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n    ");
          dom.appendChild(el1, el2);
          var el2 = dom.createComment("");
          dom.appendChild(el1, el2);
          var el2 = dom.createTextNode("\n  ");
          dom.appendChild(el1, el2);
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var element0 = dom.childAt(fragment, [1]);
          var element1 = dom.childAt(element0, [1]);
          var element2 = dom.childAt(element0, [3]);
          var morphs = new Array(3);
          morphs[0] = dom.createAttrMorph(element1, 'onclick');
          morphs[1] = dom.createAttrMorph(element2, 'onclick');
          morphs[2] = dom.createMorphAt(element0, 5, 5);
          return morphs;
        },
        statements: [["attribute", "onclick", ["subexpr", "action", ["subMenuEl"], ["bubbles", false], ["loc", [null, [7, 35], [7, 71]]]]], ["attribute", "onclick", ["subexpr", "action", ["subMenuEl"], ["bubbles", false], ["loc", [null, [8, 43], [8, 79]]]]], ["inline", "partial", ["sitemap-node-content"], [], ["loc", [null, [9, 4], [9, 38]]]]],
        locals: [],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 12,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/sitemap-node.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "if", [["get", "model.link", ["loc", [null, [1, 6], [1, 16]]]]], [], 0, 1, ["loc", [null, [1, 0], [11, 7]]]]],
      locals: [],
      templates: [child0, child1]
    };
  })());
});
define("dummy/templates/sitemap", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    var child0 = (function () {
      return {
        meta: {
          "fragmentReason": {
            "name": "missing-wrapper",
            "problems": ["wrong-type"]
          },
          "revision": "Ember@2.4.6",
          "loc": {
            "source": null,
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 3,
              "column": 0
            }
          },
          "moduleName": "dummy/templates/sitemap.hbs"
        },
        isEmpty: false,
        arity: 1,
        cachedFragment: null,
        hasRendered: false,
        buildFragment: function buildFragment(dom) {
          var el0 = dom.createDocumentFragment();
          var el1 = dom.createTextNode("	");
          dom.appendChild(el0, el1);
          var el1 = dom.createComment("");
          dom.appendChild(el0, el1);
          var el1 = dom.createTextNode("\n");
          dom.appendChild(el0, el1);
          return el0;
        },
        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
          var morphs = new Array(1);
          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);
          return morphs;
        },
        statements: [["inline", "render", ["sitemap-node", ["get", "node", ["loc", [null, [2, 25], [2, 29]]]]], [], ["loc", [null, [2, 1], [2, 31]]]]],
        locals: ["node"],
        templates: []
      };
    })();
    return {
      meta: {
        "fragmentReason": {
          "name": "missing-wrapper",
          "problems": ["wrong-type"]
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 0
          }
        },
        "moduleName": "dummy/templates/sitemap.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createComment("");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {
        var morphs = new Array(1);
        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);
        dom.insertBoundary(fragment, 0);
        dom.insertBoundary(fragment, null);
        return morphs;
      },
      statements: [["block", "each", [["get", "model.nodes", ["loc", [null, [1, 8], [1, 19]]]]], [], 0, null, ["loc", [null, [1, 0], [3, 9]]]]],
      locals: [],
      templates: [child0]
    };
  })());
});
define("dummy/templates/statechart-diagram-primitives-demo", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 22
          }
        },
        "moduleName": "dummy/templates/statechart-diagram-primitives-demo.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "paper");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define("dummy/templates/usecase-diagram-primitives-demo", ["exports"], function (exports) {
  exports["default"] = Ember.HTMLBars.template((function () {
    return {
      meta: {
        "fragmentReason": {
          "name": "triple-curlies"
        },
        "revision": "Ember@2.4.6",
        "loc": {
          "source": null,
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 22
          }
        },
        "moduleName": "dummy/templates/usecase-diagram-primitives-demo.hbs"
      },
      isEmpty: false,
      arity: 0,
      cachedFragment: null,
      hasRendered: false,
      buildFragment: function buildFragment(dom) {
        var el0 = dom.createDocumentFragment();
        var el1 = dom.createElement("div");
        dom.setAttribute(el1, "id", "paper");
        dom.appendChild(el0, el1);
        return el0;
      },
      buildRenderNodes: function buildRenderNodes() {
        return [];
      },
      statements: [],
      locals: [],
      templates: []
    };
  })());
});
define('dummy/transforms/containers-tree', ['exports', 'ember-flexberry-designer/transforms/containers-tree'], function (exports, _emberFlexberryDesignerTransformsContainersTree) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerTransformsContainersTree['default'];
    }
  });
});
define('dummy/transforms/decimal', ['exports', 'ember-flexberry-data/transforms/decimal'], function (exports, _emberFlexberryDataTransformsDecimal) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataTransformsDecimal['default'];
    }
  });
});
define('dummy/transforms/fd-definition', ['exports', 'ember-flexberry-designer/transforms/fd-definition'], function (exports, _emberFlexberryDesignerTransformsFdDefinition) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerTransformsFdDefinition['default'];
    }
  });
});
define('dummy/transforms/fd-generation-state', ['exports', 'ember-flexberry-designer/transforms/fd-generation-state'], function (exports, _emberFlexberryDesignerTransformsFdGenerationState) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerTransformsFdGenerationState['default'];
    }
  });
});
define('dummy/transforms/fd-propertylookupstr', ['exports', 'ember-flexberry-designer/transforms/fd-propertylookupstr'], function (exports, _emberFlexberryDesignerTransformsFdPropertylookupstr) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerTransformsFdPropertylookupstr['default'];
    }
  });
});
define('dummy/transforms/file', ['exports', 'ember-flexberry-data/transforms/file'], function (exports, _emberFlexberryDataTransformsFile) {
  exports['default'] = _emberFlexberryDataTransformsFile['default'];
});
define('dummy/transforms/flexberry-enum', ['exports', 'ember-flexberry-data/transforms/flexberry-enum'], function (exports, _emberFlexberryDataTransformsFlexberryEnum) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataTransformsFlexberryEnum['default'];
    }
  });
});
define('dummy/transforms/guid', ['exports', 'ember-flexberry-data/transforms/guid'], function (exports, _emberFlexberryDataTransformsGuid) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataTransformsGuid['default'];
    }
  });
});
define('dummy/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-access-type', ['exports', 'ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-access-type'], function (exports, _emberFlexberryDesignerTransformsICSSoftSTORMNETAccessType) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerTransformsICSSoftSTORMNETAccessType['default'];
    }
  });
});
define('dummy/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-execution-variant', ['exports', 'ember-flexberry-data/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-execution-variant'], function (exports, _emberFlexberryDataTransformsICSSoftSTORMNETBusinessAuditObjectsTExecutionVariant) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataTransformsICSSoftSTORMNETBusinessAuditObjectsTExecutionVariant['default'];
    }
  });
});
define('dummy/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-type-of-audit-operation', ['exports', 'ember-flexberry-data/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-type-of-audit-operation'], function (exports, _emberFlexberryDataTransformsICSSoftSTORMNETBusinessAuditObjectsTTypeOfAuditOperation) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDataTransformsICSSoftSTORMNETBusinessAuditObjectsTTypeOfAuditOperation['default'];
    }
  });
});
define('dummy/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode', ['exports', 'ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-audit-objects-t-write-mode'], function (exports, _emberFlexberryDesignerTransformsICSSoftSTORMNETBusinessAuditObjectsTWriteMode) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerTransformsICSSoftSTORMNETBusinessAuditObjectsTWriteMode['default'];
    }
  });
});
define('dummy/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events', ['exports', 'ember-flexberry-designer/transforms/i-c-s-soft-s-t-o-r-m-n-e-t-business-data-service-object-events'], function (exports, _emberFlexberryDesignerTransformsICSSoftSTORMNETBusinessDataServiceObjectEvents) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerTransformsICSSoftSTORMNETBusinessDataServiceObjectEvents['default'];
    }
  });
});
define('dummy/transforms/new-platform-flexberry-web-designer-business-server-class', ['exports', 'ember-flexberry-designer/transforms/new-platform-flexberry-web-designer-business-server-class'], function (exports, _emberFlexberryDesignerTransformsNewPlatformFlexberryWebDesignerBusinessServerClass) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerTransformsNewPlatformFlexberryWebDesignerBusinessServerClass['default'];
    }
  });
});
define('dummy/transforms/s-t-o-r-m-c-a-s-e-repository-access-modifier', ['exports', 'ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-repository-access-modifier'], function (exports, _emberFlexberryDesignerTransformsSTORMCASERepositoryAccessModifier) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerTransformsSTORMCASERepositoryAccessModifier['default'];
    }
  });
});
define('dummy/transforms/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier', ['exports', 'ember-flexberry-designer/transforms/s-t-o-r-m-c-a-s-e-s-t-o-r-m-n-e-t-repository-parameter-modifier'], function (exports, _emberFlexberryDesignerTransformsSTORMCASESTORMNETRepositoryParameterModifier) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerTransformsSTORMCASESTORMNETRepositoryParameterModifier['default'];
    }
  });
});
define('dummy/transforms/typemap', ['exports', 'ember-flexberry-designer/transforms/typemap'], function (exports, _emberFlexberryDesignerTransformsTypemap) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerTransformsTypemap['default'];
    }
  });
});
define('dummy/utils/deserialize-sorting-param', ['exports', 'ember-flexberry/utils/deserialize-sorting-param'], function (exports, _emberFlexberryUtilsDeserializeSortingParam) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryUtilsDeserializeSortingParam['default'];
    }
  });
});
define('dummy/utils/fd-activity-diagram-primitives', ['exports', 'ember-flexberry-designer/utils/fd-activity-diagram-primitives'], function (exports, _emberFlexberryDesignerUtilsFdActivityDiagramPrimitives) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerUtilsFdActivityDiagramPrimitives['default'];
    }
  });
});
define('dummy/utils/fd-class-diagram-primitives', ['exports', 'ember-flexberry-designer/utils/fd-class-diagram-primitives'], function (exports, _emberFlexberryDesignerUtilsFdClassDiagramPrimitives) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerUtilsFdClassDiagramPrimitives['default'];
    }
  });
});
define('dummy/utils/fd-collaboration-diagram-primitives', ['exports', 'ember-flexberry-designer/utils/fd-collaboration-diagram-primitives'], function (exports, _emberFlexberryDesignerUtilsFdCollaborationDiagramPrimitives) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerUtilsFdCollaborationDiagramPrimitives['default'];
    }
  });
});
define('dummy/utils/fd-common-primitives', ['exports', 'ember-flexberry-designer/utils/fd-common-primitives'], function (exports, _emberFlexberryDesignerUtilsFdCommonPrimitives) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerUtilsFdCommonPrimitives['default'];
    }
  });
});
define('dummy/utils/fd-deployment-diagram-primitives', ['exports', 'ember-flexberry-designer/utils/fd-deployment-diagram-primitives'], function (exports, _emberFlexberryDesignerUtilsFdDeploymentDiagramPrimitives) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerUtilsFdDeploymentDiagramPrimitives['default'];
    }
  });
});
define('dummy/utils/fd-preload-stage-metadata', ['exports', 'ember-flexberry-designer/utils/fd-preload-stage-metadata'], function (exports, _emberFlexberryDesignerUtilsFdPreloadStageMetadata) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerUtilsFdPreloadStageMetadata['default'];
    }
  });
});
define('dummy/utils/fd-sequence-diagram-primitives', ['exports', 'ember-flexberry-designer/utils/fd-sequence-diagram-primitives'], function (exports, _emberFlexberryDesignerUtilsFdSequenceDiagramPrimitives) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerUtilsFdSequenceDiagramPrimitives['default'];
    }
  });
});
define('dummy/utils/fd-statechart-diagram-primitives', ['exports', 'ember-flexberry-designer/utils/fd-statechart-diagram-primitives'], function (exports, _emberFlexberryDesignerUtilsFdStatechartDiagramPrimitives) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerUtilsFdStatechartDiagramPrimitives['default'];
    }
  });
});
define('dummy/utils/fd-usecase-diagram-primitives', ['exports', 'ember-flexberry-designer/utils/fd-usecase-diagram-primitives'], function (exports, _emberFlexberryDesignerUtilsFdUsecaseDiagramPrimitives) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryDesignerUtilsFdUsecaseDiagramPrimitives['default'];
    }
  });
});
define('dummy/utils/get-current-agregator', ['exports', 'ember-flexberry/utils/get-current-agregator'], function (exports, _emberFlexberryUtilsGetCurrentAgregator) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryUtilsGetCurrentAgregator['default'];
    }
  });
});
define('dummy/utils/i18n/compile-template', ['exports', 'ember-i18n/utils/i18n/compile-template'], function (exports, _emberI18nUtilsI18nCompileTemplate) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberI18nUtilsI18nCompileTemplate['default'];
    }
  });
});
define('dummy/utils/i18n/missing-message', ['exports', 'ember-i18n/utils/i18n/missing-message'], function (exports, _emberI18nUtilsI18nMissingMessage) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberI18nUtilsI18nMissingMessage['default'];
    }
  });
});
define('dummy/utils/need-save-current-agregator', ['exports', 'ember-flexberry/utils/need-save-current-agregator'], function (exports, _emberFlexberryUtilsNeedSaveCurrentAgregator) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryUtilsNeedSaveCurrentAgregator['default'];
    }
  });
});
define('dummy/utils/serialize-sorting-param', ['exports', 'ember-flexberry/utils/serialize-sorting-param'], function (exports, _emberFlexberryUtilsSerializeSortingParam) {
  Object.defineProperty(exports, 'default', {
    enumerable: true,
    get: function get() {
      return _emberFlexberryUtilsSerializeSortingParam['default'];
    }
  });
});
define('dummy/validators/local/datetime', ['exports', 'ember-flexberry/validators/local/datetime'], function (exports, _emberFlexberryValidatorsLocalDatetime) {
  exports['default'] = _emberFlexberryValidatorsLocalDatetime['default'];
});
define('dummy/views/application', ['exports', 'ember'], function (exports, _ember) {

  /**
   * Overload wrapper tag name for disabling wrapper.
   *
   * The sidebar, as per Semantic-UI's documentation,
   * will need to be directly below the body element.
   */
  exports['default'] = _ember['default'].Component.extend({
    tagName: ''
  });
});
/* jshint ignore:start */



/* jshint ignore:end */

/* jshint ignore:start */

define('dummy/config/environment', ['ember'], function(Ember) {
  var prefix = 'dummy';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */

});

/* jshint ignore:end */

/* jshint ignore:start */

if (!runningTests) {
  require("dummy/app")["default"].create({"name":"flexberry-designer","backendUrl":"https://ember-flexberry-designer-dummy.azurewebsites.net","backendUrls":{"root":"https://ember-flexberry-designer-dummy.azurewebsites.net","api":"https://ember-flexberry-designer-dummy.azurewebsites.net/odata"},"log":{"enabled":true,"storeErrorMessages":true,"storeWarnMessages":false,"storeLogMessages":true,"storeInfoMessages":false,"storeDebugMessages":false,"storeDeprecationMessages":false,"storePromiseErrors":true,"showPromiseErrors":true},"perf":{"enabled":false},"lock":{"enabled":true,"openReadOnly":true,"unlockObject":true},"useUserSettingsService":true,"offline":{"dbName":"ember-app","offlineEnabled":true,"modeSwitchOnErrorsEnabled":false,"syncDownWhenOnlineEnabled":false},"components":{"flexberryFile":{"uploadUrl":"https://ember-flexberry-designer-dummy.azurewebsites.net/api/File","maxUploadFileSize":null,"uploadOnModelPreSave":true,"showUploadButton":true,"showModalDialogOnUploadError":true,"showModalDialogOnDownloadError":true}},"version":"0.2.0+96a3f1cb"});
}

/* jshint ignore:end */
//# sourceMappingURL=dummy.map
